{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":"Perfecting your decision withPerfectWORK 5.0 <p>Welcome to the PerfectWORK Documentation. Here you will find information and resources to help you learn about PerfectWORK, the next generation business information system with powerful modular design covering all essential aspects of a business.</p> Documentation Learn More"},{"location":"01_application_guide/","title":"Applications","text":"Applications PerfectWORK Platform Finance &amp; Accounting Sales &amp; Distribution CRM &amp; Marketing Website &amp; eCommerce Manufacturing &amp; Warehouse Supply Chain &amp; Logistics  Human Resources Customer Services Retail Store <p>Nothing is easier for you to discover PerfectWORK than subscribing to the PerfectWORK Online offer. You just need a web browser to get started.</p> <p></p> <p>The Online service can be particularly useful to any companies, that just want to get going quickly at low cost. You have immediate access to PerfectWORK's Integrated Business Management System built on the type of enterprise architecture used in many organizations.</p> <p></p> <p>PerfectWORK's Online offer includes several services: hosting at high bandwidth, database management, stable security update, backups, maintenance (24/7 server monitoring), bug fixing and migrations.</p> <p></p> <p>So even if the PerfectWORK Online solution might be the best solution to suit your needs today, you can easily switch to other cloud providers; such as AWS, Google Cloud or Microsoft Azure according to your company's changing requirements or growth, while continuing to use the exact same system. Hence, you do not depend on your host. In addition, PerfectWORK works with standard and open formats and programming languages which allow you to export your data and use them in any other software.</p> <p></p> <p>These advantages give you total control over your data, your software, your platform.</p>"},{"location":"01_application_guide/01_platform/","title":"PerfectWORK Platform","text":"PerfectWORK PLATFORM Getting Started Companies and Users Communication and Collaboration Calendar &amp; Resource Scheduling Knowledge Management <p>Nothing is easier for you to discover PerfectWORK than subscribing to the PerfectWORK Online offer. You just need a web browser to get started.</p> <p></p> <p>The Online service can be particularly useful to any companies, that just want to get going quickly at low cost. You have immediate access to PerfectWORK's Integrated Business Management System built on the type of enterprise architecture used in many organizations.</p> <p></p> <p>PerfectWORK's Online offer includes several services: hosting at high bandwidth, database management, stable security update, backups, maintenance (24/7 server monitoring), bug fixing and migrations.</p> <p></p> <p>So even if the PerfectWORK Online solution might be the best solution to suit your needs today, you can easily switch to other cloud providers; such as AWS, Google Cloud or Microsoft Azure according to your company's changing requirements or growth, while continuing to use the exact same system. Hence, you do not depend on your host. In addition, PerfectWORK works with standard and open formats and programming languages which allow you to export your data and use them in any other software.</p> <p></p> <p>These advantages give you total control over your data, your software, your platform.</p>"},{"location":"01_application_guide/01_platform/01_getting_started/01_overview/","title":"Overview","text":"<p>PerfectWORK is a very feature-filled business application framework, with literally hundreds of applications and modules available. When you first access your PerfectWORK instance, the only functionality you will have is a limited messaging options between users. From there, PerfectWORK allows you to purchase and install the applications you need, as you need them. This flexibility makes PerfectWORK much more accessible than many business software solutions.</p> <p></p> <p>Not long ago, nearly all companies kept their primary information systems in-house. This approach not only requires a lot of capital expense in purchasing servers and software licenses, but also creates a lot of responsibilities and risks in backing up data and ensuring business continuity. Today, more and more companies are choosing to host their business applications in online networks commonly called the cloud. PerfectWORK allows you the flexibility of both options\u2014either hosting on your own hardware, or utilizing PerfectWORK's online software services.</p> <p></p> <p>The best thing about accessing PerfectWORK Online is that you can jump in and start using the software right away. You don't have to decide what operating system (OS) to use, and you don't have to install any software at all. Just enter the URL into your web browser and you are ready to get started.</p> <p></p> <p>Another added benefit of taking this approach is that you will verify that your web browser is up to date and compatible with the latest version of PerfectWORK. You can expect to put a great deal of time into determining which PerfectWORK applications / modules are right for your company. Taking a few hours to use the PerfectWORK Online version is time well spent, and you can put off installing PerfectWORK until you are more certain it is the right software for your business.</p>"},{"location":"01_application_guide/01_platform/01_getting_started/01_overview/#browser-requirement","title":"Browser Requirement","text":"<p>PerfectWORK is designed to run on a variety of modern web browsers. Supported browsers include the following: - Google Chrome (recommended)  - Firefox - Microsoft Edge - Safari</p> <p>Tip</p> <p>Macintosh users will need to make sure they are running macOS X or above. Users running older Macintosh systems are currently having difficulties running PerfectWORK version 3. Also, in our experience, Google Chrome tends to offer the best experience in working with PerfectWORK. </p>"},{"location":"01_application_guide/01_platform/01_getting_started/01_overview/#mobile-phone-and-tablet-support","title":"Mobile phone and tablet support","text":"<p>PerfectWORK has included native support for mobile phones and tablets. Menus are designed to flow and format properly. The new website application even includes a preview within the portal administration to emulate how the site would appear on a mobile phone. While you still suffer many of the limitations that come with a small screen size, the applications are functional and this makes it even easier for developers to create mobile Odoo applications.</p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/","title":"Navigation - UI","text":"<p>The purpose of this document is to provide an overview of how to navigate in PerfectWORK 3.0, what the various Filters, Settings, and Views available within the applications do, and how to use the Activities and Reporting functions. We'll also include some handy tips and tricks for easily getting around the system and making the most out of your experience with PerfectWORK. </p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#application","title":"Application","text":"<p>Once you log in you'll be on PerfectWORK's main menu where applications, or Apps, are represented by icons. At first, you may not see very many apps installed. Each app adds new functions to the database and they're installed as needed.</p> <p>To get started with building out your database, you will need to install the necessary apps for your business needs. To do this, navigate to the Apps application by clicking its icon.</p> <p></p> <p></p> <p></p> <p>Global Search</p> <p>Apps aren't listed in alphabetical order, but you can easily navigate to an app by simply typing its name from the main menu. As you type, the installed apps will filter as well as other related items. This is extremely useful when you have multiple apps installed.</p> <p></p> <p></p> <p></p> <p>Clicking the Apps icon will take you to the app repository where you can browse around for the apps that you want to install.  From this screen, you can see which apps your database has installed already and you can browse through the available apps to install.</p> <p>If you click on the button on any application, you can see the application's overview page to see if you would like to use it before installing. When you're ready to install an app, simply click the  button and wait for the application to load.</p> <p>Please Note: For larger apps, this process could take several minutes. </p> <p></p> <p></p> <p></p> <p>Once the app is installed, you will be routed to either the initial setup screen of the application to begin configuring it, or to your database's homepage where you can see your newly installed apps.</p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#search","title":"Search","text":"<p>The Search area is persistent in every application in PerfectWORK and provides the ability to easily find information.</p> <p></p> <p>Search is a very straightforward feature and is tailored to the application you're using. For example, you won't be able to find a Sale Order from the search bar in the CRM app.</p> <p></p> <p>By typing in the name of a customer, project, employee, or another object, you can retrieve that to view within the application that you're using. For the purposes of this document, we've highlighted an enhanced search feature in PerfectWORK that will make searching even easier. </p> <p></p> <p>As you type in the search bar, you will see a dropdown menu appear with different options available to help you quickly locate your desired information. </p> <p></p> <p></p> <p></p> <p>In this example, we've searched the Sales application for \"Peter\" and are looking for a client \"Peter Lim\". As you begin typing in the search bar, PerfectWORK gives the option to search specific customer within the Sales application for the desired keyword.</p> <p></p> <p>Any option with the arrow  \u2023  icon next to it can be expanded with a click, and PerfectWORK will display the available items for the data type that match your keyword. The example above shows the \"Customer\" section expanded and, as you can see, all customers with the keyword \"Peter\" in their profile are shown.</p> <p></p> <p>From here you can either select the specific customer record you want to see, or you can select the option to display all customers with \"Peter\" in their profile.</p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#filters","title":"Filters","text":"<p>Filters appear directly beneath the Search bar and allow you to customize the data that is displayed on a given page within any application in PerfectWORK. While the filters themselves will vary depending on what application you're using. For this example we will go over the basics of how to use filters in the Sales application. </p> <p></p> <p>To get started, navigate to the Sales app. (If it's not installed, follow the instructions above to install it.)</p> <p></p> <p>Once you've launched the Sales application, Select Orders \u2023 Customers let's take a look at the Search area at the top right of the screen. </p> <p></p> <p></p> <p></p> <p>Toggle the Filters Menu</p> <p>If you do not see Filters or Group By or Favorites underneath the search bar, click the spyglass icon (with the + sign in it) and they will appear.</p> <p>If you want to hide them from view, click the  spyglass icon (with - sign in it) and they will be hidden again. </p> <p>Click the  Filters option to review the Filters menu. Let's now go over how to make the most of your Filters. </p> <p></p> <p>When you review the Filters that are available within each application, the options will be specific to the data that's housed within that application. The Sales application is displayed for this example, so the options you see in the menu are specific to Sales data. There will typically be a set of default filters that are present in the dropdown menu for you to choose from.</p> <p></p> <p>If you don't see the data that you want to view in the default filters, you can use the Add Custom Filter option to create your own filters. </p> <p></p> <p></p> <p></p> <p>When adding a custom filter, you can set as many conditions as you'd like for the information you need to pull. When you add multiple conditions to the same custom filter, PerfectWORK automatically adds the \"or\" parameter to the search. So, if you want to search for customers who like Chocolate Icing OR Strawberry Icing, you would set the first condition, then click Add a Condition</p> <p></p> <p> </p> <p></p> <p>This opens a new section where you'll enter your \"or\" conditions. When you're done, click . </p> <p></p> <p> </p> <p></p> <p>After you select the filters that you want to use, PerfectWORK will automatically search the records in the model you\u2019re on for the information you've selected. Your filter will be reflected in the search bar.</p> <p></p> <p></p> <p></p> <p>Saving a Custom Filter</p> <p>Custom filters, by default, will be lost once you leave the application that you're using. If you would like to save these custom filters for future use, then you'll need to utilize the Favorites  feature, covered below, to accomplish this. </p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#group-by","title":"Group By","text":"<p>This feature allows you to change how your data is grouped together to better visualize your information and inform your workflows. For example, you may want to see your pipeline data grouped by Salesperson, so you can review which opportunities are being handled by which of your salespeople. This is just one small example of what this feature can do.</p> <p></p> <p>Like the Filters function discussed above, the ways that PerfectWORK will allow you to group your data will depend on the application that you're using and the page that you're on within that application. </p> <p></p> <p> </p> <p></p> <p>Also, like the Filters option, you can use the Add Custom Group button to create your own groupings if the default options do not suit your needs. Unlike  Filters, custom groupings will only allow you to add one parameter to a Custom Group; however, you may create multiple Custom Groups and apply them together. PerfectWORK will add the grouping methods to one another and group the data as you've specified. </p> <p></p> <p> </p> <p></p> <p>Saving a Custom Group</p> <p>Custom Groups, by default, will be lost once you leave the application that you're using. If you would like to save these custom Groups for use in the future, then you will need to use the   Favorites   feature, covered in the next section, to accomplish this. </p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#favorites","title":"Favorites","text":"<p>This feature allows you to save custom searches that you've built using the Filters and  Group By options covered above. Once you have your search or grouping parameters configured and selected, click the  Favorites   dropdown menu, then click  Save current search and the following window will appear.  </p> <p></p> <p>In this window, enter a name for your Search or Custom Group, choose whether or not you want the system to default to this search when you open the application, and if you'd like to share this search with all other users of this application. Once you have made your selections, click SAVE.</p> <p></p> <p> </p> <p></p> <p>After you've successfully saved your custom Search or Group to your Favorites, simply go to Favorites  and select it from the dropdown menu to utilize them in the future.</p> <p>Deleting a Favoutite</p> <p>If you would like to delete any of your Favorites, you simply click the trash can  next to the name of the Favorite you want to delete and then confirm the deletion.   </p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#views","title":"Views","text":"<p>This feature is similar to Group By, but instead of changing how the information is grouped on the page, it will change the method by which all of the data is displayed. Think of changing your Group By method like re-arranging information on a pie chart, while changing a View is like moving from a pie chart to a line graph. </p> <p></p> <p>PerfectWORK has several different Views that you can choose from. Not all of them are available in every application, but we will cover all of them in this document so that when you come across a View you will know what it does. </p> <p></p> <p>You can find the different Views that are available within any application tucked under the Search bar at the top right. Each View is denoted by an icon. Available views will vary between Apps.</p> <p></p> <p>We will be going through each one and will provide examples of how the Views look when selected. For the purposes of this article, we will be using the same data for every view so that you can see the ways that your data can be manipulated simply by changing a View.</p> <p></p> <p>If you hover over each View's icon, you will see a tool-tip telling you the name of the View. </p> <p></p> <p></p> <p></p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#kanban","title":"Kanban","text":"<p>This View will allow you to create a kanban board to view your data. Kanban is an organizational method that typically uses columns and cards to visualize data. As each project, task, or item moves through the kanban sequence from left to right,  you can easily track where each item is in its lifecycle. The example below is from the Sales Pipeline within the CRM application. As you can see from the below screenshot, the Kanban View is selected from the View options and we have our Sales Pipeline organized by stages.</p> <p> </p> <p> Each column represents a different stage in the Sales process and you can see the Opportunities under each stage. You can always change the stage that an item is in by dragging and dropping it into the correct column. You can also re-organize the columns by dragging and dropping them to the appropriate placement within the process flow. </p> <p> To the far right, you also have the option to  Add a Column to create a new Stage of the process flow. Once created, you can drag-and-drop to wherever you'd like within the Kanban view. Once your stages are set up, you can begin assigning items to them.</p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#list","title":"List","text":"<p>This View will organize your data into a list format. As you can see below, all of the same information from the Pipeline View is still present in our List view (e.g. Stage, Expected Revenue, Opportunity, and Customer) and some new information has become visible in this view (e.g. Probability and Created On). </p> <p> </p> <p></p> <p>Some column headers will show an arrow on hover. This indicates that clicking that column header will sort it in either ascending or descending order, and clicking it again will reverse the sort order. Not all fields have this feature.</p> <p>Exposing Columns</p> <p>On the top-right of many different list views in PerfectWORK, you'll see the vertical ellipses  icon. Clicking this icon allows you to expose other available columns. Because the data availability will change between apps and views, the options in this fly-out menu will also differ.</p> <p> </p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#calendar","title":"Calendar","text":"<p>This View allows you to see your Scheduled Activities in a calendar. You can see your upcoming events by the Day, Week, or Month. The calendar will only show items that are created under the Schedule Activity section for each item listed in our Sales Pipeline. </p> <p>As you can see from the screenshot below, the Calendar View is selected from the View options and the calendar is displayed by the Month. </p> <p> </p> <p></p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#pivot","title":"Pivot","text":"<p>This View allows you to display your data in a Pivot Table. In the following example, the Pivot View is selected from the View menu. This displays our Sales Pipeline data in this format, showing the Expected Revenue for October at every Stage. Note that our table only displays October because that's when our sample database was created and there is no prior data.</p> <p> </p> <p></p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#graph","title":"Graph","text":"<p>This View allows you to create Graphs and visualize data points in four different ways: </p> <p></p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#pie-chart","title":"Pie Chart","text":""},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#bar-chart","title":"Bar Chart","text":""},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#line-chart","title":"Line Chart","text":"<p>To change the input data that gets used to create the different Graphs, click the MEASURE button and select the data that you would like to visualize from the dropdown menu.</p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#activity","title":"Activity","text":"<p>This View allows you to see all of your upcoming Scheduled Activities for your tasks, clients, leads, opportunities, or any other element in your PerfectWORK applications. In the example below, we're in the CRM application so these are the scheduled activities in our Sales Pipeline for four different Opportunities. Each Opportunity has its own row and the dates of each scheduled activity shows in a column to the right. Activities in red are overdue, activities in orange are scheduled for today, and activities in green are scheduled for a time in the future. You can schedule additional activities by clicking the SCHEDULE AN ACTIVITY button at the bottom of the table. </p> <p> </p> <p></p> <p>If you click on an Activity in the grid, you'll see what the Activity is, the scheduled date, and you can mark it as Done by clicking the  checkmark icon that's greyed out on the right. You can also schedule additional activities for the row by clicking the  SCHEDULE AN ACTIVITY button at the bottom of the pop-up. </p> <p></p> <p></p> <p></p>"},{"location":"01_application_guide/01_platform/01_getting_started/02_navigation/#actions","title":"Actions","text":"<p>This feature allows you to take specific actions on an object within PerfectWORK applications. This could be anything from setting up access to your system for your users, sending a customer an SMS message, or editing a customer record. To get started, navigate to the Contacts application. If you don't have this application installed, please do so now. </p> <p></p> <p></p> <p></p> <p>When you click the Action  menu, you will get a set of pre-determined actions that you can take to modify or interact with that object. These options will vary depending on the application that you're in, and what you are currently viewing or modifying. As you work in PerfectWORK, keep an eye out for the Action  menu as it can be a great shortcut to what you're trying to do. </p>"},{"location":"01_application_guide/01_platform/02_companies_users/01_companies/","title":"Companies","text":"<p>A centralized management environment allows you to select multiple companies simultaneously and set their specific warehouses, customers, equipment, and contacts. It provides you the ability to generate reports of aggregated figures without switching interfaces, which facilitates daily tasks and the overall management process.</p>"},{"location":"01_application_guide/01_platform/02_companies_users/01_companies/#manage-companies-and-records","title":"Manage companies and records","text":"<p>Go to Settings \u2023 Manage Companies and fill in the form with your company\u2019s information. If a Parent Company is selected, records are shared between the two companies (as long as both environments are active).</p> <p></p> <p></p> <p></p> <p>Switch between or select multiple companies by enabling their selection boxes to activate them. The grayed company is the one which environment is in use. To switch environments, click on the company\u2019s name. In the example below, the user has access to two companies, one is activated, and the environment in use is of Best Company (Singapore).</p> <p></p> <p></p>"},{"location":"01_application_guide/01_platform/02_companies_users/01_companies/#employees-access","title":"Employees\u2019 access","text":"<p>Once companies are created, manage your employees\u2019 Access Rights for Multi Companies.</p> <p></p> <p></p> <p></p> <p>If a user has multiple companies activated on his database, and he is editing a record, the editing happens on the record\u2019s related company.</p> <p></p> <p>Example: if editing a sale order issued under Best Company (Singapore) while working on the Best Company (Malaysia) environment, the changes are applied under Best Company (Singapore) the company from which the sale order was issued).</p> <p></p> <p>When creating a record, the company taken into account is:</p> <ul> <li>The current company (the one active) or,</li> <li>No company is set (on products and contacts\u2019 forms for example) or,</li> <li>The company set is the one linked to the document (the same as if a record is being edited).</li> </ul>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/","title":"Users","text":""},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#managing-users","title":"Managing Users","text":"<p>PerfectWORK defines a user as someone who has access to a database to perform daily tasks. You can add as many users as you need and, in order to restrict the type of information each user can access, rules can be applied. Users and access rights can be added and changed at any point of time.</p> See Also <ul> <li>Change Language</li> <li>Access Right</li> </ul>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#add-individual-users","title":"Add individual users","text":"<p>Go to Settings \u2023 Manage Users and click on Create. </p> <p> </p> <p> Fill in the form with the needed information. Under the tab Access Right choose the group within each application the user can have access to. The list of applications shown is based on the applications installed on the database.</p> <p></p> <p> </p> <p> When you are done editing the page and have Saved it, an invitation email is automatically sent to the user. The user must click on it to accept the invitation and create a login.</p>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#deactivate-users","title":"Deactivate users","text":"<p>Go to Settings \u2023 Users &amp; Companies \u2023 Users, open the user you want to deactivate, click on Action, and then on Archive.</p> <p>Danger</p> <p>NEVER deactivate the main user (admin)</p>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#passwords-management","title":"Passwords Management","text":""},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#reset-password","title":"Reset Password","text":""},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#enable-password-resets-from-login-page","title":"Enable password resets from login page","text":"<p>It is possible to enable password resets directly from the login page.</p> <p>To do so, go to Settings \u2023 General Settings, Under Users Tab, activate Password Reset and Save.  </p>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#send-reset-instructions-to-users","title":"Send reset instructions to users","text":"<p>Go to Settings \u2023 Users &amp; Companies \u2023 Users, select the user out of the list and click on Send Password Reset Instructions on its user form. An email is automatically sent to them.</p> <p>Note</p> <p>The Send Password Reset Instructions button only appears if the PerfectWORK invitation email has already been confirmed by the user.</p> <p>This email contains all the instructions needed to reset the password, along with a link redirecting the user to an PerfectWORK login page.</p>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#change-users-passwords","title":"Change users\u2019 passwords","text":"<p>Go to Settings \u2023 Users &amp; Companies \u2023 Users and select a user to access its form. Click on the Action button and select Change Password.</p> <p></p> <p></p> <p></p> <p>Enter a new password and confirm by clicking on Change Password.</p> <p>Note</p> <p>This operation only modifies the password of the users locally and does not affect their odoo.com account. If you want to change the odoo.com password, you can send the password reset instructions.</p>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#multi-companies","title":"Multi Companies","text":"<p>The Multi Companies field allows you to set to which of the multiple companies database you hold the user can have access.</p> <p>Note</p> <p>Note that if not handled correctly, it may be the source of a lot of inconsistent multi-company behaviors. Therefore, a good knowledge of PerfectWORK is required. For technical explanations refer to multi-company Guidelines documentation.</p> <p>See Also</p> <ul> <li>Companies</li> </ul>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#change-language","title":"Change Language","text":"<p>PerfectWORK provides you with the option to manage PerfectWORK in different languages, and each user can use PerfectWORK in his own language.</p> <p></p>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#load-your-desired-language","title":"Load your desired language","text":"<p>The first thing to do is to load your desired language on your PerfectWORK database.</p> <p>From the general dashboard click on the Settings app; on the top left of the page select Translations \u2023 Laungauges, select a language to install and click on LOAD.</p> <p></p> <p></p> <p></p> <p>''' note     If you check the \u201cWebsites to translate\u201d checkbox you will have the option to change the navigation language on your website.</p>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#change-your-language","title":"Change your language","text":"<p>User can change the language to the installed language by going to the drop-down menu at the top right side of the screen, choose Preferences.</p> <p></p> <p></p> <p></p> <p>Then change the Language setting to your installed language and click SAVE.</p>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#change-other-users-language","title":"Change other user's language","text":"<p>PerfectWORK also gives you the possibility for each user to choose his preferred language.</p> <p>To change the language for a different user, choose Users \u2023 Users from the Settings app. Here you have a list of all users and you can choose the user who you\u2019d like to change the language for. Select the user and click on Edit in the top left corner. Under Preferences you can change the Language to any previously installed language and click SAVE.</p> <p></p> <p></p>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#access-right","title":"Access Right","text":"<p>Activate the developer mode, then go to Settings \u2023 Users &amp; Companies \u2023 Groups.</p>"},{"location":"01_application_guide/01_platform/02_companies_users/10_users/#groups","title":"Groups","text":"<p>When choosing the groups the user can have access under Access Rights, details of the rules and inheritances of that group are not shown, so this is when the menu Groups comes along. Groups are created to define rules to models within an application.</p> <p></p> <p>Under Users, have a list of the current ones. The ones with internal user access are shown in black.</p> <p></p> <p></p> <p></p> <p>Inherited means that users added to this application group are automatically added to the following ones. In the example below, users who have access to the group Extra Right / Technical Features also have access to Internal User group</p> <p></p> <p></p> <p></p> <p>Important</p> <p>Remember to always test the settings being changed in order to ensure that they are being applied to the needed and right users.</p> <p>The Menus tab is where you define which menus (models) the user can have access to.</p> <p></p> <p></p> <p></p> <p>Access Rights rules are the first level of rights. The field is composed of the object name, which is the technical name given to a model. For each model, enable the following options as appropriate:</p> <ul> <li>Read: the values of that object can be only seen by the user.</li> <li>Write: the values of that object can be edited by the user.</li> <li>Create: values for that object can be created by the user.</li> <li>Delete: the values of that object can be deleted by the user.</li> </ul> <p></p> <p></p> <p></p> <p>As a second layer of editing and visibility rules, Record Rules can be formed. They overwrite, or refine, the Access Rights.</p> <p></p> <p>A record rule is written using a Domain. Domains are conditions used to filter or searching data. Therefore, a domain expression is a list of conditions. For each rule, choose among the following options: Read, Write, Create and Delete values.</p> <p></p> <p></p> <p></p> <p>Important</p> <p>Making changes in access rights can have a big impact on the database. For this reason, we recommend you to contact your PerfectWORK Consultants or our Support Team, unless you have knowledge about Domains in PerfectWORK.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/","title":"CONNECT Application","text":""},{"location":"01_application_guide/01_platform/03_connect/01_overview/#get-started-with-connect","title":"Get Started with CONNECT","text":"<p>CONNECT allows you to bring all of your company\u2019s communication together through messages, notes, and chat. Share information, projects, files, prioritize tasks, and stay connected with colleagues and partners throughout applications. Forge better relationships, increase productivity and transparency by promoting a convenient way of communicating.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#choose-your-notifications-preference","title":"Choose your notifications preference","text":"<p>Access your Preferences and choose how you would like your notifications to be handled.  </p> <p>By default, the field is set as Handle by Emails making messages, notes, and notifications where you were mentioned or that you follow, to be sent through email. By choosing Handle in PerfectWORK, they are shown in the Inbox.  Messages can then be Marked as Todo, Replied, or Marked as Read.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#start-chatting","title":"Start Chatting","text":"<p>The first time you log in to your account, PWBot sends you a message asking for permission to receive desktop notifications to chats. If accepted, you receive push notifications to the messages sent to you despite of where you are in PerfectWORK.</p> <p>Tip</p> <p>To stop receiving desktop notifications, reset the notifications settings of your browser.</p> <p>To start a chat, click on New Message on the Messaging Menu, or go to Connect and send a Direct Message.   You can also create public and private channels.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#mentions-in-the-chat-and-on-the-chatter","title":"Mentions in the chat and on the Chatter","text":"<p>To mention a user within a chat or the chatter type @user-name; to refer to a channel, type #channel-name. A notification is sent to the user mentioned either to his Inbox or through email, depending on his settings.</p> <p>Tip</p> <p>When a user is mentioned, the search list (list of names) suggests values first based on the task\u2019s followers, and secondly on Employees. If the record being searched does not match with either a follower or employee, the scope of the search becomes all partners.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#chat-status","title":"Chat status","text":"<p>It is helpful to see what colleagues are up to and how quickly they can respond to messages by checking their Status. The status is shown on the left side of a contact\u2019s names on Discuss\u2019 sidebar and on the Messaging menu.</p> <ul> <li>Green = online</li> <li>Orange = away</li> <li>White = offline</li> <li>Airplane = out of the office</li> </ul>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#efficiently-communicate-using-channels","title":"Efficiently Communicate Using Channels","text":"<p>You can use channels to organize discussions between individual teams, departments, projects, or any other group that requires regular communication. This way, you keep everyone in the loop updated with the latest developments.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#public-and-private-channels","title":"Public and Private channels","text":"<p>A Public channel can be seen by everyone, while a Private one is only visible to users invited to it.</p> <p>Tip</p> <p>A public channel is best used when many employees need to access information (such as company announcements), whereas a private channel could be used whenever information should be limited to specific groups (such as a specific department).</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#configuration-options","title":"Configuration options","text":"<p>You can configure a channel\u2019s name, description, email alias, and privacy by clicking on the Channel Settings icon on the sidebar.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#privacy-and-members","title":"Privacy and Members","text":"<p>Changing Who can follow the group\u2019s activities? allows you to control which groups can have access to the channel. Note that allowing Everyone to follow a private channel lets other users view and join it, as they would a public one.  If you choose Invited people only, go to the Members tab to add your members, or, go to Connect\u2019 main page, select the channel and click on Invite.  For Selected group of users, the option Auto Subscribe Groups automatically add its members as followers. In other words, while Authorized Groups limits which users can access the channel, Auto Subscribe Groups automatically adds the user as a member as long as they are part of the group.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#use-a-channel-as-a-mailing-list","title":"Use a channel as a mailing list","text":"<p>Choosing to Send messages by email configures the channel to behave as a mailing list.  Enabling this option allows you to Moderate this channel, meaning that messages will need to be approved before being sent.  Under the Moderation tab choose as many moderators as you need, and if you would like them to receive an Automatic notification.  Mark Send guidelines to new subscribers to automatically send instructions to newcomers.  Moderators can: Accept, Reject, Discard, Always Allow or Ban messages. </p> <p>Note</p> <p>Members of a mailing channel receive messages through email regardless of their notification preference.</p> <p>Once a channel is moderated, the menu Ban List allows you to add email addresses per moderated channel to auto-ban them from sending messages.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#quick-search-bar","title":"Quick search bar","text":"<p>Once at least 20 channels, direct message and live chat conversations (if the module is installed on your database) are pinned in the sidebar, a Quick search\u2026 bar is displayed. It is a clever way to filter conversations and quickly find the one you need.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#finding-channels","title":"Finding channels","text":"<p>Click on Channels (on the sidebar), browse through the list of public channels, and join or leave them from a single screen. Apply filters criteria and save it for later use. The search function accepts wildcards by using the underscore character ()_ to represent a single character.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#get-organized-by-planning-activities","title":"Get Organized by Planning Activities","text":"<p>When you plan activities you minimize the risk of uncertainties, as you provide clear directions for the course of your next action. In addition to that, you do not leave space for wasteful activities and reduce the chance of having overlapping actions between team members.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#where-do-i-see-my-schedule-activities","title":"Where do I see my schedule activities?","text":"<p>Access and manage your activities wherever you are in PerfectWORK by the Activities menu.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#plan-activities","title":"Plan activities","text":"<p>Activities can be planned and managed from the chatter by clicking on Schedule activity, or through Kanban views.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#set-your-activity-types","title":"Set your activity types","text":"<p>A number of activities types are available by default in PerfectWORK (call, email, meeting, etc.). However, you can set new ones going to Settings \u2023 Activity types.</p> <p>Tip</p> <p>If you need to create an activity type with an available calendar, make sure to create it with an Action to Perform set as Meeting.</p>"},{"location":"01_application_guide/01_platform/03_connect/01_overview/#recommend-next-activities","title":"Recommend next activities","text":"<p>PerfectWORK helps you to plan a flow of activities by allowing you to set Recommended Next Activities.  Once the respective activity is completed, select Done &amp; Schedule Next and next steps are suggested to you.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/","title":"Email Communication","text":""},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#send-and-receive-emails-in-perfectwork-with-an-email-server","title":"Send and Receive Emails in PerfectWORK with an Email Server","text":""},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#if-you-are-a-user-of-perfectwork-online","title":"If you are a user of PerfectWORK Online","text":"<p>You have nothing to do! PerfectWORK sets up its own mail servers for your database. Outgoing and incoming emails work out-of-the-box!  Unless you plan to send large batches of mass mailing that could require the use of an external mail server, simply enjoy your new PerfectWORK database.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#scope-of-this-documentation","title":"Scope of this documentation","text":"<p>This document is mainly dedicated to PerfectWORK on-premise users who don\u2019t benefit from an out-of-the-box solution to send and receive emails in PerfectWORK, unlike PerfectWORK Online.</p> <p>Warning</p> <p>If no one in your company is used to manage email servers, we strongly recommend that you opt for those PerfectWORK hosting solutions. Their email system works instantly and is monitored by professionals. Nevertheless you can still use your own email servers if you want to manage your email server\u2019s reputation yourself.</p> <p>You will find here some useful information on how to integrate your own email solution with PerfectWORK.</p> <p>Note</p> <p>Office 365 email servers don\u2019t easily allow to send external emails from hosts like PerfectWORK. Refer to Microsoft\u2019s documentation to make it work.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#how-to-manage-outbound-messages","title":"How to manage outbound messages","text":"<p>As a system admin, go to Settings \u2023 General Settings and check External Email Servers. Then, click Outgoing Mail Servers to create one and reference the SMTP data of your email server. Once all the information has been filled out, click on Test Connection.  Here is a typical configuration for a G Suite server.</p> <p>Then set your email domain name in the General Settings.</p> <p>Note</p> <p>If you get a [AUTHENTICATIONFAILED] Invalid credentials (Failure) warning when you Test Connection on a Gmail address, activate the Less secure app access option. A direct link can be accessed here.  In addition to that, enable the IMAP setting on your Gmail account.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#can-i-use-an-office-365-server","title":"Can I use an Office 365 server","text":"<p>You can use an Office 365 server if you run PerfectWORK on-premise. Office 365 SMTP relays are not compatible with PerfectWORK Online unless you configure PerfectWORK to force the outgoing \u201cFrom\u201d address .</p> <p>Please refer to Microsoft\u2019s documentation to configure a SMTP relay for your PerfectWORK\u2019s IP address.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#how-to-use-a-g-suite-server","title":"How to use a G Suite server","text":"<p>You can use an G Suite server for any PerfectWORK hosting type. To do so you need to setup the SMTP relay service. The configuration steps are explained in Google documentation.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#restriction","title":"Restriction","text":"<p>Please note that port 25 is blocked for security reasons on our PerfectWORK Online platform. Try using 465 or 587.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#use-a-default-from-email-address","title":"Use a default \u201cFrom\u201d email address","text":"<p>Sometimes, an email\u2019s \u201cFrom\u201d (outgoing) address can belong to a different domain, and that can be a problem.  For example, if a customer with address mary@customer.example.com responds to a message, PerfectWORK will try to redistribute that same email to other subscribers in the thread. But if the domain customer.example.com forbids that kind of usage for security, the PerfectWORK\u2019s redistributed email would get rejected by some recipients\u2019 mail servers.  To avoid those kind of problems, you should make sure all emails use a \u201cFrom\u201d address from your authorized domain.  If your MTA supports SRS (Sender Rewriting Scheme), you can enable it to handle these situations. However, that is more complex and requires more technical knowledge that is not meant to be covered by this documentation.  Instead, you can also configure PerfectWORK to do something similar by itself:</p> <ul> <li>Set your domain name in the General Settings.</li> <li>Click on Outgoing Mail Servers</li> <li>Create a new one.</li> <li> <p>Fill its From Filter.</p> <ol> <li> <p>Use a domain (such as mycompany.example.com) to keep the original \u201cFrom\u201d address for mails that come from that domain.</p> </li> <li> <p>Use an address (such as outgoing@mycompany.example.com) to allow only that outgoing address.</p> </li> <li> <p>Keep it empty to use this server for any email address.</p> </li> </ol> </li> </ul> <p>With this configuration in place, if PerfectWORK sends an email that doesn\u2019t match any of the from filters, it will alter the email\u2019s \u201cFrom\u201d before sending it to the MTA.      It will use the default outgoing email address, composed like this: {mail.default.from}@{mail.catchall.domain}.</p> <ul> <li> <p>In developer mode, go to Settings \u2023 Technical \u2023 Parameters \u2023 System Parameters.</p> </li> <li> <p>Add these system parameters:</p> <ol> <li> <p>mail.default.from: local part of default outgoing email address.</p> </li> <li> <p>mail.catchall.domain: domain part of default outgoing email address.</p> </li> </ol> </li> </ul>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#how-to-manage-inbound-messages","title":"How to manage inbound messages","text":"<p>PerfectWORK relies on generic email aliases to fetch incoming messages.</p> <ul> <li> <p>Reply messages of messages sent from PerfectWORK are routed to their original discussion thread (and to the inbox of all its followers) by the catchall alias (catchall@).</p> </li> <li> <p>Bounced messages are routed to bounce@ in order to track them in PerfectWORK. This is especially used in PerfectWORK Email Marketing to opt-out invalid recipients.</p> </li> <li> <p>Original messages: Several business objects have their own alias to create new records in PerfectWORK from incoming emails:</p> <ul> <li> <p>Sales Channel (to create Leads or Opportunities in PerfectWORK CRM),</p> </li> <li> <p>Support Channel (to create Tickets in PerfectWORK Helpdesk),</p> </li> <li> <p>Projects (to create new Tasks in PerfectWORK Project),</p> </li> <li> <p>Job Positions (to create Applicants in PerfectWORK Recruitment),</p> </li> <li> <p>etc.</p> </li> </ul> </li> </ul> <p>Depending on your mail server, there might be several methods to fetch emails. The easiest and most recommended method is to manage one email address per PerfectWORK alias in your mail server. </p> <ul> <li> <p>Create the corresponding email addresses in your mail server (catchall@, bounce@, sales@, etc.).</p> </li> <li> <p>Set your domain name in the General Settings.</p> </li> <li> <p>If you use PerfectWORK on-premise, create an Incoming Mail Server in PerfectWORK for each alias. You can do it from the General Settings as well. Fill out the form according to your email provider\u2019s settings. Leave the Actions to Perform on Incoming Mails blank. Once all the information has been filled out, click on TEST &amp; CONFIRM.</p> </li> <li> <p>If you use PerfectWORK Online or PerfectWORK.sh, We do recommend to redirect incoming messages to PerfectWORK\u2019s domain name rather than exclusively use your own email server. That way you will receive incoming messages without delay. Indeed, PerfectWORK Online is fetching incoming messages of external servers once per hour only. You should set redirections for all the email addresses to PerfectWORK\u2019s domain name in your email server (e.g. catchall@mydomain.ext to catchall@mycompany.PerfectWORK.com).</p> </li> </ul> <p>Tip</p> <p>All the aliases are customizable in PerfectWORK.  Object aliases can be edited from their respective configuration view. To edit catchall and bounce aliases, you first need to activate the developer mode.  Then go to Settings \u2023 Technical \u2023 Parameters \u2023 System Parameters to customize the aliases (mail.catchall.alias &amp; * mail.bounce.alias*).</p> <p>Note</p> <p>By default inbound messages are fetched every 5 minutes in PerfectWORK on-premise. You can change this value in developer mode. Go to Settings \u2023 Technical \u2023 Automation \u2023 Scheduled Actions and look for Mail: Fetchmail Service.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#set-up-different-dedicated-servers-for-transactional-and-mass-mails","title":"Set up different dedicated servers for transactional and mass mails","text":"<p>PerfectWORK is subject to a daily email limit to prevent abuse. However, if needed, you can use a separate Mail Transfer Agent (MTA) servers for transactional e-mails and mass mailings. Example: use PerfectWORK\u2019s own mail server for transactional e-mails, and Sendgrid, Amazon SES, or Mailgun for mass mailings. Another alternative is to use Postmark for transactional e-mails, and Amazon SES or Sendgrid for mass mailings.</p> <p>Note</p> <p>A default outgoing email server is already configured. You should not create an alternative one unless you want to use a specific external outgoing email server for technical reasons.</p> <p>To do this, you should first activate the developer mode and then go to Settings \u2023 Technical \u2023 Outgoing e-mail servers. There you have to create two e-mail MTA server settings. One for transactional e-mails and one for mass mail servers. Be sure to mark the priority of transactional e-mail servers as low as the mass email servers.</p> <p>Now, go to Email Marketing \u2023 Settings and enable Dedicated Server. With these settings, PerfectWORK uses the server with the lower priority for transactional emails, and the server here selected for mass mails. Note that in this case, you have to set your domain\u2019s Sender Policy Framework (SPF) records to include both transactional and mass mail servers. If your server resides with xxxx.PerfectWORK.com, the available options are Sendinblue and Mailchimp, as your e-mails would be originated from the xxxx.PerfectWORK.app domain.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#sending-emails-with-perfectwork","title":"Sending emails with PerfectWORK","text":""},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#using-your-email-domain-in-perfectwork","title":"Using your email domain in PerfectWORK","text":"<p>Documents in PerfectWORK (a CRM opportunity, a sales order, an invoice \u2026) have a discussion thread, called chatter.  When you post a message in the chatter, this message is sent by email to the followers of the document. If a follower replies to the message, the reply updates the chatter, and PerfectWORK relays the reply to the followers.  Emails from your users to partners (customers, vendors) are sent from the email address of your users. Similarly, emails from partners to users are sent from the email address of the partners. This allows you to recognize at a glance who sent an email relayed by PerfectWORK.  If your database is hosted on our cloud (PerfectWORK Online), it is not necessary to add an outgoing email server to send emails from your custom domain. You can enjoy this feature by using the default PerfectWORK email server.</p> <p>Important</p> <p>The PerfectWORK server is subject to a daily email limit to prevent abuse. The default limit is 200 emails sent per day for databases with an subscription. This limit can be increased under certain conditions. See our FAQ or contact support for more information.</p> <p>However, it is recommended that you configure your domain name to ensure that emails from your users reach your partners, rather than being considered spam.  For the same reason, we recommend that you always give your users an email address from a domain you manage, rather than a generic email address (gmail.com, outlook.com, etc.).</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#be-spf-compliant","title":"Be SPF compliant","text":"<p>The Sender Policy Framework (SPF) protocol allows the owner of a domain name to specify which servers are allowed to send email from that domain. When a server receives an incoming email, it checks whether the IP address of the sending server is on the list of allowed IPs according to the SPF record of the sender.</p> <p>Note</p> <p>The SPF verification is performed on the domain mentioned in the Return-Path field of the email. In the case of an email sent by PerfectWORK, this domain corresponds to the value of the mail.catchall.domain key in the database system parameters.  See the documentation on incoming emails.</p> <p>The SPF policy of a domain is set using a TXT record. How to create or modify a TXT record depends on the provider hosting the DNS zone of your domain name. In order for the verification to work properly, each domain can only have one SPF record.</p> <p>If your domain name does not yet have an SPF record, the content of the record to create is as follows: <pre><code>v=spf1 include:_spf.PerfectWORK.com ~all\n</code></pre> If your domain name already has an SPF record, you need to update this record (and do not create a new one).</p> <p>Example</p> <p>If your TXT record is v=spf1 include:_spf.google.com ~all, you need to edit it to add include: _spf.perfectwork.app: v=spf1 include:_spf.perfectwork.app include:_spf.google.com ~~all</p> <p>You can check if your SPF record is valid with a free tool like MXToolbox SPF.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#enable-dkim","title":"Enable DKIM","text":"<p>The DomainKeys Identified Mail (DKIM) allows you to authenticate your emails with a digital signature.</p> <p>When sending an email, the PerfectWORK server includes a unique DKIM signature in the headers. The recipient\u2019s server decrypts this signature using the DKIM record in your domain name. If the signature and the key contained in the record match, this guarantees that your message is authentic and has not been altered during transport.</p> <p>To enable DKIM, you must add a CNAME record to the DNS zone of your domain name: <pre><code>PerfectWORK._domainkey IN CNAME PerfectWORK._domainkey.PerfectWORK.app.\n</code></pre></p> <p>Tip</p> <p>If your domain name is mycompany.com, you need to create a subdomain PerfectWORK._domainkey.mycompany.com whose canonical name is PerfectWORK._domainkey.PerfectWORK.app.</p> <p>How to create or modify a CNAME record depends on the provider hosting the DNS zone of your domain name. The most common providers are list below.</p> <p>You can check if your DKIM record is valid with a free tool like DKIM Core. If a selector is asked, enter PerfectWORK.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#check-your-dmarc-policy","title":"Check your DMARC policy","text":"<p>The Domain-based Message Authentication, Reporting &amp; Conformance (DMARC) is a protocol that unifies SPF and DKIM. The instructions contained in the DMARC record of a domain name tell the destination server what to do with an incoming email that fails the SPF and/or DKIM check.</p> <p>There are three DMARC policies: - p=none - p=quarantine - p=reject</p> <p>p=quarantine and p=reject instruct the server that receives an email to quarantine that email or ignore it if the SPF and/or DKIM check fails.</p> <p>If your domain name uses DMARC and has defined one of these policies, it is therefore imperative to be SPF compliant or to enable DKIM.</p> <p>Danger</p> <p>Yahoo or AOL are examples of email providers with a DMARC policy set to p=reject. We strongly advise against using an @yahoo.com or @aol.com address for your users. These emails will never reach their recipient.</p> <p>p=none is used for the domain owner to receive reports about entities using their domain. It should not impact the deliverability if the DMARC check fails.</p> <p>You can check the DMARC record of a domain name with a tool like MXToolbox DMARC.</p> <p>If one of your partners, customer or vendor, uses DMARC and has defined one of these policies, the PerfectWORK server cannot relay emails from this partner to your users.</p> <p>You need to handle user notifications in PerfectWORK, or replace the email address of the partner with a default email address.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#use-a-default-email-address","title":"Use a default email address","text":"<p>To force the email address from which emails are sent, you need to create the following key in the System Parameters of the database:  If mail.default.from is set, and contains a full email address, all outgoing emails are sent from the given address. This is a requirement to use Outlook with PerfectWORK.  You access the System Parameters in developer mode in the Settings \u2023 Technical \u2023 Parameters \u2023 System Parameters menu.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#email-templates","title":"Email Templates","text":"<p>We all know writing good emails is vital to get a high response rate, but you do not want to rewrite the same structure every time, do you? That is where email templates come in. Without the need to rewrite the entire email structure every time, you save time to focus on the content. Multiple templates also let you deliver the right message to the right audience, improving their overall experience with the company.</p> <p>Note</p> <p>The email templates use QWeb. The composer allows you to edit emails in their final rendering, making customizations more robust as you don\u2019t have to edit code.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#defining-a-default-reply-to-on-your-mail-template","title":"Defining a default reply to on your mail template","text":"<p>Although the field reply to is available within the mail templates, this field is only used for mass mailing mode (this means when sending templates on what we call bulk emailing). You can send emails in bulk in almost every app that has a list view. Select the records you want and click on the action button. If you have an option to send an email, you will see a mail composer with possible values to define:  You can also define them by default on the template:  Because of this, setting a value in this field is useless as the value defined will be totally ignored. The default reply-to value is the default catchall email address to ensure a communication between your customer and your PerfectWORK database. For more information about the way the catchall works, please check how to manage inbound messages.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#transactional-emails-and-corresponding-url-for-each-company","title":"Transactional emails and corresponding URL for each company","text":"<p>When using PerfectWORK, multiple events trigger the sending of automated emails. These emails are known as transactional emails and sometimes contain links pointing to your PerfectWORK database.</p> <p>By default, links generated by the database use the dynamic web.base.url key defined in the system parameters. More information about this parameter.</p> <p>If the website application isn\u2019t installed, the web.base.url key will always be the default parameter used to generate all the links.</p> <p>It\u2019s important to know that this key can only have a single value, meaning that in a multi-website/company database environment, even if you have a specific domain name for each website, the links generated to share a document or within a transactional email might remain the same, whatever the website/company related to the sending of the email/document.</p> <p>This is not always the case as some PerfectWORK applications have a link established in the database with the website application, meaning that in this case, if a specific domain is defined for the websites, the URL generated in the email template will use the domain defined on the corresponding website of the company.</p> <p>Caution</p> <p>A document shared using the documents application will always use the web.base.url key, as the document shared isn\u2019t associated with any particular website. Meaning that the URL will always be the same (the web.base.url key value), whatever the company it\u2019s shared from, this is a known limitation!</p> <p>On the other hand, sales orders made by a customer on one of your PerfectWORK e-commerce websites have a link established with the website from which the order was made. As a result, the e-mail sent for the sales orders uses the domain name defined for the corresponding website to generate the links.</p> <p>For more information about how to configure your domains, we invite you to check our domain name documentation.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#updating-translations-within-email-templates","title":"Updating translations within email templates","text":"<p>Email templates are automatically translated. Changing the translations shouldn\u2019t be necessary. However, if for a specific reason you\u2019d like to change some of the translations, this can be done.</p> <p>Like any modification in the code, keep in mind that modifications that aren\u2019t done correctly (for example modifications leading to bad syntax) can break the template, as a result, the template will appear blank.</p> <p>In order to edit your translations, follow these steps from the template.</p> <p>Click on the edit button, then on the language button</p> <ul> <li>Edit the language of a template</li> <li>A pop-up window with the different languages installed on the database will be displayed. From here, editing the translations will be possible. Don\u2019t forget to hit the save button to preserve your changes.</li> </ul>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#faq","title":"FAQ","text":"<p>This document contains an explanation of the most recurring mailing concerns.</p> <p>We will start by addressing issues of outgoing emails (ex: my client has not received my email), and then, of incoming emails (ex: I do not receive responses from my customers in the database).</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#outgoing-emails","title":"Outgoing emails","text":""},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#what-do-you-have-to-check-if-your-email-is-not-sent","title":"What do you have to check if your email is not sent?","text":"<p>The first indicator showing you that the email has not been sent is the red envelope next to the date and time of the message.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#common-error-messages","title":"Common error messages","text":"<p>You reached your daily limit: <pre><code>Warning in PerfectWORK upon email limit reached\n</code></pre> Each email service provider has its own email sending limits. The limits may be daily, hourly, and sometimes even per minute. This is the same for PerfectWORK, we have to limit our customers to prevent our e-mail servers from being blacklisted.</p> <p>Here are the default limits for new databases:</p> <ul> <li> <p>200 emails/day for PerfectWORK Online and PerfectWORK.sh databases with an active subscription,</p> </li> <li> <p>50 emails/day for one-app free and trial databases,</p> </li> <li> <p>in case of migration, your daily limit might be reset to 50 emails a day.</p> </li> </ul> <p>In case you hit the limit, you can:</p> <ul> <li> <p>Ask our support team to increase your daily limit. We will analyze the situation of your database depending on (non-exhaustive list):</p> <ul> <li> <p>How many users in your database,</p> </li> <li> <p>Which apps are installed,</p> </li> <li> <p>Your bounce rate: the percentage of email addresses that did not receive your emails because it was returned by a mail server on its way to the final recipient. You can contact the support.</p> </li> </ul> </li> <li> <p>Use your own outgoing email server to be independent of PerfectWORK\u2019s mail limit (please refer to the corresponding documentation),</p> </li> <li> <p>Wait until 11pm UTC for the reset and click on the retry button: The Developer mode must be activated. Then, go to Settings \u2023 Technical \u2023 Emails</p> </li> </ul> <p>Warning</p> <p>The daily limit is global to your database and can rise quickly! By default an internal message, a notification, a note, etc. counts as an email in your daily limit if it notifies someone.</p> <p>You can mitigate this by receiving your notifications in PerfectWORK instead of by emails.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#smtp-error","title":"SMTP Error","text":"<p>You can find out why an email wasn\u2019t transmitted successfully by reviewing the Simple Mail Transport Protocol (SMTP) error messages. SMTP is a protocol to describe the email structure and transmit it over the Internet, and the error messages generated by email services are helpful tools to diagnose and troubleshoot email problems.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#no-error","title":"No Error","text":"<p>PerfectWORK is not always capable of providing information for the reason it failed. The different providers implement a personalized policy of the bounce emails and it is not always possible for PerfectWORK to interpret it correctly.  If you have this problem on a recurring basis with the same client or the same domain, please do not hesitate to contact PerfectWORK Support for help in finding a reason.</p> <p>Note: in such case, one of the most common reasons is related to SPF and/or DKIM configuration.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#why-is-my-email-sent-late","title":"Why is my email sent late?","text":"<p>It may happen that you schedule an email campaign but it is not sent on time. We know that we use a delayed job to send emails that we consider as not urgent (Newsletters concept such as mass mailing, marketing automation, events). The system utility cron can be used to schedule programs to run automatically at predetermined intervals. We use that policy in order to avoid cluttering the mail servers and prioritize the communication.  The emails considered urgent (communication from one person to another one such as Sales Orders, Invoices, Purchase Orders, etc.) are sent directly.  By default, the Mass Mailing cron runs every 60 minutes. So, you should wait maximum an hour before the campaign is actually sent.</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#incoming-emails","title":"Incoming emails","text":"<p>When you have an issue with incoming emails, there might not be an indication per se in PerfectWORK. This is the client who tries to contact a database who will get a bounce (most of the time 550: mailbox unavailable).</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#emails-are-not-received","title":"Emails are not received","text":"<p>Depending on the platform you are using:</p>"},{"location":"01_application_guide/01_platform/03_connect/02_email_communication/#get-help-from-support","title":"Get help from support","text":"<p>In order to get helped efficiently, please provide as much information as possible. Here is a list of what can be helpful:</p> <ul> <li> <p>The EML of the email, stating for Electronic Mail, is the file format containing all the technical information required for an investigation. The documentation of your own email provider might help you on how to get your EML files. Once you get the EML of the email, adding it in the attachment of your ticket is the most efficient way for us to investigate. The support will mainly focus on redundant issues.</p> </li> <li> <p>The exact flow you are following in order to normally receive those emails in PerfectWORK. Here are examples of questions whose answers can be useful:</p> <ul> <li>Is this simply a reply from an email going out from PerfectWORK ?</li> <li>Are you using an incoming email server or somehow redirecting?</li> <li>Can you provide us with an example of an email that has been correctly forwarded ?</li> </ul> </li> <li> <p>Providing answers to the following questions:</p> <ul> <li>Is it a generic issue or is it specific to a use case? If yes, which one exactly?</li> <li>Is it working as expected? In case the email is sent using PerfectWORK, the bounce email should reach the PerfectWORK database and display the red envelope.</li> </ul> </li> </ul>"},{"location":"01_application_guide/01_platform/10_apps_integration/03_modules/","title":"Application & Modules","text":"<p>Installing or uninstalling apps and managing users is up to you. As the administrator of your database, you are responsible for its usage, as you know best how your organization works.</p> <ul> <li>PerfectWORK apps have dependencies. Installing some apps and features with dependencies may also install additional apps and modules that are technically required, even if you won\u2019t actively use them.</li> <li>Test app installation/removal on a duplicate of your database. This way, you can know what app dependencies may be required or what data may be erased.</li> </ul>"},{"location":"01_application_guide/01_platform/10_apps_integration/05_authentication/","title":"Authentication","text":""},{"location":"01_application_guide/01_platform/10_apps_integration/05_authentication/#authentication","title":"Authentication","text":""},{"location":"01_application_guide/01_platform/10_apps_integration/05_authentication/#google-sign-in","title":"Google Sign-in","text":""},{"location":"01_application_guide/01_platform/10_apps_integration/05_authentication/#oauth-authentication","title":"OAuth Authentication","text":""},{"location":"01_application_guide/01_platform/10_apps_integration/05_authentication/#ldap-authentication","title":"LDAP Authentication","text":""},{"location":"01_application_guide/01_platform/10_apps_integration/05_authentication/#two-factor-authentication","title":"Two-Factor Authentication","text":""},{"location":"01_application_guide/01_platform/10_apps_integration/06_google/","title":"Google","text":""},{"location":"01_application_guide/01_platform/10_apps_integration/06_google/#working-with-google-application","title":"Working with Google Application","text":""},{"location":"01_application_guide/01_platform/10_apps_integration/06_google/#using-unsplash-image-library","title":"Using Unsplash Image Library","text":""},{"location":"01_application_guide/01_platform/10_apps_integration/07_unsplash/","title":"Unsplash","text":""},{"location":"01_application_guide/01_platform/10_apps_integration/07_unsplash/#working-with-google-application","title":"Working with Google Application","text":""},{"location":"01_application_guide/01_platform/10_apps_integration/07_unsplash/#using-unsplash-image-library","title":"Using Unsplash Image Library","text":""},{"location":"01_application_guide/02_finance/","title":"Financial & Accounting","text":"Getting Started Accounts Receivable Accounts Payable Bank &amp; Cash Taxation Reporting Inventory"},{"location":"01_application_guide/02_finance/01_getting_started/","title":"Getting Started","text":"<p>PerfectWORK Invoicing is a standalone invoicing app to create invoices, send them to your customers, and manage payments.   PerfectWORK Accounting is a full featured accounting app. Accountant productivity is at the core of its development with features such as AI-powered invoice recognition, synchronization with your bank accounts, smart matching suggestions, etc.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/","title":"Main Accounting Concepts","text":""},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/#double-book-entry-system","title":"Double Book Entry System","text":"<p>PerfectWORK automatically creates all the behind-the-scenes journal entries for each of your accounting transactions: customer invoices, point of sale order, expenses, inventory moves, etc.</p> <p>PerfectWORK uses the rules of double-entry bookkeeping system: all journal entries are automatically balanced (sum of debits = sum of credits).</p>"},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/#accrual-and-cash-basis-methods","title":"Accrual and Cash Basis Methods","text":"<p>PerfectWORK supports both accrual and cash basis reporting. This allows you to report income / expense at the time transactions occur (i.e., accrual basis), or when payment is made or received (i.e., cash basis).</p>"},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/#multiple-companies","title":"Multiple Companies","text":"<p>PerfectWORK allows one to manage several companies within the same database. Each company has its own chart of accounts and rules. You can get consolidation reports following your consolidation rules.</p> <p>Users can access several companies but always work in one company at a time.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/#multi-currencies","title":"Multi-currencies","text":"<p>Every transaction is recorded in the default currency of the company. For transactions occurring in another currency, PerfectWORK stores both the value in the currency of the company and the value in the currency of the transaction. PerfectWORK can generate currencies gains and losses after the reconciliation of the journal items.</p> <p>Currency rates are updated once a day using a yahoo.com online web-service.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/#international-standards","title":"International Standards","text":"<p>PerfectWORK accounting supports more than 50 countries. The PerfectWORK core accounting implements accounting standards that are common to all countries. Specific modules exist per country for the specificities of the country like the chart of accounts, taxes, or bank interfaces.</p> <p>In particular, PerfectWORK\u2019s core accounting engine supports:</p> <p>Anglo-Saxon Accounting (U.S., U.K.,, and other English-speaking countries including Ireland, Canada, Australia, and New Zealand) where costs of good sold are reported when products are sold/delivered.</p> <p>European accounting where expenses are accounted at the supplier bill.</p> <p>PerfectWORK has modules to comply with IFRS rules.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/#accounts-receivable-and-payable","title":"Accounts Receivable and Payable","text":"<p>By default, PerfectWORK uses a single account for all account receivable entries and one for all accounts payable entries. You can create separate accounts per customers/suppliers, but you don\u2019t need to.</p> <p>As transactions are associated to customers or suppliers, you get reports to perform analysis per customer/supplier such as the customer statement, revenues per customers, aged receivable/payables, \u2026</p>"},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/#wide-range-of-financial-reports","title":"Wide range of financial reports","text":"<p>In PerfectWORK, you can generate financial reports in real time. PerfectWORK\u2019s reports range from basic accounting reports to advanced management reports. PerfectWORK\u2019s reports include:</p> <ul> <li>Performance reports (such as Profit and Loss, Budget Variance)</li> <li>Position reports (such as Balance Sheet, Aged Payables, Aged Receivables)</li> <li>Cash reports (such as Bank Summary)</li> <li>Detail reports (such as Trial Balance and General Ledger)</li> <li>Management reports (such as Budgets, Executive Summary)</li> </ul> <p>PerfectWORK\u2019s report engine allows you to customize your own report based on your own formulae.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/#import-bank-feeds-automatically","title":"Import bank feeds automatically","text":"<p>Bank reconciliation is a process that matches your bank statement lines, as supplied by the bank, to your accounting transactions in the general ledger. PerfectWORK makes bank reconciliation easy by frequently importing bank statement lines from your bank directly into your PerfectWORK account. This means you can have a daily view of your cashflow without having to log into your online banking or wait for your paper bank statements.</p> <p>PerfectWORK speeds up bank reconciliation by matching most of your imported bank statement lines to your accounting transactions. PerfectWORK also remembers how you\u2019ve treated other bank statement lines and provides suggested general ledger transactions.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/#calculate-the-tax-you-owe-your-tax-authority","title":"Calculate the tax you owe your tax authority","text":"<p>PerfectWORK totals all your accounting transactions for your tax period and uses these totals to calculate your tax obligation. You can then check your sales tax by running PerfectWORK\u2019s Tax Report.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/#inventory-valuation","title":"Inventory Valuation","text":"<p>PerfectWORK support both periodic (manual) and perpetual (automated) inventory valuations. The available methods are standard price, average price, LIFO (for countries allowing it) and FIFO.</p> See Also <ul> <li>View impact of the valuation method on your transactions</li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/01_accounting_concept/#easy-retained-earnings","title":"Easy retained earnings","text":"<p>Retained earnings are the portion of income retained by your business. PerfectWORK automatically calculates your current year earnings in real time so no year-end journal or rollover is required. This is calculated by reporting the profit and loss balance to your balance sheet report automatically.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_cheat_sheet/","title":"Accounting cheat sheet","text":"<p>.. h:div:: intro-list</p> <p>.. rst-class:: intro-balance</p> <p>The Balance Sheet is a snapshot of the company's finances at a specific date (as opposed to    the Profit and Loss, which is an analysis over a period).</p> <ul> <li> <p>.. rst-class:: intro-assets</p> <p>Assets represent the company's wealth and the goods it owns. Fixed assets include buildings  and offices, while current assets include bank accounts and cash. The money owed by a client is  an asset. An employee is not an asset.</p> </li> <li> <p>.. rst-class:: intro-liabilities</p> <p>Liabilities are obligations from past events that the company will have to pay in the  future (utility bills, debts, unpaid suppliers). Liabilities could also be defined as a source  of financing which is provided to the company, also called leverage.</p> </li> <li> <p>.. rst-class:: intro-equity</p> <p>Equity is the amount of the funds contributed by the owners of the company (founders or  shareholders) plus previously retained earnings (or losses). Each year, net profits (or losses)  may be reported as retained earnings or distributed to the shareholders (as a dividend).</p> </li> </ul> <p>What is owned (an asset) has been financed through debts to reimburse (liabilities) or equity (profits, capital).</p> <p>A difference is made between assets and expenses:    - An asset is a resource with economic value that an individual, corporation, or country owns      or controls with the expectation that it will provide a future benefit. Assets are reported on      a company's balance sheet. They are bought or created to increase a firm's value or benefit its      operations.    - An expense is the costs of operations a company bears to generate revenues.</p> <p>.. h:div:: intro-list</p> <p>.. rst-class:: intro-p-l</p> <pre><code>The **profit and loss** (P&amp;L) report shows the company's performance over a specific period of\ntime, usually a quarter or a fiscal year.\n\n * .. rst-class:: intro-gross-profit\n\n     The **revenue** refers to the money earned by the company by selling goods and/or services.\n\n * .. rst-class:: intro-gross-profit\n\n     The **cost of goods sold** (COGS, or also known as \"Cost of Sale\") refers to the sale of\n     goods' costs (e.g., the cost of the materials and labor used to create the goods).\n\n   * .. rst-class:: intro-gross-profit\n\n     The **Gross profit** equals the revenues from sales minus the cost of goods sold.\n\n   * .. rst-class:: intro-opex\n\n     **Operating expenses** (OPEX) include administration, sales and R&amp;D salaries, rent and\n     utilities, miscellaneous costs, insurances, and anything beyond the costs of products sold\n     or the cost of sale.\n</code></pre> <p>.. h:div:: doc-aside accounts-table</p> <p>.. placeholder</p> <p>.. rst-class:: doc-aside</p> <p>.. highlights:: Assets = Liabilities + Equity</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_cheat_sheet/#chart-of-accounts","title":"Chart of accounts","text":"<p>The chart of accounts lists all the company's accounts: both Balance sheet accounts and P&amp;L accounts. Every transaction is recorded by debiting and crediting multiple accounts in a journal entry. In a way, a chart of accounts is like a company's DNA!</p> <p>Every account listed in the chart of accounts belongs to a specific category. In Odoo, each account has a unique code and belongs to one of these categories:</p> <ul> <li>Equity and subordinated debts<ul> <li>Equity is the amount of money invested by a company's shareholders to finance the    company's activities.</li> <li>Subordinated debts are the amount of money lent by a third party to a company to finance    its activities. In the event of the dissolution of a company, these third parties are    reimbursed before the shareholders.</li> </ul> </li> <li>Fixed assets are tangible (i.e., physical) items or properties that a company purchases and   uses to produce its goods and services. Fixed assets are long-term assets. This means the assets   have a useful life of more than one year. They also include properties, plants, and equipments   (also known as \"PP&amp;E\") and are recorded on the balance sheet with that classification.</li> <li>Current assets and liabilities<ul> <li>The current assets account is a balance sheet line item listed under the Assets section,    which accounts for all company-owned assets that can be converted to cash within one year.    Current assets include cash, cash equivalents, accounts receivable, stock inventory,    marketable securities, prepaid liabilities, and other liquid assets.</li> <li>Current liabilities are a company's short-term financial obligations due within one year.    An example of a current liability is money owed to suppliers in the form of accounts payable.</li> </ul> </li> <li>Bank and cash accounts<ul> <li>A bank account is a financial account maintained by a bank or other financial institution    in which the financial transactions between the bank and a customer are recorded.</li> <li>A cash account, or cash book, may refer to a ledger in which all cash transactions are    recorded. The cash account includes both the cash receipts and the cash payment journals.</li> </ul> </li> <li>Expenses and income<ul> <li>An expense is the costs of operations a company bears to generate revenues. It is simply    defined as the cost one is required to spend on obtaining something. Common expenses include    supplier payments, employee wages, factory leases, and equipment depreciation.</li> <li>The term \"income\" generally refers to the amount of money, property, and other transfers    of value received over a set period of time in exchange for services or products.</li> </ul> </li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/02_cheat_sheet/#example","title":"Example","text":"<p>.. h:div:: example</p> <p>*: Customer Refund and Customer Payment boxes cannot be simultaneously selected as they are contradictory.</p> <p>.. h:div:: doc-aside</p> <p>.. highlights:: Balance = Debit - Credit</p> <p>.. h:div:: chart-of-accounts</p> <pre><code>  .. placeholder\n</code></pre>"},{"location":"01_application_guide/02_finance/01_getting_started/02_cheat_sheet/#journal-entries","title":"Journal entries","text":"<p>Every financial document of the company (e.g., an invoice, a bank statement, a pay slip, a capital increase contract) is recorded as a journal entry, impacting several accounts.</p> <p>For a journal entry to be balanced, the sum of all its debits must be equal to the sum of all its credits.</p> <p>.. h:div:: doc-aside journal-entries</p> <p>examples of accounting entries for various transactions. (see entries.js)</p> <p>.. _accounting/reconciliation:</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_cheat_sheet/#reconciliation","title":"Reconciliation","text":"<p>:doc:<code>Reconciliation &lt;../../accounting/bank/reconciliation/use_cases&gt;</code> is the process of linking journal items of a specific account and matching credits and debits.</p> <p>Its primary purpose is to link payments to their related invoices to mark them as paid. This is done by doing a reconciliation on the accounts receivable account and/or the accounts payable account.</p> <p>Reconciliation is performed automatically by the system when:</p> <ul> <li>the payment is registered directly on the invoice</li> <li>the links between the payments and the invoices are detected at the bank matching process</li> </ul> <p>.. h:div:: doc-aside reconciliation-example</p> <p>.. rubric:: Customer Statement Example</p> <p>.. rst-class:: table-sm d-c-table</p> <p>+-------------------------+-------------------------+-----------------------+    |Accounts Receivable      |Debit                    |Credit                 |    +=========================+=========================+=======================+    |Invoice 1                |100                      |                       |    +-------------------------+-------------------------+-----------------------+    |Partial payment \u00bd      |                         |70                     |    +-------------------------+-------------------------+-----------------------+    |Invoice 2                |65                       |                       |    +-------------------------+-------------------------+-----------------------+    |Partial payment 2/2      |                         |30                     |    +-------------------------+-------------------------+-----------------------+    |Payment 2                |                         |65                     |    +-------------------------+-------------------------+-----------------------+    |Invoice 3                |50                       |                       |    +-------------------------+-------------------------+-----------------------+    |                         |                         |                       |    +-------------------------+-------------------------+-----------------------+    |Total to pay             |50                       |                       |    +-------------------------+-------------------------+-----------------------+</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_cheat_sheet/#bank-reconciliation","title":"Bank Reconciliation","text":"<p>Bank reconciliation is the matching of bank statement lines (provided by your bank) with transactions recorded internally (payments to suppliers or from customers). For each line in a bank statement, it can be:</p> <ul> <li>matched with a previously recorded payment: a payment is registered when a check is received   from a customer, then matched when checking the bank statement.</li> <li>recorded as a new payment: the payment's journal entry is created and reconciled with the   related invoice when processing the bank statement.</li> <li>recorded as another transaction: bank transfer, direct charge, etc.</li> </ul> <p>Odoo should automatically reconcile most transactions; only a few should need manual review. When the bank reconciliation process is finished, the balance on the bank account in Odoo should match the bank statement's balance.</p> <p>.. rst-class:: checks-handling</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_cheat_sheet/#checks-handling","title":"Checks Handling","text":"<p>There are two approaches to managing checks and internal wire transfers:</p> <ul> <li>Two journal entries and a reconciliation</li> <li>One journal entry and a bank reconciliation</li> </ul> <p>.. h:div:: doc-aside</p> <p>The first journal entry is created by registering the payment on the    invoice. The second one is created when registering the bank statement.</p> <p>.. rst-class:: table-sm d-c-table</p> <p>+-------------------------+--------------+------------+---------------+    |Account                  |Debit         |Credit      |Reconciliation |    +=========================+==============+============+===============+    |Account Receivable       |              |100         |Invoice ABC    |    +-------------------------+--------------+------------+---------------+    |Undeposited funds        |100           |            |Check 0123     |    +-------------------------+--------------+------------+---------------+</p> <p>.. rst-class:: table-sm d-c-table</p> <p>+-------------------------+--------------+------------+---------------+    |Account                  |Debit         |Credit      |Reconciliation |    +=========================+==============+============+===============+    |Undeposited funds        |              |100         |Check 0123     |    +-------------------------+--------------+------------+---------------+    |Bank                     |100           |            |               |    +-------------------------+--------------+------------+---------------+</p> <p>.. h:div:: doc-aside</p> <p>A journal entry is created by registering the payment on the invoice. When    reconciling the bank statement, the statement line is linked to the    existing journal entry.</p> <p>.. rst-class:: table-sm d-c-table</p> <p>+-------------------------+--------------+------------+---------------+---------------+    |Account                  |Debit         |Credit      |Reconciliation |Bank Statement |    +=========================+==============+============+===============+===============+    |Account Receivable       |              |100         |Invoice ABC    |               |    +-------------------------+--------------+------------+---------------+---------------+    |Bank                     |100           |            |               |Statement XYZ  |    +-------------------------+--------------+------------+---------------+---------------+</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/01_initial_setup/","title":"Initial Setup of PerfectWORK Accounting","text":"<p>When you first open your PerfectWORK Accounting app, the Accounting Overview page welcomes you with a step-by-step onboarding banner, a wizard that helps you get started. This onboarding banner is displayed until you choose to close it.</p> <p>The settings visible in the onboarding banner can still be modified later by going to Accounting \u2023 Configuration \u2023 Settings8.</p> Note <ul> <li>PerfectWORK Accounting automatically installs the appropriate Fiscal Localization Package for your company, according to the country selected at the creation of the database. This way, the right accounts, reports, and taxes are ready-to-go. Click here for more information about Fiscal Localization Packages.</li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/01_initial_setup/#accounting-onboarding-banner","title":"Accounting onboarding banner","text":"<p>The step-by-step Accounting onboarding banner is composed of four steps:</p> <p></p> <ol> <li>1. Company Data</li> <li>2. Bank Account</li> <li>3. Accounting Periods</li> <li>4. Chart of Accounts</li> </ol>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/01_initial_setup/#company-data","title":"Company Data","text":"<p>This menu allows you to add your company\u2019s details such as the name, address, logo, website, phone number, email address, and Tax ID, or VAT number. These details are then displayed on your documents, such as on invoices.</p> <p></p> Note <ul> <li>You can also change these settings by going to Settings \u2023 General Settings \u2023 Settings \u2023 Companies and clicking on Update Info.</li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/01_initial_setup/#bank-account","title":"Bank Account","text":"<p>Connect your bank account to your database and have your bank statements synced automatically. To do so, find your bank in the list, click on Connect, and follow the instructions on-screen.</p> <p>If your Bank Institution can\u2019t be synchronized automatically, or if you prefer not to sync it with your database, you may also configure your bank account manually by clicking on Create it, and filling out the form.</p> <ul> <li>Name: the bank account\u2019s name, as displayed on PerfectWORK.</li> <li>Account Number: your bank account number (IBAN in Europe).</li> <li>Bank: click on Create and Edit to configure the bank\u2019s details. Add the bank institution\u2019s name and its Identifier Code (BIC or SWIFT).</li> <li>Code: this code is your Journal\u2019s Short Code, as displayed on PerfectWORK. By default, PerfectWORK creates a new Journal with this Short Code.</li> <li>Journal: This field is displayed if you have an existing Bank Journal that is not linked yet to a bank account. If so, then select the Journal you want to use to record the financial transactions linked to this bank account or create a new one by clicking on Create and Edit.</li> </ul> <p>Note</p> <ul> <li>You can add as many bank accounts as needed with this tool by going to Accounting \u2023 Configuration, and clicking on Add a Bank Account.</li> <li>Click here for more information about Bank Accounts.</li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/01_initial_setup/#accounting-periods","title":"Accounting Periods","text":"<p>Define here your Fiscal Years\u2019 opening and closing dates, which are used to generate reports automatically, and your Tax Return Periodicity, along with a reminder to never miss a tax return deadline.</p> <p>By default, the opening date is set on the 1st of January and the closing date on the 31st of December, as this is the most common use.</p> <p>Note</p> <ul> <li>You can also change these settings by going to Accounting \u2023 Configuration \u2023 Settings \u2023 Fiscal Periods and updating the values.</li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/01_initial_setup/#chart-of-accounts","title":"Chart of Accounts","text":"<p>With this menu, you can add accounts to your Chart of Accounts and indicate their initial opening balances.</p> <p>Basic settings are displayed on this page to help you review your Chart of Accounts. To access all the settings of an account, click on the double arrow button at the end of the line.</p> <p></p> <p>Note</p> <ul> <li>Click here for more information on how to configure your Chart of Accounts.</li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/01_initial_setup/#invoicing-onboarding-banner","title":"Invoicing onboarding banner","text":"<p>There is another step-by-step onboarding banner that helps you take advantage of your PerfectWORK Invoicing and Accounting apps. The Invoicing onboarding banner is the one that welcomes you if you use the Invoicing app rather than the Accounting app.</p> <p>If you have PerfectWORK Accounting installed on your database, you can reach it by going to Accounting \u2023 Customers \u2023 Invoices.</p> <p> The Invoicing onboarding banner is composed of four main steps: </p> <p></p> <ol> <li>1. Company Data</li> <li>2. Invoice Layout</li> <li>3. Payment Method</li> <li>4. Sample Invoice</li> </ol>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/01_initial_setup/#company-data_1","title":"Company Data","text":"<p>This form is the same as the one presented in the Accounting onboarding banner.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/01_initial_setup/#invoice-layout","title":"Invoice Layout","text":"<p>With this tool, you can design the appearance of your documents by selecting which layout template, paper format, colors, font, and logo you want to use.</p> <p>You can also add your Company Tagline and the content of the documents\u2019 footer. Note that PerfectWORK automatically adds the company\u2019s phone number, email, website URL, and Tax ID (or VAT number) to the footer, according to the values you previously configured in the Company Data.</p> <p></p> <p>Tip</p> <ul> <li>Add your bank account number and a link to your General Terms &amp; Condition in the footer. This way, your contacts can find the full content of your GT&amp;C online without having to print them on the invoices you issue.</li> </ul> <p>Note</p> <ul> <li>These settings can also be modified by going to Settings \u2023 General Settings, under the Business Documents section.</li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/01_initial_setup/#payment-method","title":"Payment Method","text":"<p>This menu helps you configure the payment methods with which your customers can pay you.</p> <p>Important</p> <p>Configuring a Payment Acquirer with this tool also activates the Invoice Online Payment option automatically. With this, users can directly pay online, from their Customer Portal.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/01_initial_setup/#sample-invoice","title":"Sample Invoice","text":"<p>Send yourself a sample invoice by email to make sure everything is correctly configured.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/","title":"Chart of Accounts","text":"<p>The Chart of Accounts (COA) is the list of all the accounts used to record financial transactions in the general ledger of an organization.</p> <p>The accounts are usually listed in the order of appearance in the financial reports. Most of the time, they are listed as follows :</p> <ul> <li> <p>Balance Sheet accounts</p> <ul> <li>Assets</li> <li>Liabilities</li> <li>Equity</li> </ul> </li> <li> <p>Profit &amp; Loss</p> <ul> <li>Income</li> <li>Expense</li> </ul> </li> </ul> <p>When browsing your Chart of Accounts, you can filter the accounts by number, in the left column, and also group them by Account Type. </p> <p></p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#configuration-of-an-account","title":"Configuration of an Account","text":"<p>The country you select at the creation of your database (or additional company on your database) determines which Fiscal Localization Package is installed by default. This package includes a standard Chart of Accounts already configured according to the country\u2019s regulations. You can use it directly or set it according to your company\u2019s needs.</p> <p>Warning</p> <ul> <li>It is not possible to modify the Fiscal Localization of a company once a Journal Entry has been posted.</li> </ul> <p>To create a new account, go to Accounting \u2023 Configuration \u2023 Chart of Accounts, click on Create, and fill out the form.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#code-and-name","title":"Code and Name","text":"<p>Each account is identified by its Code and Name, which also indicates the account\u2019s purpose.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#type","title":"Type","text":"<p>Configuring correctly the Account Type is critical as it serves multiple purposes:</p> <ul> <li>Information on the account\u2019s purpose and behavior</li> <li>Generate country-specific legal and financial reports</li> <li>Set the rules to close a fiscal year</li> <li>Generate opening entries</li> </ul> <p>To configure an account type, open the Type field\u2019s drop-down selector and select the right type among the following list:</p> Method Description Account Types Balance Sheet Assets Receivables Bank and Cash Current Assets Non Current Assets Prepayments Fixed Assets Liabilities Payable Credit Card Current Liabilities Non Current Liabilities Profit &amp; Loss Income Income Other Income Expense Expense Depreciation Cost of Revenue Other Other Off-Balance Sheet"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#assets-deferred-expenses-and-deferred-revenues-automation","title":"Assets, Deferred Expenses, and Deferred Revenues Automation","text":"<p>Some Account Types display a new field to automate the creation of Assets entries, Deferred Expenses entries, and Deferred Revenues entries.</p> <p>You have three choices for the Automation field:</p> <ol> <li>1. No : this is the default value. Nothing happens.</li> <li>2. Create in draft: whenever a transaction is posted on the account, a draft entry is created, but not validated. You must first fill out the corresponding form.</li> <li>3. Create and validate: you must also select a Model. Whenever a transaction is posted on the account, an entry is created and immediately validated.</li> </ol>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#default-taxes","title":"Default Taxes","text":"<p>Select a default tax that will be applied when this account is chosen for a product sale or purchase.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#tags","title":"Tags","text":"<p>Some accounting reports require tags to be set on the relevant accounts. By default, you can choose among the tags that are used by the Cash Flow Statement.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#account-groups","title":"Account Groups","text":"<p>Account Groups are useful to list multiple accounts as sub-accounts of a bigger account and thus consolidate reports such as the Trial Balance.</p> <p>To create a new Account Group, open the account you want to configure as sub-account, click on the Group drop-down selector, select Create and Edit\u2026, fill out the form, and save. Next, set all the sub-accounts with the right Account Group.</p> <p>To display your Trial Balance report with your Account Groups, go to Accounting \u2023 Reporting \u2023 Trial Balance, then open the Options menu and select Hierarchy and Subtotals.  </p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#allow-reconciliation","title":"Allow Reconciliation","text":"<p>Some accounts, such as accounts made to record the transactions of a payment method, can be used for the reconciliation of journal entries.</p> <p>For example, an invoice paid with a credit card can be marked as paid if reconciled with the payment. Therefore, the account used to record credit card payments needs to be configured as allowing reconciliation.</p> <p>To do so, check the Allow Reconciliation box and save.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#deprecated","title":"Deprecated","text":"<p>It is not possible to delete an account once a transaction has been recorded on it. You can make them unusable by using the Deprecated feature.</p> <p>To do so, check the Deprecated box and save.</p> <p>See also</p> <ul> <li>Non-current Assets and Fixed Assets</li> <li>Deferred Expenses and Prepayments</li> <li>Deferred Revenues</li> <li>Fiscal Localization Packages</li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/","title":"From Customer Invoice to Payments Collection","text":"<p>PerfectWORK supports multiple invoicing and payment workflows, so you can choose and use the ones that match your business needs. Whether you want to accept a single payment for a single invoice, or process a payment spanning multiple invoices and taking discounts for early payments, you can do so efficiently and accurately.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#from-draft-invoice-to-profit-and-loss","title":"From Draft Invoice to Profit and Loss","text":"<p>If we pick up at the end of a typical \u2018order to cash\u2019 scenario, after the goods have been shipped, you will: issue an invoice; receive payment; deposit that payment at the bank; make sure the Customer Invoice is closed; follow up if Customers are late; and finally present your Income on the Profit and Loss report and show the decrease in Assets on the Balance Sheet report.</p> <p>Invoicing in most countries occurs when a contractual obligation is met. If you ship a box to a customer, you have met the terms of the contract and can bill them. If your supplier sends you a shipment, they have met the terms of that contract and can bill you. Therefore, the terms of the contract is fulfilled when the box moves to or from the truck. At this point, PerfectWORK supports the creation of what is called a Draft Invoice by Warehouse staff.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#invoice-creation","title":"Invoice creation","text":"<p>Draft invoices can be manually generated from other documents such as Sales Orders, Purchase Orders,etc. Although you can create a draft invoice directly if you would like.</p> <p>An invoice must be provided to the customer with the necessary information in order for them to pay for the goods and services ordered and delivered. It must also include other information needed to pay the invoice in a timely and precise manner.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#draft-invoices","title":"Draft invoices","text":"<p>The system generates invoice which are initially set to the Draft state. While these invoices</p> <p>remain unvalidated, they have no accounting impact within the system. There is nothing to stop users from creating their own draft invoices.</p> <p>Let\u2019s create a customer invoice with following information:</p> <ul> <li>Customer: Agrolait</li> <li>Product: iMac</li> <li>Quantity: 1</li> <li>Unit Price: 100</li> <li>Taxes: Tax 15%</li> </ul> <p></p> <p></p> <p>The document is composed of three parts:</p> <ul> <li>the top of the invoice, with customer information,</li> <li>the main body of the invoice, with detailed invoice lines,</li> <li>the bottom of the page, with detail about the taxes, and the totals.</li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#open-or-pro-forma-invoices","title":"Open or Pro-forma invoices","text":"<p>An invoice will usually include the quantity and the price of goods and/or services, the date, any parties involved, the unique invoice number, and any tax information.</p> <p>\u201cValidate\u201d the invoice when you are ready to approve it. The invoice then moves from the Draft state to the Open state.</p> <p>When you have validated an invoice, PerfectWORK gives it a unique number from a defined, and modifiable, sequence.</p> <p></p> <p>Accounting entries corresponding to this invoice are automatically generated when you validate the invoice. You can see the details by clicking on the entry in the Journal Entry field in the \u201cOther Info\u201d tab.</p> <p></p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#send-the-invoice-to-customer","title":"Send the invoice to customer","text":"<p>After validating the customer invoice, you can directly send it to the customer via the \u2018Send by email\u2019 functionality.</p> <p></p> <p>A typical journal entry generated from a validated invoice will look like as follows:</p> Account Partner Due Date Debit Credit Account Receivable Agrolait 01/07/2021 115 Taxes Agrolait 15 Sales 100"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#payment","title":"Payment","text":"<p>In PerfectWORK, an invoice is considered to be paid when the associated accounting entry has been reconciled with the payment entries. If there has not been a reconciliation, the invoice will remain in the Open state until you have entered the payment.</p> <p>A typical journal entry generated from a payment will look like as follows:</p> Account Partner Due Date Debit Credit Bank Agrolait 01/07/2021 115 Accounts Receivable Agrolait 01/07/2021 115"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#receive-a-partial-payment-through-the-bank-statement","title":"Receive a partial payment through the bank statement","text":"<p>You can manually enter your bank statements in PerfectWORK, or you can import them in from a csv file or from several other predefined formats according to your accounting localisation.</p> <p>Create a bank statement from the accounting dashboard with the related journal and enter an amount of $100 .</p> <p></p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#reconcile","title":"Reconcile","text":"<p>Now let\u2019s reconcile!</p> <p></p> <p>You can now go through every transaction and reconcile them or you can mass reconcile with instructions at the bottom.</p> <p>After reconciling the items in the sheet, the related invoice will now display \u201cYou have outstanding payments for this customer. You can reconcile them to pay this invoice. \u201c</p> <p></p> <p></p> <p>Apply the payment. Below, you can see that the payment has been added to the invoice.</p> <p></p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#payment-followup","title":"Payment Followup","text":"<p>There\u2019s a growing trend of customers paying bills later and later. Therefore, collectors must make every effort to collect money and collect it faster.</p> <p>PerfectWORK will help you define your follow-up strategy. To remind customers to pay their outstanding invoices, you can define different actions depending on how severely overdue the customer is. These actions are bundled into follow-up levels that are triggered when the due date of an invoice has passed a certain number of days. If there are other overdue invoices for the same customer, the actions of the most overdue invoice will be executed.</p> <p>By going to the customer record and diving into the \u201cOverdue Payments\u201d you will see the follow-up message and all overdue invoices.</p> <p></p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#customer-aging-report","title":"Customer aging report:","text":"<p>The customer aging report will be an additional key tool for the collector to understand the customer credit issues, and to prioritize their work.</p> <p>Use the aging report to determine which customers are overdue and begin your collection efforts.</p> <p></p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#profit-and-loss","title":"Profit and loss","text":"<p>The Profit and Loss statement displays your revenue and expense details. Ultimately, this gives you a clear image of your Net Profit and Loss. It is sometimes referred to as the \u201cIncome Statement\u201d or \u201cStatement of Revenues and Expenses.\u201d</p> <p></p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/01_invoice_to_payment/#balance-sheet","title":"Balance sheet","text":"<p>The balance sheet summarizes your company\u2019s liabilities, assets and equity at a specific moment in time.</p> <p></p> <p></p> <p>For example, if you manage your inventory using the perpetual accounting method, you should expect a decrease in account \u201cCurrent Assets\u201d once the material has been shipped to the customer.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/","title":"From Vendor Bill to Payment","text":"<p>Once vendor bills are registered in PerfectWORK, you can easily pay vendors for the correct amount and at the right time (not too late, not too early; depending on your vendor policy). PerfectWORK also offers reports to track your aged payable balances.</p> <p>If you want to control vendor bills received from your vendors, you can use the PerfectWORK Purchase application that allows you to control and pre-complete them automatically based on past purchase orders.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#from-vendor-bill-to-payment","title":"From Vendor Bill to Payment","text":""},{"location":"01_application_guide/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#record-a-new-vendor-bill","title":"Record a new vendor bill","text":"<p>When a vendor bill is received, you can record it from Purchases \u2023 Vendor Bills in the Accounting application. As a shortcut, you can also use the New Bill feature on the accounting dashboard.</p> <p></p> <p>To register a new vendor bill, start by selecting a vendor and inputting their invoice as the Vendor Reference, then add and confirm the product lines, making sure to have the right product quantities, taxes and prices.</p> <p></p> <p>Save the invoice to update the pre tax and tax amounts at the bottom of the screen. You will most likely need to configure the prices of your products without taxes as PerfectWORK will compute the tax for you.</p> <p>Note</p> <ul> <li>On the bottom left corner, PerfectWORK shows a summary table of all taxes on the vendor bill. In several countries, different methods are accepted to round the totals (round per line, or round globally). The default rounding method in PerfectWORK is to round the final prices per line (as you may have different taxes per product. E.g. Alcohol and cigarettes). However if your vendor has a different tax amount on their bill, you can change the amount in the bottom left table to adjust and match.</li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#validate-the-vendor-bill","title":"Validate The Vendor Bill","text":"<p>Once the vendor bill is validated, a journal entry will be generated based on the configuration on the invoice. This journal entry may differ depending on the the accounting package you choose to use.</p> <p>For most European countries, the journal entry will use the following accounts:</p> <ul> <li>Accounts Payable: defined on the vendor form</li> <li>Taxes: defined on the products and per line</li> <li>Expenses: defined on the line item product used</li> </ul> <p>For Anglo-Saxon (US) accounting, the journal entry will use the following accounts:</p> <ul> <li>Accounts Payable: defined on the vendor form</li> <li>Taxes: defined on the products and per line</li> <li>Goods Received: defined on the product form</li> </ul> <p>You can check your Profit &amp; Loss or the Balance Sheet reports after having validated a couple of vendor bills to see the impact on your general ledger.</p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#pay-a-bill","title":"Pay a bill","text":"<p>To create a payment for an open vendor bill directly, you can click on Register a Payment at the top of the form.</p> <p>From there, you select the payment method (i.e. Checking account, credit card, check, etc\u2026) and the amount you wish to pay. By default, PerfectWORK will propose the entire remaining balance on the bill for payment. In the memo field, we recommend you set the vendor invoice number as a reference (PerfectWORK will auto fill this field from the from the vendor bill if set it correctly).</p> <p></p> <p>Note</p> <ul> <li>You can also register a payment to a vendor directly without applying it to a vendor bill. To do that, Purchases \u2023 Payments. Then, from the vendor bill you will be able to reconcile this payment with directly.</li> </ul>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#printing-vendor-checks","title":"Printing vendor Checks","text":"<p>If you choose to pay your vendor bills by check, PerfectWORK offers a method to do so directly from your vendor payments within PerfectWORK. Whether you do so on a daily basis or prefer to do so at the end of the week, you can print in checks in batches.</p> <p>If you have checks to print, PerfectWORK\u2019s accounting dashboard acts as a to do list and reminds you of how many checks you have left to be printed.</p> <p></p> <p>By selecting the amount of checks to be printed, you can dive right into a list of all payments that are ready to be processed.</p> <p>Select all the checks you wish to print (use the first checkbox to select them all) and set the action to Print Checks. PerfectWORK will ask you to set the next check number in the sequence and will then print all the checks at once.</p> <p></p>"},{"location":"01_application_guide/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#reporting","title":"Reporting","text":""},{"location":"01_application_guide/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#aged-payable-balance","title":"Aged payable balance","text":"<p>In order to get a list of open vendor bills and their related due dates, you can use the Aged Payable report, under the reporting menu, (in Reporting \u2023 Business Statement \u2023 Aged payable) to get a visual of all of your outstanding bills.</p> <p></p> <p>From here, you can click directly on a vendors name to open up the details of all outstanding bills and the amounts due, or you can annotate any line for managements information. At any point in time while you\u2019re looking through the report, you can print directly to Excel or PDF and get exactly what you see on the screen.</p> <p>See also</p> <ul> <li>From Customer Invoice to Payments Collection</li> </ul>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/","title":"Accounts Receivable","text":"<p>Accounts receivable (AR) is the balance of money due to a firm for goods or services delivered or used but not yet paid for by customers. Accounts receivables are listed on the balance sheet as a current asset. AR is any amount of money owed by customers for purchases made on credit.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/","title":"Invoicing Process","text":"<p>Depending on your business and the application you use, there are different ways to automate the customer invoice creation in PerfectWORK. Usually, draft invoices are created by the system (with information coming from other documents like sales order or contracts) and accountant just have to validate draft invoices and send the invoices in batch (by regular mail or email).</p> <p>Depending on your business, you may opt for one of the following way to create draft invoices:</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#sales","title":"Sales","text":""},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#sales-order-invoice","title":"Sales Order \u2023 Invoice","text":"<p>In most companies, salespeople create quotations that become sales order once they are validated. Then, draft invoices are created based on the sales order. You have different options like:</p> <ul> <li>Invoice manually: use a button on the sale order to trigger the draft invoice</li> <li>Invoice before delivery: invoice the full order before triggering the delivery order</li> <li>Invoice based on delivery order: see next section</li> </ul> <p>Invoice before delivery is usually used by the eCommerce application when the customer pays at the order and we deliver afterwards. (pre-paid)</p> <p>For most other use cases, it\u2019s recommended to invoice manually. It allows the salesperson to trigger the invoice on demand with options: invoice the whole order, invoice a percentage (advance), invoice some lines, invoice a fixed advance.</p> <p>This process is good for both services and physical products.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#sales-order-delivery-order-invoice","title":"Sales Order \u2023 Delivery Order \u2023 Invoice","text":"<p>Retailers and eCommerce usually invoice based on delivery orders, instead of sales order. This approach is suitable for businesses where the quantities you deliver may differs from the ordered quantities: foods (invoice based on actual Kg).</p> <p>This way, if you deliver a partial order, you only invoice for what you really delivered. If you do back orders (deliver partially and the rest later), the customer will receive two invoices, one for each delivery order.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#ecommerce-order-invoice","title":"eCommerce Order \u2023 Invoice","text":"<p>An eCommerce order will also trigger the creation of the order when it is fully paid. If you allow paying orders by check or wire transfer, PerfectWORK only creates an order and the invoice will be triggered once the payment is received.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#contracts","title":"Contracts","text":""},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#regular-contracts-invoices","title":"Regular Contracts \u2023 Invoices","text":"<p>If you use contracts, you can trigger invoice based on time and material spent, expenses or fixed lines of services/products. Every month, the salesperson will trigger invoice based on activities on the contract.</p> <p>Activities can be:</p> <ul> <li>fixed products/services, coming from a sale order linked to this contract</li> <li>materials purchased (that you will re-invoice)</li> <li>time and material based on timesheets or purchases (subcontracting)</li> <li>expenses like travel and accommodation that you re-invoice to the customer</li> </ul> <p>You can invoice at the end of the contract or trigger intermediate invoices. This approach is used by services companies that invoice mostly based on time and material. For services companies that invoice on fix price, they use a regular sales order.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#recurring-contracts-invoices","title":"Recurring Contracts \u2023 Invoices","text":"<p>For subscriptions, an invoice is triggered periodically, automatically. The frequency of the invoicing and the services/products invoiced are defined on the contract.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#others","title":"Others","text":""},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#creating-an-invoice-manually","title":"Creating an invoice manually","text":"<p>Users can also create invoices manually without using contracts or a sales order. It\u2019s a recommended approach if you do not need to manage the sales process (quotations), or the delivery of the products or services.</p> <p>Even if you generate the invoice from a sales order, you may need to create invoices manually in exceptional use cases:</p> <ul> <li>if you need to create a refund</li> <li>If you need to give a discount</li> <li>if you need to change an invoice created from a sales order</li> <li>if you need to invoice something not related to your core business</li> </ul>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#specific-modules","title":"Specific modules","text":"<p>Some specific modules are also able to generate draft invoices:</p> <ul> <li>membership: invoice your members every year</li> <li>repairs: invoice your after-sale services</li> </ul>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#resequencing-of-the-invoices","title":"Resequencing of the invoices","text":"<p>It remains possible to resequence the invoices but with some restrictions:</p> <ul> <li>The feature does not work when entries are previous to a lock date.</li> <li>The feature does not work if the sequence is inconsistent with the month of the entry.</li> <li>It does not work if the sequence leads to a duplicate.</li> <li>The order of the invoice remains unchanged.</li> <li>It is useful for people who use a numbering from another software and who want to continue the current year without starting over from the beginning.</li> </ul>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/02_offer_cash_discount/","title":"Offer Cash Discounts","text":"<p>Cash discounts are incentives you can offer to customers to motivate them to pay within a specific time frame. For instance, you offer a 2% discount if the customer pays you within the first 5 days of the invoice, when it is due in 30 days. This approach can greatly improve your average collection period.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/02_offer_cash_discount/#set-up-a-cash-discount","title":"Set up a cash discount","text":"<p>To set up a cash discount, go to Accounting \u2023 Configuration \u2023 Management \u2023 Payment Terms and click on Create. Add a Percent type of term with a corresponding value (e.g. 98% of the total price for a 2% discount) and the number of days during which the offer is valid. You can also change the default balance term if needed.</p> <p></p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/02_offer_cash_discount/#start-offering-the-cash-discount","title":"Start offering the cash discount","text":"<p>Now, you can create a customer invoice and select the cash discount payment term you added. Once the invoice is validated, PerfectWORK will automatically split the account receivables part of the journal entry into two installments having different due dates. Since the discounted price is already calculated, your payment controls will be simplified.</p> <p></p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/02_offer_cash_discount/#grant-the-cash-discount","title":"Grant the cash discount","text":"<p>The customer fulfilled the payment terms and therefore benefits from the cash discount. When you process the bank statement, match the payment with the related journal entry. Then, select the remaining cash discount and click on Create Write-off to reconcile it.</p> <p></p> <p>Tip</p> <ol> <li>You can also create a dedicated reconciliation model to make the process easier. In this case, you should add a tax to the model based on the taxes applied to your invoices. This means that if you handle multiple tax rates, you need to create several reconciliation models. Note that depending on your localisation, you might already have a Cash Discount model available by default.</li> </ol>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/02_offer_cash_discount/#register-the-full-payment","title":"Register the full payment","text":"<p>In this case, the customer has not fulfilled the payment term and cannot benefit from the cash discount. When you process the bank statement, match the payment with the two related journal entries.</p> <p></p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/03_cash_rounding/","title":"Cash Rounding","text":"<p>Cash rounding is required when the lowest physical denomination of currency, or the smallest coin, is higher than the minimum unit of account.</p> <p>For example, some countries require their companies to round up or down the total amount of an invoice to the nearest five cents, when the payment is made in cash.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/03_cash_rounding/#configuration","title":"Configuration","text":"<p>Go to Accounting \u2023 Configuration \u2023 Settings and enable Cash Rounding, then click on Save.</p> <p></p> <p>Go to Accounting \u2023 Configuration \u2023 Cash Roundings, and click on Create.</p> <p>Define here your Rounding Precision, Rounding Strategy, and Rounding Method.</p> <p>PerfectWORK supports two rounding strategies:</p> <ul> <li>Add a rounding line: a rounding line is added on the invoice. You have to define which account records the cash roundings.</li> <li>Modify tax amount: the rounding is applied in the taxes section.</li> </ul>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/01_customer_invoices/03_cash_rounding/#apply-roundings","title":"Apply roundings","text":"<p>When editing a draft invoice, open the Other Info tab, go to the Accounting Information section, and select the appropriate Cash Rounding Method.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/","title":"Different ways to record a payment","text":"<p>In PerfectWORK, a payment can either be linked directly to an invoice or be a stand alone record for use on a later date:</p> <p>If a payment is linked to an invoice, it reduces the amount due of the invoice. You can have multiple payments linked to the same invoice.</p> <p>If a payment is not linked to an invoice, the customer has an outstanding credit with your company, or your company as an outstanding balance with a vendor. You can use this outstanding credit/debit to pay future invoices or bills.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#paying-an-invoice","title":"Paying an invoice","text":"<p>If you register a payment on a customer invoice or a vendor bill, the payment is automatically reconciled with the invoice reducing the amount due.</p> <p></p> <p>The green icon near the payment line will display more information about the payment. From there you can choose to open the journal entry or reconcile the payment.</p> <p>Note</p> <ol> <li>If you unreconcile a payment, it is still registered in your books but not linked to the specific invoice any longer. If you unreconcile a payment in a different currency, PerfectWORK will create a journal entry to reverse the Currency Exchange Loss/Gain posted at the time of reconciliation.</li> </ol>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#payments-not-tied-to-an-invoice","title":"Payments not tied to an invoice","text":""},{"location":"01_application_guide/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#registering-a-payment","title":"Registering a payment","text":"<p>In the Accounting application, you can create a new payment from the Sales menu (register a customer payment) or the Purchases menu (pay a vendor). If you use these menus, the payment is not linked to an invoice, but can easily be reconciled on an invoice later on.</p> <p></p> <p>When registering a new payment, you must select a customer or vendor, the payment method, and the amount of the payment. The currency of the transaction is defined by the payment method. If the payment refers to a document (sale order, purchase order or invoice), set the reference of this document in the memo field.</p> <p>Once confirmed, a journal entry will be posted reflecting the transaction just made in the accounting application.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#reconciling-invoice-payments","title":"Reconciling invoice payments","text":"<p>The easiest way of reconciling a payment with an invoice is to do so on the invoice directly.</p> <p>When validating a new invoice, Odoo will warn you that an outstanding payment for this customer or vendor is available. In this case, you can reconcile this payment to the invoice near the totals at the bottom, under \u201cOutstanding Payments\u201d.</p> <p></p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#reconciling-all-your-outstanding-payments-and-invoices","title":"Reconciling all your outstanding payments and invoices","text":"<p>If you want to reconcile all outstanding payments and invoices at once (instead of doing so one by one), you can use the batch reconciliation feature within Odoo.</p> <p>The batch reconciliation feature is available from the dashboard on the Customer Invoices card and the Vendor Bills card for reconciling Accounts Receivable and Payable, respectively.</p> <p></p> <p>The payments matching tool will open all unreconciled customers or vendors and will give you the opportunity to process them all one by one, doing the matching of all their payments and invoices at once.</p> <p></p> <p>During the reconciliation, if the sum of the debits and credits do not match, it means there is still a remaining balance that either needs to be reconciled at a later date, or needs to be written off directly.</p>"},{"location":"01_application_guide/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#transferring-money-from-one-bank-account-to-another","title":"Transferring money from one bank account to another","text":"<p>Just like making a customer or vendor payment, you transfer cash internally between your bank accounts from the dashboard or from the menus up top.</p> <p></p> <p>This will take you to the same screen you have for receiving and making payments.</p> <p></p> <p>Note</p> <ol> <li>When making an internal transfer from one bank account to another, select the bank you want to apply the transfer from in the dashboard, and in the register payments screen, you select the transfer to account. Do not go through this process again in the other bank account or else you will end up with two journal entries for the same transaction.</li> </ol>"},{"location":"01_application_guide/02_finance/10_inventory/","title":"Inventory Management - Anglo-Saxon or Continental Accounting","text":"<p>There are mainly two types of accounting practices that are widely adopted across the world. Everyone is familiar with continental accounting as this is one of the widely used accounting features especially in European countries. Anglo Saxon accounting, on the other hand, is used by a other community.</p> <p>In Continental Accounting, the expense account is affected at the time of purchase on the other hand, in Anglo Saxon Accounting the expense account is affected at the time of processing a sales order. Let's now look at both Continental and Anglo-Saxon accounting in detail.</p>"},{"location":"01_application_guide/02_finance/10_inventory/#how-to-configure-continental-or-anglo-saxon-accounting","title":"How to configure Continental or Anglo-Saxon Accounting","text":"<p>For implementing the continental accounting, go to the settings menu of the accounting module, untick the checkbox (by default it will be continental) Anglo-Saxon Accounting, and save changes.   If you would like to use Angle Saxon accounting, just tick the checkbox Anglo-Saxon Accounting, then save changes.</p>"},{"location":"01_application_guide/02_finance/10_inventory/01_inventory_valuation/","title":"Inventory Valuation Configuration","text":"<p>Inventory valuation refers to how you value your stock. It\u2019s a very important aspect of a business as the inventory can be the biggest asset of a company. Inventory valuation implies two main choices:     - The cost method you use to value your goods (standard, fifo, avco)     - The way you record this value into your accounting books (manually or automatically)</p> <p>Those two concepts are explained in the sections below.</p>"},{"location":"01_application_guide/02_finance/10_inventory/01_inventory_valuation/#costing-methods-standard-fifo-avco","title":"Costing Methods: Standard, FIFO, AVCO","text":"<p>The costing method is defined in the product category. There are three options available. Each of them is explained in detail below.</p>"},{"location":"01_application_guide/02_finance/10_inventory/01_inventory_valuation/#standard-price","title":"Standard Price","text":"Operation \u00a0Unit Cost Qty On Hand Delta Value \u00a0Inventory Value \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 10.00 0 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 - Receive 8 Products at $10 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 10.00 8 +8 * 10 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 80.00 Receive 4 Products at $16 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 10.00 12 +4 * 10 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 120.00 Deliver 10 Products \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 10.00 2 -10 * 10 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 20.00 Receive 2 Products at $9 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 10.00 4 +2 * 10 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 20.00 <p>In Standard Price, any product will be valued at the cost that you defined manually on the product form. Usually, this cost is an estimation based on the material and labor needed to obtain the product. This cost must be reviewed periodically.</p>"},{"location":"01_application_guide/02_finance/10_inventory/01_inventory_valuation/#average-cost-avco","title":"Average Cost (AVCO)","text":"Operation \u00a0Unit Cost Qty On Hand Delta Value \u00a0Inventory Value \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  0.00 0 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00.00 Receive 8 Products at $10 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 10.00 8 +8 * 10 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 80.00 Receive 4 Products at $16 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 12.00 12 +4 * 16 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  144.00 Deliver 10 Products \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 12.00 2 -10 * 12 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 24.00 Receive 2 Products at $9 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  9.00 4 +2 * 6 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 36.00 <p>In AVCO (Average Cost), each product has the same value and this value is the average purchase cost of the product. With this costing method, the cost of the product is recomputed as each receipt.  The average cost does not change when products leave the warehouse. </p>"},{"location":"01_application_guide/02_finance/10_inventory/01_inventory_valuation/#fifo-first-in-first-out","title":"FIFO (First In First Out)","text":"Operation \u00a0Unit Cost Qty On Hand Delta Value \u00a0Inventory Value \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  0.00 0 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00.00 Receive 8 Products at $10 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 10.00 8 +8 * 10 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 80.00 Receive 4 Products at $16 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 12.00 12 +4 * 16 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0  144.00 Deliver 10 Products \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 16.00 2 -10 * 12  -2 * 16 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 32.00 Receive 2 Products at $9 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 11.00 4 +2 * 6 \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 44.00 <p>In FIFO (First In First Out), the products are valued at their purchase cost. When a product leaves the stock, that\u2019s the \u201cFirst in, first out\u201d rule that applies.  Pay attention, that this is a financial FIFO. The first value \u201cin\u201d is the first value \u201cout\u201d, no matter the storage location, warehouse or serial number.  FIFO is advised if you manage all your workflows into PerfectWORK (Sales, Purchases, Inventory). It suits any kind of users.</p>"},{"location":"01_application_guide/02_finance/10_inventory/01_inventory_valuation/#inventory-valuation-automated-or-manual","title":"Inventory Valuation: Automated or Manual","text":"<p>There are two ways to record your inventory valuation in your accounting books. As the costing method, this is defined in your product category. Those two methods are detailed below.It is important to also note that the accounting entries will depend on your accounting mode: it can be continental or anglo-saxon.   In continental accounting, the cost of a good is taken into account as soon as the product is received in stock.   In anglo-saxon accounting, the cost of a good is only recorded as an expense when this good is invoiced to a final customer. In the tables below, you can easily compare those two accounting modes.Usually, based on your country, the correct accounting mode will be chosen by default.</p>"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/","title":"Automated Inventory Valuation","text":"<p>In that case, when a product enters or leaves your stock, an accounting entry will be automatically created. This means your accounting books are always up-to-date. This mode is dedicated to expert accountants and advanced users only. As opposed to periodic valuation, it requires some extra configuration &amp; testing.  First, you need to define the accounts that will be used for those accounting entries. This is done on the product category.</p>"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#continental-accounting","title":"Continental Accounting","text":"<p>Note</p> <p>Configuration:</p> <ul> <li>Accounts Receivable/Payable: defined on the partner (Accounting tab)</li> <li>Deferred Tax Assets/Liabilities: defined on the tax used on the invoice line</li> <li>Revenues/Expenses: defined by default on product\u2019s internal category; can be also set in product form (Accounting tab) as a replacement value.</li> <li>Inventory Variations: to set as Stock Input/Output Account in product\u2019s internal category</li> <li>Inventory: to set as Stock Valuation Account in product\u2019s internal category</li> </ul>"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-invoice-po-50-invoice-50","title":"Vendor Invoice (PO $50, Invoice \u20ac50)","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u2001\u00a014000\u00a0Inventory \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a019000\u00a0Deferred Tax Assets \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4.50 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 54.50 \u2001\u00a026200\u00a0Deferred Tax Liabilities 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods 5\u00a0Expenses \u2001\u00a051000\u00a0Purchased Goods \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.00 \u2001\u00a052000\u00a0Purchased Services \u2001\u00a058000\u00a0Inventory Variations \u2001\u00a059000\u00a0Other Operating Expenses"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-goods-reception-po-50-invoice-50","title":"Vendor Goods Reception (PO $50, Invoice $50)","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u2001\u00a014000\u00a0Inventory \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.00 \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a019000\u00a0Deferred Tax Assets 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable \u2001\u00a026200\u00a0Deferred Tax Liabilities 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods 5\u00a0Expenses \u2001\u00a051000\u00a0Purchased Goods \u2001\u00a052000\u00a0Purchased Services \u2001\u00a058000\u00a0Inventory Variations \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.00 \u2001\u00a059000\u00a0Other Operating Expenses"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-invoice-po-48-invoice-50","title":"Vendor Invoice (PO $48, Invoice $50)","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u2001\u00a014000\u00a0Inventory \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a019000\u00a0Deferred Tax Assets \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4.50 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 54.50 \u2001\u00a026200\u00a0Deferred Tax Liabilities 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods 5\u00a0Expenses \u2001\u00a051000\u00a0Purchased Goods \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.00 \u2001\u00a052000\u00a0Purchased Services \u2001\u00a058000\u00a0Inventory Variations \u2001\u00a059000\u00a0Other Operating Expenses"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-goods-reception-po-48-invoice-50","title":"Vendor Goods Reception (PO $48, Invoice $50)","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u2001\u00a014000\u00a0Inventory \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 48.00 \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a019000\u00a0Deferred Tax Assets 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable \u2001\u00a026200\u00a0Deferred Tax Liabilities 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods 5\u00a0Expenses \u2001\u00a051000\u00a0Purchased Goods \u2001\u00a052000\u00a0Purchased Services \u2001\u00a058000\u00a0Inventory Variations \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 48.00 \u2001\u00a059000\u00a0Other Operating Expenses"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#customer-invoice-100-9-tax","title":"Customer Invoice ($100 + 9% tax)","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0 109.00 \u2001\u00a014000\u00a0Inventory \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a019000\u00a0Deferred Tax Assets 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable \u2001\u00a026200\u00a0Deferred Tax Liabilities \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 9.00 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0 100.00 5\u00a0Expenses \u2001\u00a051000\u00a0Purchased Goods \u2001\u00a052000\u00a0Purchased Services \u2001\u00a058000\u00a0Inventory Variations \u2001\u00a059000\u00a0Other Operating Expenses"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#customer-shipping","title":"Customer Shipping","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u2001\u00a014000\u00a0Inventory \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.00 \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a019000\u00a0Deferred Tax Assets 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable \u2001\u00a026200\u00a0Deferred Tax Liabilities 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods 5\u00a0Expenses \u2001\u00a051000\u00a0Purchased Goods \u2001\u00a052000\u00a0Purchased Services \u2001\u00a058000\u00a0Inventory Variations \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.00 \u2001\u00a059000\u00a0Other Operating Expenses"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#anglo-saxon-accounting","title":"Anglo-Saxon Accounting","text":"<p>Note</p> <p>Configuration:</p> <ul> <li>Accounts Receivable/Payable: defined on the partner (Accounting tab)</li> <li>Deferred Tax Assets/Liabilities: defined on the tax used on the invoice line</li> <li>Revenues: defined on the product category as a default, or specifically to a specific product.</li> <li>Expenses: this is where you should set the \u201cCost of Goods Sold\u201d account. Defined on the product category as a default value, or specifically on the product form.</li> <li>Goods Received Not Purchased: to set as Stock Input Account in product\u2019s internal category</li> <li>Goods Issued Not Invoiced: to set as Stock Output Account in product\u2019s internal category</li> <li>Inventory: to set as Stock Valuation Account in product\u2019s internal category</li> <li>Price Difference: to set in product\u2019s internal category or in product form as a specific replacement value</li> </ul>"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-bill-po-50-invoice-50","title":"Vendor Bill (PO $50, Invoice \u20ac50)","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u2001\u00a014000\u00a0Inventory \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a014600\u00a0Good Issued (Stock Output) \u2001\u00a019000\u00a0Deferred Tax Assets 4.50 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable 54.50 \u2001\u00a023000 Stock Received (Stock Input) 50.00 \u2001\u00a026200\u00a0Deferred Tax Liabilities 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods 5\u00a0Expenses \u2001\u00a051000\u00a0Cost of Good Sold \u2001\u00a052000\u00a0Manufacturing Overhead \u2001\u00a053000 Price Difference"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-goods-reception-po-50-invoice-50_1","title":"Vendor Goods Reception (PO $50, Invoice $50)","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u2001\u00a014000\u00a0Inventory 50 \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a014600\u00a0Good Issued (Stock Output) \u2001\u00a019000\u00a0Deferred Tax Assets 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable \u2001\u00a023000 Stock Received (Stock Input) \u00a0    50 \u2001\u00a026200\u00a0Deferred Tax Liabilities 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods 5\u00a0Expenses \u2001\u00a051000\u00a0Cost of Good Sold \u2001\u00a052000\u00a0Manufacturing Overhead \u2001\u00a053000 Price Difference"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-bill-po-48-invoice-50","title":"Vendor Bill (PO $48, Invoice $50)","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u2001\u00a014000\u00a0Inventory \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a014600\u00a0Good Issued (Stock Output) \u2001\u00a019000\u00a0Deferred Tax Assets 4.50 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable 54.50 \u2001\u00a023000 Stock Received (Stock Input) 48.00 \u2001\u00a026200\u00a0Deferred Tax Liabilities 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods 5\u00a0Expenses \u2001\u00a051000\u00a0Cost of Good Sold \u2001\u00a052000\u00a0Manufacturing Overhead \u2001\u00a053000 Price Difference 2.00"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-goods-reception-po-48-invoice-50_1","title":"Vendor Goods Reception (PO $48, Invoice $50)","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u2001\u00a014000\u00a0Inventory \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 48.00 \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a014600\u00a0Good Issued (Stock Output) \u2001\u00a019000\u00a0Deferred Tax Assets 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable \u2001\u00a023000 Stock Received (Stock Input) \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 48.00 \u2001\u00a026200\u00a0Deferred Tax Liabilities 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods 5\u00a0Expenses \u2001\u00a051000\u00a0Cost of Good Sold \u2001\u00a052000\u00a0Manufacturing Overhead \u2001\u00a053000 Price Difference"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#customer-invoice-100-9-tax_1","title":"Customer Invoice ($100 + 9% tax)","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0 109.00 \u2001\u00a014000\u00a0Inventory \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a014600\u00a0Good Issued (Stock Output) \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.00 \u2001\u00a019000\u00a0Deferred Tax Assets 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable \u2001\u00a023000 Stock Received (Stock Input) \u2001\u00a026200\u00a0Deferred Tax Liabilities \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 9.00 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0 100.00 5\u00a0Expenses \u2001\u00a051000\u00a0Cost of Good Sold \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.00 \u2001\u00a052000\u00a0Manufacturing Overhead \u2001\u00a053000 Price Difference"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#customer-shipping_1","title":"Customer Shipping","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u2001\u00a014000\u00a0Inventory $\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.00 \u2001\u00a014100\u00a0Raw Materials Inventory \u2001\u00a014600\u00a0Good Issued (Stock Output) \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.00 \u2001\u00a019000\u00a0Deferred Tax Assets 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable \u2001\u00a023000 Stock Received (Stock Input) \u2001\u00a026200\u00a0Deferred Tax Liabilities 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods 5\u00a0Expenses \u2001\u00a051000\u00a0Cost of Good Sold \u2001\u00a052000\u00a0Manufacturing Overhead \u2001\u00a053000 Price Difference"},{"location":"01_application_guide/02_finance/10_inventory/02_automated_inventory_valuation/#production-order","title":"Production Order","text":"Debit \u00a0Credit 1\u00a0Assets \u2001\u00a011000\u00a0Cash \u2001\u00a013100\u00a0Accounts Receivable \u2001\u00a014000\u00a0Inventory \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.00 \u2001\u00a014100\u00a0Raw Materials Inventory \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 52.00 \u2001\u00a014600\u00a0Good Issued (Stock Output) \u2001\u00a019000\u00a0Deferred Tax Assets 2\u00a0Liabilities \u2001\u00a021000\u00a0Accounts Payable \u2001\u00a023000 Stock Received (Stock Input) \u2001\u00a026200\u00a0Deferred Tax Liabilities 3\u00a0Equity \u2001\u00a031000\u00a0Common Stock 4\u00a0Revenue \u2001\u00a041000\u00a0Goods 5\u00a0Expenses \u2001\u00a051000\u00a0Cost of Good Sold \u2001\u00a052000\u00a0Manufacturing Overhead \u2001\u00a053000 Price Difference \u00a0$\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 2.00"},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/","title":"Manual Inventory Valuation","text":"<p>In this case, goods receipts and deliveries won\u2019t have any direct impact on your accounting books. Periodically, you create a manual journal entry representing the value of what you have in stock. To know that value, go in Inventory \u2023 Reporting \u2023 Inventory Valuation.This is the default configuration in PerfectWORK and it works out-of-the-box. Check following operations and find out how PerfectWORK is managing the accounting postings.</p>"},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#continental-accounting","title":"Continental Accounting","text":""},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#vendor-bill","title":"Vendor Bill","text":"<p>Selling product for $50 with 7% GST Tax</p> Debit Credit Assets: Inventory 50 Assets: Deferred Tax Assets 3.50 Liabilities: Accounts Payable 53.50 <p>Note</p> <p>Configuration:     - Purchased Goods: defined on the product or on the internal category of related product (Expense Account field)      - Deferred Tax Assets: defined on the tax used on the purchase order line     - Accounts Payable: defined on the vendor related to the bill</p>"},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#goods-receptions","title":"Goods Receptions","text":"<p>Note</p> <p>There is no journal entry generated</p> <p>At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books.  Create a journal entry to move the stock variation value from your Profit &amp; Loss section to your assets.</p> Debit Credit Assets: Inventory X Expenses: Inventory Variation X If the stock value decreased, the Inventory account is credited and the Inventory Variations debited."},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#customer-invoice","title":"Customer Invoice","text":"<p>Selling product for $100 with 7% GST Tax</p> Debit Credit Revenue: Sold Goods 100 Liabilities: Deferred Tax Liabilities 9 Assets: Accounts Receivable 109 <p>Note</p> <p>Configuration:          - Revenues: defined on the product or on the internal category of related product (Income Account field)      - Deferred Tax Liabilities: defined on the tax used on the invoice line      - Accounts Receivable: defined on the customer (Receivable Account)      The fiscal position used on the invoice may have a rule that replaces the Income Account or the tax defined on the product by another one.</p>"},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#customer-shipping","title":"Customer Shipping","text":"<p>Note</p> <p>There is no journal entry generated</p> <p>At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books.  Create a journal entry to move the stock variation value from your Profit &amp; Loss section to your assets.</p> Debit Credit Assets: Inventory X Expenses: Inventory Variation X If the stock value decreased, the Inventory account is credited and the Inventory Variations debited."},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#manufacturing-orders","title":"Manufacturing Orders","text":"<p>Note</p> <p>There is no journal entry generated</p> <p>At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books.  Create a journal entry to move the stock variation value from your Profit &amp; Loss section to your assets.</p> Debit Credit Assets: Inventory X Expenses: Inventory Variation X If the stock value decreased, the Inventory account is credited and the Inventory Variations debited."},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#anglo-saxon-accounting","title":"Anglo-Saxon Accounting","text":""},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#vendor-bill_1","title":"Vendor Bill","text":"<p>Selling product for $50 with 7% GST Tax</p> Debit Credit Assets: Inventory 50 Assets: Deferred Tax Assets 3.50 Liabilities: Accounts Payable 53.50 <p>Note</p> <p>Configuration:     - Purchased Goods: defined on the product or on the internal category of related product (Expense Account field)      - Deferred Tax Assets: defined on the tax used on the purchase order line     - Accounts Payable: defined on the vendor related to the bill</p>"},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#goods-receptions_1","title":"Goods Receptions","text":"<p>Note</p> <p>There is no journal entry generated</p> <p>At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books.  Then you need to break down the purchase balance into both the inventory and the cost of goods sold using the following formula: Cost of goods sold (COGS) = Starting inventory value + Purchases \u2013 Closing inventory value  To update the stock valuation in your books, record such an entry:</p> Debit Credit Assets: Inventory (closing value) X Expenses: Cost of Good Sold X Expenses: Purchased Goods X Assets: Inventory (starting value) X"},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#customer-invoice_1","title":"Customer Invoice","text":"<p>Selling product for $50 with 7% GST Tax</p> Debit Credit Revenue: Sold Goods 100 Liabilities: Deferred Tax Liabilities 9 Assets: Accounts Receivable 109 <p>Note</p> <p>Configuration:          - Revenues: defined on the product or on the internal category of related product (Income Account field)      - Deferred Tax Liabilities: defined on the tax used on the invoice line      - Accounts Receivable: defined on the customer (Receivable Account)      The fiscal position used on the invoice may have a rule that replaces the Income Account or the tax defined on the product by another one.</p>"},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#customer-shipping_1","title":"Customer Shipping","text":"<p>Note</p> <p>There is no journal entry generated</p> <p>At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books.  Then you need to break down the purchase balance into both the inventory and the cost of goods sold using the following formula: Cost of goods sold (COGS) = Starting inventory value + Purchases \u2013 Closing inventory value  To update the stock valuation in your books, record such an entry:</p> Debit Credit Assets: Inventory (closing value) X Expenses: Cost of Good Sold X Expenses: Purchased Goods X Assets: Inventory (starting value) X"},{"location":"01_application_guide/02_finance/10_inventory/03_manual_inventory_valuation/#manufacturing-orders_1","title":"Manufacturing Orders","text":"<p>Note</p> <p>There is no journal entry generated</p> <p>At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books.  Then you need to break down the purchase balance into both the inventory and the cost of goods sold using the following formula: Cost of goods sold (COGS) = Starting inventory value + Purchases \u2013 Closing inventory value  To update the stock valuation in your books, record such an entry:</p> Debit Credit Assets: Inventory (closing value) X Expenses: Cost of Good Sold X Expenses: Purchased Goods X Assets: Inventory (starting value) X"},{"location":"01_application_guide/03_sales_distribution/","title":"Sales & Distribution","text":"Getting Started Sales Operations Sales Contracts Busienss Requirement Managing Products Managing Pricing Commissions Management Setting Up Taxes"},{"location":"01_application_guide/03_sales_distribution/05_managing_products/","title":"Managing Products","text":""},{"location":"01_application_guide/03_sales_distribution/05_managing_products/#converting-products-into-product-variants","title":"Converting Products into Product Variants","text":"<p>Create the necessary attributes and the attribute values.   Each product.template record also automatically creates a product.product record (variant), even if no variants are created explicitly.  You may want to create a new product template with\u00a0\u00a0the\u00a0\u00a0corresponding\u00a0\u00a0variants , then go to the corresponding newly created product variants and export them\u00a0to\u00a0\u00a0see\u00a0\u00a0the\u00a0\u00a0External\u00a0\u00a0ID\u00a0\u00a0of\u00a0\u00a0the\u00a0\u00a0corresponding\u00a0\u00a0product\u00a0\u00a0template and the\u00a0\u00a0fields\u00a0\u00a0for\u00a0\u00a0the\u00a0\u00a0attribute\u00a0\u00a0values .  Also export the product variants of the old product templates. Then in the\u00a0\u00a0product\u00a0\u00a0variant\u00a0\u00a0records\u00a0 replace the External ID of the product template with the External ID of the newly created product template,\u00a0\u00a0add the\u00a0\u00a0attribute\u00a0\u00a0fields\u00a0 and\u00a0\u00a0reimport\u00a0\u00a0the\u00a0\u00a0product\u00a0\u00a0variants.  Then delete\u00a0\u00a0the\u00a0\u00a0newly\u00a0created\u00a0\u00a0product.product\u00a0\u00a0records\u00a0 of\u00a0\u00a0the\u00a0\u00a0new\u00a0\u00a0product\u00a0\u00a0template.\u00a0 Maybe it works.  But make a database backup before!</p>"},{"location":"01_application_guide/03_sales_distribution/06_managing_pricing/","title":"Managing Pricing","text":""},{"location":"01_application_guide/03_sales_distribution/06_managing_pricing/#how-to-adapt-your-prices-to-your-customers-and-apply-discounts","title":"How to adapt your prices to your customers and apply discounts","text":"<p>PerfectWORK has a powerful pricelist feature to support a pricing strategy tailored to your business. A pricelist is a list of prices or price rules that PerfectWORK searches to determine the suggested price. You can set several criteria to use a specific price: periods, min. sold quantity (meet a minimum order quantity and get a price break), etc.  As pricelists only suggest prices, they can be overridden by vendors completing sales orders. Choose your pricing strategy from Sales \u2023 Settings.  </p> <p>Note</p> <ul> <li>A single sale price per product : doesn\u2019t let you adapt prices, it use default product price ;</li> <li>Different prices per customer segment : you will set several prices per products ;</li> <li>Advanced pricing based on formula : will let you apply discounts, margins and roundings.</li> </ul>"},{"location":"01_application_guide/03_sales_distribution/06_managing_pricing/#several-prices-per-product","title":"Several prices per product","text":"<p>To apply several prices per product, select Different prices per customer segment in Sales \u2023 Settings. Then open the Sales tab in the product detail form. You can settle following strategies.</p>"},{"location":"01_application_guide/03_sales_distribution/06_managing_pricing/#prices-per-customer-segment","title":"Prices per customer segment","text":"<p>Create pricelists for your customer segments: e.g. registered, premium, etc.  </p>"},{"location":"01_application_guide/03_sales_distribution/06_managing_pricing/#temporary-prices","title":"Temporary prices","text":"<p>Apply deals for bank holidays, etc. Enter start and end dates dates.  </p> <p>Tip</p> <p>Make sure you have default prices set in the pricelist outside of the deals period. Otherwise you might have issues once the period over.</p>"},{"location":"01_application_guide/03_sales_distribution/06_managing_pricing/#prices-per-minimum-quantity","title":"Prices per minimum quantity","text":"<p>Note</p> <p>The prices order does not matter. The system is smart and applies first prices that match the order date and/or the minimal quantities.</p>"},{"location":"01_application_guide/03_sales_distribution/06_managing_pricing/#discounts-margins-roundings","title":"Discounts, margins, roundings","text":"<p>Advanced pricing based on formula allows to set price change rules. Changes can be relative to the product list/catalog price, the product cost price, or to another pricelist. Changes are calculated via discounts or surcharges and can be forced to fit within floor (minimum margin) and ceilings (maximum margins). Prices can be rounded to the nearest cent/dollar or multiple of either (nearest 5 cents, nearest 10 dollars).  Once installed go to Sales \u2023 Configuration \u2023 Pricelists (or Website Admin \u2023 Catalog \u2023 Pricelists if you use e-Commerce).   Each pricelist item can be associated to either all products, to a product internal category (set of products) or to a specific product. Like in second option, you can set dates and minimum quantities. </p> <p>Note</p> <ul> <li>Once again the system is smart. If a rule is set for a particular item and another one for its category, Odoo will take the rule of the item.</li> <li>Make sure at least one pricelist item covers all your products.</li> </ul> <p>There are 3 modes of computation: fix price, discount &amp; formula.   Here are different price settings made possible thanks to formulas. </p>"},{"location":"01_application_guide/03_sales_distribution/06_managing_pricing/#discounts-with-roundings","title":"Discounts with roundings","text":"<p>e.g. 20% discounts with prices rounded up to 9.99.  </p>"},{"location":"01_application_guide/03_sales_distribution/06_managing_pricing/#costs-with-markups-retail","title":"Costs with markups (retail)","text":"<p>e.g. sale price = 2*cost (100% markup) with $5 of minimal margin.  </p>"},{"location":"01_application_guide/03_sales_distribution/06_managing_pricing/#prices-per-country","title":"Prices per country","text":"<p>Pricelists can be set by countries group. Any new customer recorded in Odoo gets a default pricelist, i.e. the first one in the list matching the country. In case no country is set for the customer, Odoo takes the first pricelist without any country group.  The default pricelist can be replaced when creating a sales order.</p> <p>Tip</p> <p>You can change the pricelists sequence by drag &amp; drop in list view.</p>"},{"location":"01_application_guide/03_sales_distribution/06_managing_pricing/#compute-and-show-discount-percentage-to-customers","title":"Compute and show discount percentage to customers","text":"<p>In case of discount, you can show the public price and the computed discount % on printed sales orders and in your eCommerce catalog. To do so:      - Check Allow discounts on sales order lines in Sales \u2023 Configuration \u2023 Settings \u2023 Quotations &amp; Sales \u2023 Discounts.      - Apply the option in the pricelist setup form.  </p>"},{"location":"01_application_guide/04_marketing/","title":"CRM and Marketing","text":"Customer Relationship Management EMail Marketing SMS Marketing Social Media Events Management Customer Survey"},{"location":"01_application_guide/05_website/","title":"Website & eCommerce","text":"Getting Started Website Builder eCommerce eLearning Live Chat"},{"location":"01_application_guide/05_website/01_getting_started/","title":"Getting Started","text":"<p>Discover PerfectWORK Website Builder and learn how to build beautiful websites that convert visitors into leads or revenues.</p>"},{"location":"01_application_guide/05_website/01_getting_started/01_publish/","title":"How to translate my website","text":""},{"location":"01_application_guide/05_website/01_getting_started/01_publish/#overview","title":"Overview","text":"<p>In addition to creating great modern websites, PerfectWORK gives you the possibility to translate it in different languages.</p>"},{"location":"01_application_guide/05_website/01_getting_started/01_publish/#process","title":"Process","text":"<p>Once your website is created, you have the opportunity to translate it in as many different languages as you want.</p> <p></p> <p>You can only translate your website manually, follow the next step. </p> <p>Now go to your website. On the bottom right corner of the page, click on Add a language. </p> <p>Choose the language in which you want to translate your website and then click on Load. </p> <p>You will see that Now, next to English there is also Chinese, which means that the page for the translation has been created. You can also see</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/","title":"Manage Multi Websites","text":"<p>PerfectWORK\u2019s Multi-Websites opens up broad possibilities of diversification and customer segmentation for your business. A multiplied audience and boosted revenue are now just a few clicks away!</p> <p>Each website can work in a fully independent way, with its theme, branding, domain name, header &amp; footer, pages, languages, products, blog, posts, forum, slides, events, live chat channels, etc. Let\u2019s go for a tour!</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#setup","title":"Setup","text":"<p>To create a new website, go to :menuselection:<code>Website --&gt; Configuration --&gt; Settings</code>. The button, Create a new website, lays in the first section.</p> <p></p> <p>In the upcoming prompt, set a name for your new website and a specific domain name. Leave empty to publish the new website under the default domain of your PerfectWORK database. You can later set some country groups to redirect visitors to it using Geo IP.</p> <p> Then, select a theme. This new website might have an entirely different purpose or audience than the first one. So feel free to go for a different theme!  Once the theme is selected, you can start to build the homepage of your website. Follow the purple drops; they will help you in the first steps. </p> <p>Note</p> <p>If you run PerfectWORK Online, don\u2019t forget to redirect any new domain name to your PerfectWORK database (<code>CNAME</code>) and to authorize it PerfectWORK-side. See :ref:<code>domain-name/existing</code>.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#create-the-menu","title":"Create the menu","text":"<p>The new website has a default menu with all the installed applications. To edit it, click :menuselection:<code>Pages --&gt; Edit Menu</code>. Moving forward you only edit the menu of the current website.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#switch-from-one-website-to-another","title":"Switch from one website to another","text":"<p>As easy as ABC! There is a website switcher in the right corner of the edit bar. Switching to another website will connect to the domain of this website. If you use another domain for the website, the user is requested to sign in.</p> <p>Note</p> <p>When switching, you are redirected to the same domain path on the other website (e.g., <code>/shop/myproduct</code>). If this URL is not used, you will be redirected to a 404 page but prompted to create a new page from there.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#add-features","title":"Add features","text":"<p>The website apps you install (e.g., Slides, Blogs) are made available on all your websites. You can, of course, keep them hidden in one website by removing the menu item.  Each website comes with a high range of specific options in the settings. First, select the website to configure.  Then, take a look at the options flagged with the earth icon. It means they only impact the very website you are working on. </p> <p>You can, for instance, set specific :</p> <ul> <li> <p>languages,</p> </li> <li> <p>domain names,</p> </li> <li> <p>social media links,</p> </li> <li> <p>customer portal mode (B2C vs. B2B),</p> </li> <li> <p>dedicated live chat channels,</p> </li> <li> <p>etc.</p> </li> </ul> <p>The other options are global and apply to all your websites.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#manage-domain-names","title":"Manage domain names","text":"<p>As said earlier, your websites can either share the same domain name or use a specific one. If you share it and want to adapt the content per region, set country groups in the setting of each website. Visitors will be redirected to the right website using GeoIP.</p> <p>Note</p> <p>Geo IP is installed by default in PerfectWORK Online. If you run PerfectWORK on-premise, don\u2019t forget to install GeoIP library.  See :doc:<code>on-premise_geo-ip-installation</code></p> <p>If you setup an extra website and specify the domain name you will have to do three things to get this feature to work:</p> <ul> <li>Setup an A-record in the DNS configuration of your hosting provider so that \"www.mywebsite2.ext\" is redirected to the IP of your PerfectWORK instance.</li> <li>Create an extra Nginx <code>server</code> block in which you set the <code>server_name</code> that you've set in the :guilabel:<code>Website domain</code> field.</li> <li>Reload and restart your Nginx instance to use the new <code>server</code> block.</li> </ul>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#customize-the-visitor-experience","title":"Customize the visitor experience","text":"<p>The customer experience can be customized very profoundly thanks to the menu *Customize*. All the visual options available there are specific to each website. Go through the different pages to adapt them to this new audience. Focus on workflows, and automatic pages (eCommerce checkout, blogs, events, etc.) as the number of available options is higher there.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#publish-specific-content-per-website","title":"Publish specific content per website","text":"<p>Like static pages, any content created from the front-end (product, blog post, etc.) is always only published in the current website. You can change that from the edit form view in the backend and leave the Website field blank. This will publish it in all the websites.</p> <p>Here are all the objects that you can link to either one or all the websites:</p> <ol> <li> <p>Products</p> </li> <li> <p>Product Categories for eCommerce</p> </li> <li> <p>Blogs</p> </li> <li> <p>Slide Channels</p> </li> <li> <p>Forums</p> </li> <li> <p>Events</p> </li> <li> <p>Job Positions</p> </li> </ol> <p>Note</p> <p>When you create the record from the backend and publish it, typically a product or an event, it is made available in all websites.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#publish-a-page-in-all-websites","title":"Publish a page in all websites","text":"<p>A new static page is created and only made available in the current website. You can duplicate it to other websites from :menuselection:<code>Website --&gt; Configuration --&gt; Pages</code>. To do so, leave the Website field empty.  If you want to duplicate it in just one other website, duplicate the page and set the new website.  When you edit the page again, the change only affects the current website. A new page is duplicated and tied up to the website. The original page still being linked to all websites.</p> <p>Tip</p> <p>By grouping pages by URL in the page manager, you quickly find the original page behind each edited page.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#multi-companies","title":"Multi-companies","text":"<p>Each website can be linked to a specific company of your system, in a multi-companies environment.  With such a configuration, only company-related data appear on the website (products, jobs, events, etc.).  Website editors can only view and edit the pages of the records they have access to, typically the ones belonging to their current company (and to their subsidiaries, or child companies in PerfectWORK language). And so is it for visitors.</p> <p>Note</p> <p>If websites are multi-companies, you don\u2019t change company when switching websites. To change the company and see the related content, use the company selector in the menu.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#configure-your-ecommerce-website","title":"Configure your eCommerce website","text":"<p>eCommerce is a crucial feature in the multi-websites environment. We made it so that the entire flow can be customized to fit the very audience of each website.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#products-only-available-on-one-website","title":"Products only available on one website","text":"<p>We already saw earlier how to publish a specific record in only one website. You will find the *Website* field in the eCommerce tab of the product edit form. Empty means available in all websites.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#products-available-on-some-websites","title":"Products available on some websites","text":"<p>To make a product available on some websites, but not all of them, you should duplicate the product for each website.</p> <p>If you need a unique reference to manage in your inventory, you should install Manufacturing and create *Kits BoMs (bills of materials).  Each kit will link each published \u201cvirtual\u201d product to the main reference managed in your inventory. That way, any item sold from your website will be converted into the storable item in the delivery order.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#pricelists","title":"Pricelists","text":"<p>To manage specific prices by websites, you can activate Multiple Sales Prices per Product in Website settings.  Then, go to :menuselection:<code>Website --&gt; Products --&gt; Pricelists</code> to create additional pricelists. You can also choose to have a pricelist available only on a specific website.</p> <p>Leaving the field empty means that you make it work in all websites if Selectable is selected. Otherwise, it makes it only available for backend operations of Sales and Point of Sale applications.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#payment-providers-and-delivery-methods","title":"Payment Providers and Delivery Methods","text":"<p>By default, published payment providers and delivery methods are deployed in all websites.  You could already use specific payment providers per country using Geo IP by defining countries in their configuration. Now you can also do it per website by filling in the Website field.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#customer-accounts","title":"Customer accounts","text":"<p>There is a setting to choose how to manage customer accounts in Website settings. You can either allow customers to use one account through all the websites or compel them to create one account for each website. This last option is convenient if your websites shouldn\u2019t be related to each other in the visitor mind.</p>"},{"location":"01_application_guide/05_website/01_getting_started/02_multi_website/#technical-hints-for-customization","title":"Technical hints for customization","text":"<p>If you want to publish custom objects on the website, here are a few tips to make it work with multi websites:</p> <ul> <li> <p>Sitemap: don\u2019t forget the domain in the route to only publish        available records in each website\u2019s sitemap.</p> </li> <li> <p>Access: you should call the method        can_access_from_current_website in the controller to make        sure the visitor can see a record in the current website.</p> </li> <li> <p>Search: when a list of records is displayed, don\u2019t forget to specify        the domain to only display records available for the current        website.</p> </li> </ul>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/","title":"Manage Multi Websites","text":"<p>PerfectWORK\u2019s Multi-Websites opens up broad possibilities of diversification and customer segmentation for your business. A multiplied audience and boosted revenue are now just a few clicks away!</p> <p>Each website can work in a fully independent way, with its theme, branding, domain name, header &amp; footer, pages, languages, products, blog, posts, forum, slides, events, live chat channels, etc. Let\u2019s go for a tour!</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#setup","title":"Setup","text":"<p>To create a new website, go to :menuselection:<code>Website --&gt; Configuration --&gt; Settings</code>. The button, Create a new website, lays in the first section.</p> <p></p> <p>In the upcoming prompt, set a name for your new website and a specific domain name. Leave empty to publish the new website under the default domain of your PerfectWORK database. You can later set some country groups to redirect visitors to it using Geo IP.</p> <p> Then, select a theme. This new website might have an entirely different purpose or audience than the first one. So feel free to go for a different theme!  Once the theme is selected, you can start to build the homepage of your website. Follow the purple drops; they will help you in the first steps. </p> <p>Note</p> <p>If you run PerfectWORK Online, don\u2019t forget to redirect any new domain name to your PerfectWORK database (<code>CNAME</code>) and to authorize it PerfectWORK-side. See :ref:<code>domain-name/existing</code>.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#create-the-menu","title":"Create the menu","text":"<p>The new website has a default menu with all the installed applications. To edit it, click :menuselection:<code>Pages --&gt; Edit Menu</code>. Moving forward you only edit the menu of the current website.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#switch-from-one-website-to-another","title":"Switch from one website to another","text":"<p>As easy as ABC! There is a website switcher in the right corner of the edit bar. Switching to another website will connect to the domain of this website. If you use another domain for the website, the user is requested to sign in.</p> <p>Note</p> <p>When switching, you are redirected to the same domain path on the other website (e.g., <code>/shop/myproduct</code>). If this URL is not used, you will be redirected to a 404 page but prompted to create a new page from there.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#add-features","title":"Add features","text":"<p>The website apps you install (e.g., Slides, Blogs) are made available on all your websites. You can, of course, keep them hidden in one website by removing the menu item.  Each website comes with a high range of specific options in the settings. First, select the website to configure.  Then, take a look at the options flagged with the earth icon. It means they only impact the very website you are working on. </p> <p>You can, for instance, set specific :</p> <ul> <li> <p>languages,</p> </li> <li> <p>domain names,</p> </li> <li> <p>social media links,</p> </li> <li> <p>customer portal mode (B2C vs. B2B),</p> </li> <li> <p>dedicated live chat channels,</p> </li> <li> <p>etc.</p> </li> </ul> <p>The other options are global and apply to all your websites.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#manage-domain-names","title":"Manage domain names","text":"<p>As said earlier, your websites can either share the same domain name or use a specific one. If you share it and want to adapt the content per region, set country groups in the setting of each website. Visitors will be redirected to the right website using GeoIP.</p> <p>Note</p> <p>Geo IP is installed by default in PerfectWORK Online. If you run PerfectWORK on-premise, don\u2019t forget to install GeoIP library.  See :doc:<code>on-premise_geo-ip-installation</code></p> <p>If you setup an extra website and specify the domain name you will have to do three things to get this feature to work:</p> <ul> <li>Setup an A-record in the DNS configuration of your hosting provider so that \"www.mywebsite2.ext\" is redirected to the IP of your PerfectWORK instance.</li> <li>Create an extra Nginx <code>server</code> block in which you set the <code>server_name</code> that you've set in the :guilabel:<code>Website domain</code> field.</li> <li>Reload and restart your Nginx instance to use the new <code>server</code> block.</li> </ul>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#customize-the-visitor-experience","title":"Customize the visitor experience","text":"<p>The customer experience can be customized very profoundly thanks to the menu *Customize*. All the visual options available there are specific to each website. Go through the different pages to adapt them to this new audience. Focus on workflows, and automatic pages (eCommerce checkout, blogs, events, etc.) as the number of available options is higher there.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#publish-specific-content-per-website","title":"Publish specific content per website","text":"<p>Like static pages, any content created from the front-end (product, blog post, etc.) is always only published in the current website. You can change that from the edit form view in the backend and leave the Website field blank. This will publish it in all the websites.</p> <p>Here are all the objects that you can link to either one or all the websites:</p> <ol> <li> <p>Products</p> </li> <li> <p>Product Categories for eCommerce</p> </li> <li> <p>Blogs</p> </li> <li> <p>Slide Channels</p> </li> <li> <p>Forums</p> </li> <li> <p>Events</p> </li> <li> <p>Job Positions</p> </li> </ol> <p>Note</p> <p>When you create the record from the backend and publish it, typically a product or an event, it is made available in all websites.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#publish-a-page-in-all-websites","title":"Publish a page in all websites","text":"<p>A new static page is created and only made available in the current website. You can duplicate it to other websites from :menuselection:<code>Website --&gt; Configuration --&gt; Pages</code>. To do so, leave the Website field empty.  If you want to duplicate it in just one other website, duplicate the page and set the new website.  When you edit the page again, the change only affects the current website. A new page is duplicated and tied up to the website. The original page still being linked to all websites.</p> <p>Tip</p> <p>By grouping pages by URL in the page manager, you quickly find the original page behind each edited page.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#multi-companies","title":"Multi-companies","text":"<p>Each website can be linked to a specific company of your system, in a multi-companies environment.  With such a configuration, only company-related data appear on the website (products, jobs, events, etc.).  Website editors can only view and edit the pages of the records they have access to, typically the ones belonging to their current company (and to their subsidiaries, or child companies in PerfectWORK language). And so is it for visitors.</p> <p>Note</p> <p>If websites are multi-companies, you don\u2019t change company when switching websites. To change the company and see the related content, use the company selector in the menu.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#configure-your-ecommerce-website","title":"Configure your eCommerce website","text":"<p>eCommerce is a crucial feature in the multi-websites environment. We made it so that the entire flow can be customized to fit the very audience of each website.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#products-only-available-on-one-website","title":"Products only available on one website","text":"<p>We already saw earlier how to publish a specific record in only one website. You will find the *Website* field in the eCommerce tab of the product edit form. Empty means available in all websites.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#products-available-on-some-websites","title":"Products available on some websites","text":"<p>To make a product available on some websites, but not all of them, you should duplicate the product for each website.</p> <p>If you need a unique reference to manage in your inventory, you should install Manufacturing and create *Kits BoMs (bills of materials).  Each kit will link each published \u201cvirtual\u201d product to the main reference managed in your inventory. That way, any item sold from your website will be converted into the storable item in the delivery order.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#pricelists","title":"Pricelists","text":"<p>To manage specific prices by websites, you can activate Multiple Sales Prices per Product in Website settings.  Then, go to :menuselection:<code>Website --&gt; Products --&gt; Pricelists</code> to create additional pricelists. You can also choose to have a pricelist available only on a specific website.</p> <p>Leaving the field empty means that you make it work in all websites if Selectable is selected. Otherwise, it makes it only available for backend operations of Sales and Point of Sale applications.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#payment-providers-and-delivery-methods","title":"Payment Providers and Delivery Methods","text":"<p>By default, published payment providers and delivery methods are deployed in all websites.  You could already use specific payment providers per country using Geo IP by defining countries in their configuration. Now you can also do it per website by filling in the Website field.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#customer-accounts","title":"Customer accounts","text":"<p>There is a setting to choose how to manage customer accounts in Website settings. You can either allow customers to use one account through all the websites or compel them to create one account for each website. This last option is convenient if your websites shouldn\u2019t be related to each other in the visitor mind.</p>"},{"location":"01_application_guide/05_website/01_getting_started/03_optimize/#technical-hints-for-customization","title":"Technical hints for customization","text":"<p>If you want to publish custom objects on the website, here are a few tips to make it work with multi websites:</p> <ul> <li> <p>Sitemap: don\u2019t forget the domain in the route to only publish        available records in each website\u2019s sitemap.</p> </li> <li> <p>Access: you should call the method        can_access_from_current_website in the controller to make        sure the visitor can see a record in the current website.</p> </li> <li> <p>Search: when a list of records is displayed, don\u2019t forget to specify        the domain to only display records available for the current        website.</p> </li> </ul>"},{"location":"01_application_guide/06_manufacturing/","title":"Manufacturing and Warehousing","text":"Getting Started Purchase Management Production Management Demand Driven Material Requirements Planning Maintenance RMA (Return Merchandise Authorization) Warehouse Management Shipping Advance Route Barcodes"},{"location":"01_application_guide/07_supply_chain/","title":"Supply Chain and Logistics","text":"Getting Started Fleet Tracking"},{"location":"01_application_guide/08_human_resources/","title":"Human Resources","text":"Getting Started Recruitment Employee Management Attendance Leave Expenses Payroll Skill Management In-Country Localization"},{"location":"01_application_guide/09_customer_services/","title":"Customer Services","text":"Getting Started Appointments Project Management Timesheet Help Desk Field Services"},{"location":"01_application_guide/10_retail_store/","title":"Retail Store","text":"Overview Shop Features Payment Terminal"},{"location":"01_application_guide/10_retail_store/01_overview/","title":"Getting Started","text":"<p>Point of Sale is a fully integrated application that allows you to sell products (online or offline) with any device. It also automatically registers product moves in your stock, gives you real-time statistics, and consolidations across all shops.</p>"},{"location":"01_application_guide/10_retail_store/01_overview/#configuration","title":"Configuration","text":""},{"location":"01_application_guide/10_retail_store/01_overview/#make-products-available","title":"Make products available","text":"<p>To make products available for sale, go to Point of Sale \u2023 Products \u2023 Products, and select a product to open the product form. In the Sales tab, enable Available in POS.</p> <p> </p>"},{"location":"01_application_guide/10_retail_store/01_overview/#configure-payment-methods","title":"Configure payment methods","text":"<p>To add a payment method, you first need to create it. Go to Point of Sale \u2023 Configuration \u2023 Payment Methods \u2023 Create, and set a name. Check Identify Customer to allow this payment method exclusively for registered customers.</p> <p> Then, select the Journal. Choose Cash to use this payment method for cash payments, or Bank to use it for card payments.</p> <p> </p> <p>Note</p> <ul> <li> <p>Selecting a bank journal automatically adds the Use a Payment Terminal field in which you can add your terminal\u2019s information.</p> </li> <li> <p>Credentials are mandatory to use a payment terminal. To learn how to configure the different terminals, check out the following documentation pages:</p> <ul> <li>Adyen configuration</li> <li>Stripe configuration</li> </ul> </li> </ul> <p></p> <p>Once the payment method is created, you can select it in your POS settings. To do so, go to Point of Sale \u2023 Configuration \u2023 Settings. Select a POS for which you wish to make the payment method available in the Point of Sale field, and add the payment method(s) under the Payment section.</p>"},{"location":"01_application_guide/10_retail_store/01_overview/#pos-sessions","title":"POS sessions","text":""},{"location":"01_application_guide/10_retail_store/01_overview/#start-a-session","title":"Start a session","text":"<p>From the POS dashboard, click New Session and at the Opening Cash Control screen, click Open Session to start a POS session, or click Continue Selling if the session is already opened.</p> <p></p> <p>Note</p> <p>Multiple users can be connected to the same session at the same time. However, the session can only be opened once on the same browser.</p> <p> Click products to add them to the cart. To change the quantity, click Qty and enter the number of products using the keypad. To add a discount or modify the product price, click respectively % Disc or Price and enter the amounts.</p> <p> Once an order is completed, proceed to checkout by clicking Payment. Select the payment method, enter the received amount, and click Validate. Click New Order to move on to the next customer.</p> <p> </p> <p></p> <p>Tip</p> <ul> <li>You can use both , and . on your keyboard as decimal separators.</li> <li>Cash is selected by default if you enter the amount without choosing a payment method.</li> </ul> <p></p>"},{"location":"01_application_guide/10_retail_store/01_overview/#return-and-refund-products","title":"Return and refund products","text":"<p>To return and refund a product</p> <ul> <li>start a session from the POS dashboard </li> <li>click Refund and select the corresponding order </li> <li>select the product and the quantity to refund using the keypad </li> <li>click Refund to go back to the previous screen </li> <li>once the order is completed, click Payment to proceed to the refund </li> <li>click Validate and New Order to move on to the next customer</li> </ul> <p> </p> <p>Note</p> <ul> <li>You can filter the orders list by Receipt Number, Date or Customer using the search bar.</li> <li>You can also refund a product by selecting the returned product from an open session, and setting a negative quantity that equals the number of returned products. To do so, click Qty and \u00b1, followed by the quantity of returned products.</li> </ul> <p></p>"},{"location":"01_application_guide/10_retail_store/01_overview/#close-the-pos-session","title":"Close the POS session","text":"<p>To close your session, click Close in the upper right corner of your screen; doing so opens the Closing Control pop-up screen. From this screen, you can retrieve various information:</p> <ul> <li>the number of orders made and the total amount made during the session;</li> <li>the expected amounts grouped by payment method.</li> </ul> <p>Before closing this window, count your cash using the calculator icon. Doing so opens a pop-up window that computes the total amount in the cash drawer depending on the coins and bills counted and added manually. Then, click Confirm or Discard to close the window. The computed amount is set in the Counted column, and the Money Details are specified in the Notes section.</p> <p> </p> <p> Once you are done controlling the amounts, click Close Session to close and go back to the POS dashboard.</p> <p></p> <p>Note</p> <ul> <li>You can let the session open by clicking Backend or abort and keep selling by clicking Discard.</li> <li>Depending on your setup, you might only be allowed to close a session if the expected cash revenue equals the counted cash. To close it anyway, click Ok at the Payments Difference screen.</li> </ul> <p>Tip</p> <ul> <li>It is strongly advised to close your POS session at the end of each day.</li> <li>To look at all your previous sessions, go to Point of Sale \u2023 Orders \u2023 Sessions.</li> </ul>"},{"location":"01_application_guide/10_retail_store/01_overview/#view-statistics","title":"View statistics","text":"<p>To access your statistics, go to Point of Sale \u2023 Reporting \u2023 Orders. Or, from the POS dashboard, click the vertical ellipsis (\u22ee) button, Reporting, and Orders.</p> <p> These statistics are available in a graph or pivot view that you can filter or group depending on your needs.</p>"},{"location":"02_solution_guide/","title":"Configuration Guide","text":"Industrial Solutions Clinic Management Membership Management Internal Management System (ISO)"},{"location":"02_solution_guide/01_clinic_management/","title":"Clinic Management","text":"Getting Started Patients Appointments"},{"location":"02_solution_guide/02_mentoring/","title":"Mentoring & Couching","text":"Getting Started Membership Mentor - Mentee Management"},{"location":"03_system_guide/","title":"Configuration Guide","text":"<p>For Developer and System Engineers</p>"},{"location":"04_developer_guide/","title":"Developer Guide","text":"Development Guide PW CLI External API"},{"location":"04_developer_guide/01_pw_cli/","title":"PW CLI","text":"<p>This section gives the bare minimum to use PW_CLI as a command line tool or within an interactive shell.</p> <p>This is a test .</p>"},{"location":"04_developer_guide/01_pw_cli/#installation","title":"Installation","text":"<p>Download and install the latest release from PyPI:</p> <pre><code>    pip install -U pw_cli\n</code></pre>"},{"location":"04_developer_guide/01_pw_cli/#command-line-arguments","title":"Command line arguments","text":"<p>There are few arguments to query PerfectWORK models from the command line. Although it is quite limited:</p> <pre><code>$ PW_CLI --help\n\nUsage: PW_CLI.py [options] [search_term_or_id [search_term_or_id ...]]\n\nInspect data on PerfectWORK objects.  Use interactively or query a model (-m) and\npass search terms or ids as positional parameters after the options.\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  -l, --list            list sections of the configuration\n  --env=ENV             read connection settings from the given section\n  -c CONFIG, --config=CONFIG\n                        specify alternate config file (default: 'PW_CLI.ini')\n  --server=SERVER       full URL of the server (default:\n                        http://localhost:8069/xmlrpc)\n  -d DB, --db=DB        database\n  -u USER, --user=USER  username\n  -p PASSWORD, --password=PASSWORD\n                        password, or it will be requested on login\n  -m MODEL, --model=MODEL\n                        the type of object to find\n  -f FIELDS, --fields=FIELDS\n                        restrict the output to certain fields (multiple\n                        allowed)\n  -i, --interact        use interactively; default when no model is queried\n  -v, --verbose         verbose\n$ #\n</code></pre> <p>Example:</p> <pre><code>$ pw_cli -d demo -m res.partner -f name -f lang 1\n\"name\",\"lang\"\n\"Your Company\",\"en_US\"\n</code></pre> <pre><code>$ pw_cli -d demo -m res.groups -f full_name 'id &gt; 0'\n\"full_name\"\n\"Administration / Access Rights\"\n\"Administration / Configuration\"\n\"Human Resources / Employee\"\n\"Usability / Multi Companies\"\n\"Usability / Extended View\"\n\"Usability / Technical Features\"\n\"Sales Management / User\"\n\"Sales Management / Manager\"\n\"Partner Manager\"\n</code></pre>"},{"location":"04_developer_guide/01_pw_cli/#interactive-use","title":"Interactive use","text":"<p>Edit pw_cli.ini and declare the environment(s):</p> <pre><code>[DEFAULT]\nscheme = http\nhost = localhost\nport = 8069\ndatabase = perfectwork\nusername = admin\n\n[demo]\nusername = demo\npassword = demo\nprotocol = xmlrpc\n\n[demo_jsonrpc]\nusername = demo\npassword = demo\nprotocol = jsonrpc\n\n[local]\nscheme = local\noptions = -c /path/to/pw-server.conf --without-demo all\n</code></pre> <p>Connect to the PerfectWORK server:</p> <pre><code>pw_cli --list\npw_cli --env demo\n</code></pre> <p>This is a sample session:</p> <pre><code>&gt;&gt;&gt; env['res.users']\n&lt;Model 'res.users'&gt;\n&gt;&gt;&gt; env['res.users'].search_count()\n4\n&gt;&gt;&gt; crons = env['ir.cron'].with_context(active_test=False).search([])\n&gt;&gt;&gt; crons.read('active name')\n[{'active': True, 'id': 5, 'name': 'Calendar: Event Reminder'},\n {'active': False, 'id': 4, 'name': 'Mail: Fetchmail Service'}]\n&gt;&gt;&gt; #\n&gt;&gt;&gt; env.modules('delivery')\n{'uninstalled': ['delivery', 'website_sale_delivery']}\n&gt;&gt;&gt; env.upgrade('base')\n1 module(s) selected\n42 module(s) to process:\n  to upgrade    account\n  to upgrade    account_chart\n  to upgrade    account_tax_include\n  to upgrade    base\n  ...\n&gt;&gt;&gt; #\n</code></pre> <p>Note</p> <p>Use the --verbose switch to see what happens behind the scene. Lines are truncated at 79 chars. Use -vv or -vvv to print more.</p> <p>Note</p> <p>To preserve the history of commands when closing the session, first create an empty file in your home directory: touch ~/.pw_cli_history</p> <p>More details in the Tutorial section.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/","title":"API","text":"<p>The library provides few objects to access the PerfectWORK model and the associated services of the PerfectWORK API.  The signature of the methods mimics the standard methods provided by the osv.Model PerfectWORK class. This is intended to help the developer when developping addons. What is experimented at the interactive prompt should be portable in the application with little effort.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#client-and-services","title":"Client and Services","text":"<p>The Client object provides thin wrappers around PerfectWORK RPC services and their methods. Additional helpers are provided to explore the models and list or install PerfectWORK add-ons. <pre><code>class pw_cli.Client(server, db=None, user=None, password=None, transport=None, verbose=False)\n</code></pre> Connection to an PerfectWORK instance.  This is the top level object. The server is the URL of the instance, like http://localhost:8069. If server is an PerfectWORK/openerp Python package, it is used to connect to the local server.  The db is the name of the database and the user should exist in the table res.users. If the password is not provided, it will be asked on login.</p> <p><pre><code>class methodClient.from_config(environment, user=None, verbose=False)[source]\n</code></pre> Create a connection to a defined environment.  Read the settings from the section [environment] in the pw_cli.ini file and return a connected Client. See read_config() for details of the configuration file format.</p> <p><pre><code>Client.create_database(passwd, database, demo=False, lang='en_US', user_password='admin', login='admin', country_code=None)[source]\n</code></pre> Create a new database.  The superadmin passwd and the database name are mandatory. By default, demo data are not loaded, lang is en_US and no country is set into the database. Login if successful.</p> <p><pre><code>Client.clone_database(passwd, database)[source]\n</code></pre> Clone the current database.</p> <p>The superadmin passwd and database are mandatory. Login if successful.</p> <p><pre><code>Client.login(user, password=None, database=None)[source]\n</code></pre> Switch user and (optionally) database.</p> <p>Note</p> <p>In interactive mode, a method Client.connect(env=None) exists, to connect to another environment, and recreate the globals().</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#perfectwork-rpc-services","title":"PerfectWORK RPC Services","text":"<p>The naked PerfectWORK RPC services are exposed too. The db and the common services expose few methods which might be helpful for server administration. Use the dir() function to introspect them. The _object service should not be used directly because its methods are wrapped and exposed on the Env object itself. The two last services are deprecated and removed in recent versions of PerfectWORK. Please refer to the PerfectWORK documentation for more details.</p> <p><pre><code>Client.db\n</code></pre> Expose the db Service.</p> <p>Examples: Client.db.list() or Client.db.server_version() RPC methods.</p> <p><pre><code>Client.common\n</code></pre> Expose the common Service.</p> <p>Example: Client.common.login_message() RPC method.</p> <p><pre><code>Client._object\n</code></pre> Expose the object Service.</p> <p><pre><code>Client._report\n</code></pre> Expose the report Service.</p> <p><pre><code>class pw_cli.Service(client, endpoint, methods, verbose=False)[source]\n</code></pre> A wrapper around XML-RPC endpoints.</p> <p>The connected endpoints are exposed on the Client instance. The server argument is the URL of the server (scheme+host+port). If server is an PerfectWORK Python package, it is used to connect to the local server. The endpoint argument is the name of the service (examples: \"object\", \"db\"). The methods is the list of methods which should be exposed on this endpoint. Use dir(...) on the instance to list them.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#environment","title":"Environment","text":"<p><pre><code>class PerfectWORKly.Env[source]\n</code></pre> An environment wraps data for PerfectWORK models and records:</p> <ul> <li>db_name, the current database;</li> <li>uid, the current user id;</li> <li>context, the current context dictionary.</li> </ul> <p>To retrieve an instance of some.model:</p> <pre><code>&gt;&gt;&gt; env[\"some.model\"]\n</code></pre>"},{"location":"04_developer_guide/01_pw_cli/01_api/#db_name","title":"db_name","text":"<p>Environment\u2019s database name.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#uid","title":"uid","text":"<p>Environment\u2019s user id.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#user","title":"user","text":"<p>Instance of the environment\u2019s user.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#context","title":"context","text":"<p>Environment\u2019s context dictionary. It defaults to the lang and tz of the user. Use Model.with_context() to switch the context. For example env['account.invoice'].with_context({}) can be used to call a method which does not accept the context argument.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#cr","title":"cr","text":"<p>Cursor on the current database.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#sudousersuperuser_idsource","title":"sudo(user=SUPERUSER_ID)[source]","text":"<p>Attach to the provided user, or SUPERUSER.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#getitemnamesource","title":"getitem(name)[source]","text":"<p>Return the given Model.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#accessmodel_name-modereadsource","title":"access(model_name, mode='read')[source]","text":"<p>Check if the user has access to this model.</p> <p>Optional argument mode is the access mode to check. Valid values are read, write, create and unlink. If omitted, the read mode is checked. Return a boolean.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#executeobj-method-params-kwargssource","title":"execute(obj, method, *params, **kwargs)[source]","text":"<p>Wrapper around object.execute_kw RPC method.</p> <p>Argument method is the name of an osv.osv method or a method available on this obj. Method params are allowed. If needed, keyword arguments are collected in kwargs.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#lang","title":"lang","text":"<p>Return the current language code.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#modelsnamesource","title":"models(name='')[source]","text":"<p>Search PerfectWORK models.</p> <p>The argument name is a pattern to filter the models returned. If omitted, all models are returned.</p> <p>The return value is a sorted list of model names.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#perfectwork_env","title":"PerfectWORK_env","text":"<p>Return a server Environment.</p> <p>Supported since PerfectWORK 8.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#refxml_idsource","title":"ref(xml_id)[source]","text":"<p>Return the record for the given xml_id external ID.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#registry","title":"registry","text":"<p>Return the environment\u2019s registry.</p> <p>Note</p> <p>When connected to the local PerfectWORK server, the Env.PerfectWORK_env attribute grabs an PerfectWORK Environment with the same characteristics as the Env instance (db_name, uid, context). In this case a cursor on the database is available as Env.cr.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#advanced-methods","title":"Advanced methods","text":"<p>Those methods give more control on the PerfectWORK objects: workflows and reports. Please refer to the PerfectWORK documentation for details.</p> <p><pre><code>Env.execute(obj, method, *params, **kwargs)[source]\n</code></pre> Wrapper around object.execute_kw RPC method.  Argument method is the name of an osv.osv method or a method available on this obj. Method params are allowed. If needed, keyword arguments are collected in kwargs.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#manage-addons","title":"Manage addons","text":"<p>These helpers are convenient to list, install or upgrade addons from a Python script or interactively in a Python session.</p> <p><pre><code>Env.modules(name='', installed=None)[source]\n</code></pre> Return a dictionary of modules.</p> <p>The optional argument name is a pattern to filter the modules. If the boolean argument installed is True, the modules which are \u201cNot Installed\u201d or \u201cNot Installable\u201d are omitted. If the argument is False, only these modules are returned. If argument installed is omitted, all modules are returned. The return value is a dictionary where module names are grouped in lists according to their state.</p> <p><pre><code>Env.install(*modules)[source]\n</code></pre> Press the button Install.</p> <p><pre><code>Env.upgrade(*modules)[source]\n</code></pre> Press the button Upgrade.</p> <p><pre><code>Env.uninstall(*modules)[source]\n</code></pre> Press the button Uninstall.</p> <p>Note</p> <p>It is not recommended to install or upgrade modules in offline mode when any web server is still running: the operation will not be signaled to other processes. This restriction does not apply when connected through XML-RPC or JSON-RPC.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#model-and-records","title":"Model and Records","text":"<p>The Env provides a high level API similar to the PerfectWORK API, which encapsulates objects into Active Records.</p> <p>The Model is instantiated using the client.env[...] syntax.</p> <p>Example: client.env['res.company'] returns a Model.</p> <p><pre><code>class pw_cli.Model(client, model_name)[source]\n</code></pre> The class for PerfectWORK models.</p> <p>keys()[source]</p> <p>Return the keys of the model.</p> <p>fields(names=None, attributes=None)[source]</p> <p>Return a dictionary of the fields of the model.</p> <p>Optional argument names is a sequence of field names or a space separated string of these names. If omitted, all fields are returned. Optional argument attributes is a sequence of attributes or a space separated string of these attributes. If omitted, all attributes are returned.</p> <p>field(name)[source]</p> <p>Return the field properties for field name.</p> <p>access(mode='read')[source]</p> <p>Check if the user has access to this model.</p> <p>Optional argument mode is the access mode to check. Valid values are read, write, create and unlink. If omitted, the read mode is checked. Return a boolean.</p> <p>search(domain, offset=0, limit=None, order=None)[source]</p> <p>Search for records in the domain.</p> <p>search_count(domain)[source]</p> <p>Count the records in the domain.</p> <p>read(domain, fields=None, offset=0, limit=None, order=None)[source]</p> <p>Wrapper for client.execute(model, 'read', [...], ('a', 'b')).</p> <p>The first argument is a list of ids [1, 3] or a single id 42.</p> <p>The second argument, fields, accepts: - a single field: 'first_name' - a tuple of fields: ('street', 'city') - a space separated string: 'street city' - a format spec: '%(street)s %(city)s' If fields is omitted, all fields are read.</p> <p>If domain is a single id, then:</p> <ul> <li>return a single value if a single field is requested.</li> <li>return a string if a format spec is passed in the fields argument.</li> <li>else, return a dictionary.</li> </ul> <p>If domain is not a single id, the returned value is a list of items. Each item complies with the rules of the previous paragraph.</p> <p>The optional keyword arguments offset, limit and order are used to restrict the search. The order is also used to order the results returned. Note: the low-level RPC method read itself does not preserve the order of the results.</p> <p>get(domain)[source]</p> <p>Return a single Record.</p> <p>The argument domain accepts a single integer id or a search domain, or an external ID xml_id. The return value is a Record or None. If multiple records are found, a ValueError is raised.</p> <p>browse(ids)[source]</p> <p>Return a Record or a RecordList.</p> <p>The argument ids accepts a single integer id or a list of ids. If it is a single integer, the return value is a Record. Otherwise, the return value is a RecordList.</p> <p>create(values)[source]</p> <p>Create a Record.</p> <p>The argument values is a dictionary of values which are used to create the record. Relationship fields one2many and many2many accept either a list of ids or a RecordList or the extended PerfectWORK syntax. Relationship fields many2one and reference accept either a Record or the PerfectWORK syntax.</p> <p>The newly created Record is returned.</p> <p>with_env(env)</p> <p>Attach to the provided environment.</p> <p>sudo(user=SUPERUSER_ID)</p> <p>Attach to the provided user, or SUPERUSER.</p> <p>with_context([context][, **overrides])</p> <p>Attach to an extended context.</p> <p>_get_external_ids(ids=None)[source]</p> <p>Retrieve the External IDs of the records.</p> <p>Return a dictionary with keys being the fully qualified External IDs, and values the Record entries.</p> <p><pre><code>class pw_cli.RecordList(model, ids)[source]\n</code></pre> A sequence of PerfectWORK Record.</p> <p>It has a similar API as the Record class, but for a list of records. The attributes of the RecordList are read-only, and they return list of attribute values in the same order. The many2one, one2many and many2many attributes are wrapped in RecordList and list of RecordList objects. Use the method RecordList.write to assign a single value to all the selected records.</p> <p>read(fields=None)[source]</p> <p>Wrapper for the Record.read() method.</p> <p>Return a RecordList if fields is the name of a single many2one field, else return a list. See Model.read() for details.</p> <p>write(values)</p> <p>Wrapper for the Record.write() method.</p> <p>unlink()</p> <p>Wrapper for the Record.unlink() method.</p> <p>exists()</p> <p>Return a subset of records that exist.</p> <p>mapped(func)</p> <p>Apply func on all records.</p> <p>filtered(func)</p> <p>Select the records such that func(rec) is true.</p> <p>As an alternative func can be a search domain (list) to search among the records.</p> <p>sorted(key=None, reverse=False)</p> <p>Return the records sorted by key.</p> <p>ensure_one()</p> <p>Return the single record in this recordset.</p> <p>Raise a ValueError it recordset has more records or is empty.</p> <p>union(*args)</p> <p>Return the union of all records.</p> <p>Preserve first occurence order.</p> <p>concat(*args)</p> <p>Return the concatenation of all records.</p> <p>with_env(env)</p> <p>Attach to the provided environment.</p> <p>sudo(user=SUPERUSER_ID)</p> <p>Attach to the provided user, or SUPERUSER.</p> <p>with_context([context][, **overrides])</p> <p>Attach to an extended context.</p> <p>get_metadata()</p> <p>Wrapper for the Record.get_metadata() method.</p> <p>_external_id</p> <p>Retrieve the External IDs of the RecordList.</p> <p>Return the list of fully qualified External IDs of the RecordList, with default value False if there\u2019s none. If multiple IDs exist for a record, only one of them is returned.</p> <p><pre><code>class pw_cli.Record(model, id)[source]\n</code></pre> A class for all PerfectWORK records.</p> <p>It maps any PerfectWORK object. The fields can be accessed through attributes. The changes are immediately sent to the server. The many2one, one2many and many2many attributes are wrapped in Record and RecordList objects. These attributes support writing too. The attributes are evaluated lazily, and they are cached in the record. The Record\u2019s cache is invalidated if any attribute is changed.</p> <p>exists()</p> <p>Return a subset of records that exist.</p> <p>get_metadata(details=True)</p> <p>Lookup metadata about the record(s). Return dictionaries with the following keys:</p> <ul> <li>id: object id</li> <li>create_uid: user who created the record</li> <li>create_date: date when the record was created</li> <li>write_uid: last user who changed the record</li> <li>write_date: date of the last change to the record</li> <li>xmlid: External ID to use to refer to this record (if there is one), in format module.name.</li> </ul> <p>_external_id</p> <p>Retrieve the External ID of the Record.</p> <p>Return the fully qualified External ID of the Record, with default value False if there\u2019s none. If multiple IDs exist, only one of them is returned (randomly).</p> <p>_send(signal)[source]</p> <p>Trigger workflow signal for this Record.</p> <p>copy(default=None)[source]</p> <p>Copy a record and return the new Record.</p> <p>The optional argument default is a mapping which overrides some values of the new record.</p> <p>read(fields=None)[source]</p> <p>Read the fields of the Record.</p> <p>The argument fields accepts different kinds of values. See Model.read() for details.</p> <p>refresh()[source]</p> <p>Force refreshing the record\u2019s data.</p> <p>unlink()</p> <p>Delete the record(s) from the database.</p> <p>write(values)</p> <p>Write the values in the record(s).</p> <p>values is a dictionary of values. See Model.create() for details.</p>"},{"location":"04_developer_guide/01_pw_cli/01_api/#utilities","title":"Utilities","text":"<p><pre><code>pw_cli.issearchdomain(arg)[source]\n</code></pre> Check if the argument is a search domain.</p> <p>Examples:</p> <ul> <li>[('name', '=', 'mushroom'), ('state', '!=', 'draft')]</li> <li>['name = mushroom', 'state != draft']</li> <li>[]</li> </ul> <p><pre><code>pw_cli.searchargs(params, kwargs=None)[source]\n</code></pre> Compute the \u2018search\u2019 parameters.</p> <p><pre><code>pw_cli.format_exception(type, value, tb, limit=None, chain=True)[source]\n</code></pre> Format a stack trace and the exception information.</p> <p>This wrapper is a replacement of traceback.format_exception which formats the error and traceback received by XML-RPC/JSON-RPC. If chain is True, then the original exception is printed too.</p> <p><pre><code>pw_cli.read_config(section=None)[source]\n</code></pre> Read the environment settings from the configuration file.</p> <p>The config file PerfectWORKly.ini contains a section for each environment. Each section provides parameters for the connection: host, port, database, username and (optional) password. Default values are read from the [DEFAULT] section. If the password is not in the configuration file, it is requested on login. Return a tuple (server, db, user, password or None). Without argument, it returns the list of configured environments.</p> <p><pre><code>pw_cli.start_PerfectWORK_services(options=None, appname=None)[source]\n</code></pre> Initialize the PerfectWORK services.</p> <p>Import the PerfectWORK Python package and load the PerfectWORK services. The argument options receives the command line arguments for PerfectWORK. Example:</p> <p><pre><code>['-c', '/path/to/PerfectWORK-server.conf', '--without-demo', 'all'].\n</code></pre> Return the PW CLI package.</p>"},{"location":"04_developer_guide/01_pw_cli/02_tutorial/","title":"Tutorial","text":"<p>This tutorial demonstrates some features of pw_cli in the interactive shell.</p> <p>It assumes an PerfectWORK or OpenERP server is installed. The shell is a true Python shell. We have access to all the features and modules of the Python interpreter.</p> <p>Steps:</p> <ul> <li>First connection</li> <li>Create a database</li> <li>Clone a database</li> <li>Find the users</li> <li>Create a new user</li> <li>Explore the model</li> <li>Browse the records</li> </ul>"},{"location":"04_developer_guide/01_pw_cli/02_tutorial/#first-connection","title":"First connection","text":"<p>The server is freshly installed and does not have an PerfectWORK database yet. The tutorial creates its own database demo to play with.</p> <p>Open the pw_cli shell:</p> <pre><code>$ pw_cli\n</code></pre> <p>It assumes that the server is running locally, and listens on default port 8069.</p> <p>If our configuration is different, then we use arguments, like:</p> <pre><code>$ pw_cli --server http://192.168.0.42:8069\n</code></pre> <p>It connects using the XML-RPC protocol. If you want to use the JSON-RPC protocol instead, then pass the full URL with /jsonrpc path:</p> <pre><code>$ pw_cli --server http://127.0.0.1:8069/jsonrpc\n</code></pre> <p>On login, it prints few lines about the commands available.</p> <p><pre><code>$ pw_cli\nUsage (some commands):\n    env[name]                       # Return a Model instance\n    env[name].keys()                # List field names of the model\n    env[name].fields(names=None)    # Return details for the fields\n    env[name].field(name)           # Return details for the field\n    env[name].browse(ids=())\n    env[name].search(domain)\n    env[name].search(domain, offset=0, limit=None, order=None)\n                                    # Return a RecordList\n\n    rec = env[name].get(domain)     # Get the Record matching domain\n    rec.some_field                  # Return the value of this field\n    rec.read(fields=None)           # Return values for the fields\n\n    client.login(user)              # Login with another user\n    client.connect(env)             # Connect to another env.\n    env.models(name)                # List models matching pattern\n    env.modules(name)               # List modules matching pattern\n    env.install(module1, module2, ...)\n    env.upgrade(module1, module2, ...)\n                                    # Install or upgrade the modules\n</code></pre> And it confirms that the default database is not available:</p> <p><pre><code>...\nError: Database 'PerfectWORK' does not exist: []\n</code></pre> Though, we have a connected client, ready to use:</p> <pre><code>&gt;&gt;&gt; client\n&lt;Client 'http://localhost:8069/xmlrpc#()'&gt;\n&gt;&gt;&gt; client.server_version\n'6.1'\n&gt;&gt;&gt; #\n</code></pre>"},{"location":"04_developer_guide/01_pw_cli/02_tutorial/#create-a-database","title":"Create a database","text":"<p>We create the database \"demo\" for this tutorial. We need to know the superadmin password before to continue. This is the admin_passwd in the PerfectWORK-server.conf file. Default password is \"admin\".</p> <p>Note</p> <p>This password gives full control on the databases. Set a strong password in the configuration to prevent unauthorized access.</p> <pre><code>&gt;&gt;&gt; client.create_database('super_password', 'demo')\nLogged in as 'admin'\n&gt;&gt;&gt; client\n&lt;Client 'http://localhost:8069/xmlrpc#demo'&gt;\n&gt;&gt;&gt; client.db.list()\n['demo']\n&gt;&gt;&gt; env\n&lt;Env 'admin@demo'&gt;\n&gt;&gt;&gt; env.modules(installed=True)\n{'installed': ['base', 'web', 'web_mobile', 'web_tests']}\n&gt;&gt;&gt; len(env.modules()['uninstalled'])\n202\n&gt;&gt;&gt; #\n</code></pre> <p>Note</p> <p>Create an pw_cli.ini file in the current directory to declare all our environments. Example: <pre><code>[DEFAULT]\nhost = localhost\nport = 8069\n\n[demo]\ndatabase = demo\nusername = joe\n</code></pre></p> <p>Then we connect to any environment with pw_cli --env demo or switch during an interactive session with client.connect('demo').</p>"},{"location":"04_developer_guide/01_pw_cli/02_tutorial/#clone-a-database","title":"Clone a database","text":"<p>It is sometimes useful to clone a database (testing, backup, migration, \u2026). A shortcut is available for that, the required parameters are the new database name and the superadmin password.</p> <pre><code>&gt;&gt;&gt; client.clone_database('super_password', 'demo_test')\nLogged in as 'admin'\n&gt;&gt;&gt; client\n&lt;Client 'http://localhost:8069/xmlrpc#demo_test'&gt;\n&gt;&gt;&gt; client.db.list()\n['demo', 'demo_test']\n&gt;&gt;&gt; env\n&lt;Env 'admin@demo'&gt;\n&gt;&gt;&gt; client.modules(installed=True)\n{'installed': ['base', 'web', 'web_mobile', 'web_tests']}\n&gt;&gt;&gt; len(client.modules()['uninstalled'])\n202\n&gt;&gt;&gt; #\n</code></pre>"},{"location":"04_developer_guide/01_pw_cli/02_tutorial/#find-the-users","title":"Find the users","text":"<p>We have created the database \"demo\" for the tests. We are connected to this database as 'admin'.</p> <p>Where is the table for the users? <pre><code>&gt;&gt;&gt; client\n&lt;Client 'http://localhost:8069/xmlrpc#demo'&gt;\n&gt;&gt;&gt; env.models('user')\n['res.users', 'res.users.log']\n</code></pre> We\u2019ve listed two models which matches the name, res.users and res.users.log. Through the environment Env we reach the users\u2019 model and we want to introspect its fields. Fortunately, the Model class provides methods to retrieve all the details. <pre><code>&gt;&gt;&gt; env['res.users']\n&lt;Model 'res.users'&gt;\n&gt;&gt;&gt; print(env['res.users'].keys())\n['action_id', 'active', 'company_id', 'company_ids', 'context_lang',\n 'context_tz', 'date', 'groups_id', 'id', 'login', 'menu_id', 'menu_tips',\n 'name', 'new_password', 'password', 'signature', 'user_email', 'view']\n&gt;&gt;&gt; env['res.users'].field('company')\n{'change_default': False,\n 'company_dependent': False,\n 'context': {'user_preference': True},\n 'depends': [],\n 'domain': [],\n 'help': 'The company this user is currently working for.',\n 'manual': False,\n 'readonly': False,\n 'relation': 'res.company',\n 'required': True,\n 'searchable': True,\n 'sortable': True,\n 'store': True,\n 'string': 'Company',\n 'type': 'many2one'}\n&gt;&gt;&gt; #\n</code></pre></p> <p>Let\u2019s examine the 'admin' user in details.</p> <pre><code>&gt;&gt;&gt; env['res.users'].search_count()\n1\n&gt;&gt;&gt; admin_user = env['res.users'].browse(1)\n&gt;&gt;&gt; admin_user.groups_id\n&lt;RecordList 'res.groups,[1, 2, 3]'&gt;\n&gt;&gt;&gt; admin_user.groups_id.name\n['Access Rights', 'Configuration', 'Employee']\n&gt;&gt;&gt; admin_user.groups_id.full_name\n['Administration / Access Rights',\n 'Administration / Configuration',\n 'Human Resources / Employee']\n&gt;&gt;&gt; admin_user.get_metadata()\n{'create_date': False,\n 'create_uid': False,\n 'id': 1,\n 'write_date': '2012-09-01 09:01:36.631090',\n 'write_uid': [1, 'Administrator'],\n 'xmlid': 'base.user_admin'}\n</code></pre>"},{"location":"04_developer_guide/01_pw_cli/02_tutorial/#create-a-new-user","title":"Create a new user","text":"<p>Now we want a non-admin user to continue the exploration. Let\u2019s create Joe. <pre><code>&gt;&gt;&gt; env['res.users'].create({'login': 'joe'})\nFault: Integrity Error\n\nThe operation cannot be completed, probably due to the following:\n- deletion: you may be trying to delete a record while other records still reference it\n- creation/update: a mandatory field is not correctly set\n\n[object with reference: name - name]\n&gt;&gt;&gt; #\n</code></pre></p> <p>It seems we\u2019ve forgotten some mandatory data. Let\u2019s give him a name.</p> <p><pre><code>&gt;&gt;&gt; env['res.users'].create({'login': 'joe', 'name': 'Joe'})\n&lt;Record 'res.users,3'&gt;\n&gt;&gt;&gt; joe_user = _\n&gt;&gt;&gt; joe_user.groups_id.full_name\n['Human Resources / Employee', 'Partner Manager']\n</code></pre> The user Joe does not have a password: we cannot login as joe. We set a password for Joe and we try again.</p> <pre><code>&gt;&gt;&gt; client.login('joe')\nPassword for 'joe':\nError: Invalid username or password\n&gt;&gt;&gt; env.user\n'admin'\n&gt;&gt;&gt; joe_user.password = 'bar'\n&gt;&gt;&gt; client.login('joe')\nLogged in as 'joe'\n&gt;&gt;&gt; env.user\n'joe'\n&gt;&gt;&gt; #\nSuccess!\n</code></pre>"},{"location":"04_developer_guide/01_pw_cli/02_tutorial/#explore-the-model","title":"Explore the model","text":"<p>We keep connected as user Joe and we explore the world around us.</p> <p><pre><code>&gt;&gt;&gt; env.user\n'joe'\n&gt;&gt;&gt; all_models = env.models()\n&gt;&gt;&gt; len(all_models)\n92\n</code></pre> Among these 92 objects, some of them are read-only, others are read-write. We can also filter the non-empty models. <pre><code>&gt;&gt;&gt; # Read-only models\n&gt;&gt;&gt; len([m for m in all_models if not env[m].access('write')])\n44\n&gt;&gt;&gt; #\n&gt;&gt;&gt; # Writable but cannot delete\n&gt;&gt;&gt; [m for m in all_models if env[m].access('write') and not env[m].access('unlink')]\n['ir.property', 'web.planner']\n&gt;&gt;&gt; #\n&gt;&gt;&gt; # Unreadable models\n&gt;&gt;&gt; [m for m in all_models if not env[m].access('read')]\n['ir.actions.todo',\n 'ir.actions.todo.category',\n 'res.payterm']\n&gt;&gt;&gt; #\n&gt;&gt;&gt; # Now print the number of entries in all (readable) models\n&gt;&gt;&gt; for m in all_models:\n...     mcount = env[m].access() and env[m].search_count()\n...     if not mcount:\n...         continue\n...     print('%4d  %s' % (mcount, m))\n...\n   1  ir.actions.act_url\n  64  ir.actions.act_window\n  14  ir.actions.act_window.view\n  76  ir.actions.act_window_close\n  76  ir.actions.actions\n   4  ir.actions.client\n   4  ir.actions.report\n   3  ir.actions.server\n   1  ir.default\n 112  ir.model\n3649  ir.model.data\n1382  ir.model.fields\n  33  ir.ui.menu\n 221  ir.ui.view\n   3  report.paperformat\n   1  res.company\n 249  res.country\n   2  res.country.group\n 678  res.country.state\n   2  res.currency\n   9  res.groups\n   1  res.lang\n   5  res.partner\n  21  res.partner.industry\n   5  res.partner.title\n   1  res.request.link\n   4  res.users\n  12  res.users.log\n&gt;&gt;&gt; #\n&gt;&gt;&gt; # Show the content of a model\n&gt;&gt;&gt; config_params = env['ir.config_parameter'].search([])\n&gt;&gt;&gt; config_params.read('key value')\n[{'id': 1, 'key': 'web.base.url', 'value': 'http://localhost:8069'},\n {'id': 2, 'key': 'database.create_date', 'value': '2012-09-01 09:01:12'},\n {'id': 3,\n  'key': 'database.uuid',\n  'value': '52fc9630-f49e-2222-e622-08002763afeb'}]\n</code></pre></p>"},{"location":"04_developer_guide/01_pw_cli/02_tutorial/#browse-the-records","title":"Browse the records","text":"<p>Query the \"res.country\" model:</p> <pre><code>&gt;&gt;&gt; env['res.country'].keys()\n['address_format', 'code', 'name']\n&gt;&gt;&gt; env['res.country'].search(['name like public'])\n&lt;RecordList 'res.country,[41, 42, 57, 62, 144]'&gt;\n&gt;&gt;&gt; env['res.country'].search(['name like public']).name\n['Central African Republic',\n 'Congo, Democratic Republic of the',\n 'Czech Republic',\n 'Dominican Republic',\n 'Macedonia, the former Yugoslav Republic of']\n&gt;&gt;&gt; env['res.country'].search(['code &gt; Y'], order='code ASC').read('code name')\n[{'code': 'YE', 'id': 247, 'name': 'Yemen'},\n {'code': 'YT', 'id': 248, 'name': 'Mayotte'},\n {'code': 'ZA', 'id': 250, 'name': 'South Africa'},\n {'code': 'ZM', 'id': 251, 'name': 'Zambia'},\n {'code': 'ZW', 'id': 253, 'name': 'Zimbabwe'}]\n&gt;&gt;&gt; #\n</code></pre> <p>\u2026 the tutorial is done.</p> <p>Jump to the API for further details.</p>"},{"location":"04_developer_guide/09_external_api/","title":"External API","text":""},{"location":"04_developer_guide/09_external_api/#introduction","title":"Introduction","text":"<p>PerfectWORK is usually extended internally via modules, but many of its features and all of its data are also available from the outside for external analysis or integration with various tools. Part of the Models API is easily available over XML-RPC and accessible from a variety of languages.</p>"},{"location":"04_developer_guide/09_external_api/#connection","title":"Connection","text":""},{"location":"04_developer_guide/09_external_api/#configuration","title":"Configuration","text":"<p>If you already have an PerfectWORK server installed, you can just use its parameters</p> <p>Info</p> <p>To make exploration simpler, you can also ask https://demo.perfectwork.app for a test database.</p> PythonRubyPHPJava <pre><code>import xmlrpc.client\ninfo = xmlrpc.client.ServerProxy('https://demo.perfectwork.app/start').start()\nurl, db, username, password = info['host'], info['database'], info['user'], info['password']\n</code></pre> <pre><code>require \"xmlrpc/client\"\ninfo = XMLRPC::Client.new2('https://demo.perfectwork.app/start').call('start')\nurl, db, username, password = info['host'], info['database'], info['user'], info['password']\n</code></pre> <pre><code>require_once('ripcord.php');\n$info = ripcord::client('https://demo.perfectwork.app/start')-&gt;start();\nlist($url, $db, $username, $password) = array($info['host'], $info['database'], $info['user'], $info['password']);\n</code></pre> <pre><code>final XmlRpcClient client = new XmlRpcClient();\n\nfinal XmlRpcClientConfigImpl start_config = new XmlRpcClientConfigImpl();\nstart_config.setServerURL(new URL(\"https://demo.perfectwork.app/start\"));\nfinal Map&lt;String, String&gt; info = (Map&lt;String, String&gt;)client.execute(\nstart_config, \"start\", emptyList());\n\nfinal String url = info.get(\"host\"),\ndb = info.get(\"database\"),\nusername = info.get(\"user\"),\npassword = info.get(\"password\");\n</code></pre> <p>Note</p> <p>These examples use the Apache XML-RPC library.  The examples do not include imports as these imports couldn\u2019t be pasted in the code.</p>"},{"location":"04_developer_guide/09_external_api/#logging-in","title":"Logging in","text":"<p>PerfectWORK requires users of the API to be authenticated before they can query most data.  The xmlrpc/2/common endpoint provides meta-calls which don\u2019t require authentication, such as the authentication itself or fetching version information. To verify if the connection information is correct before trying to authenticate, the simplest call is to ask for the server\u2019s version. The authentication itself is done through the authenticate function and returns a user identifier (uid) used in authenticated calls instead of the login.</p> PythonRubyPHPJava <pre><code>common = xmlrpc.client.ServerProxy('{}/xmlrpc/2/common'.format(url))\ncommon.version()\n</code></pre> <pre><code>common = XMLRPC::Client.new2(\"#{url}/xmlrpc/2/common\")\ncommon.call('version')\n</code></pre> <pre><code>$common = ripcord::client(\"$url/xmlrpc/2/common\");\n$common-&gt;version();\n</code></pre> <pre><code>final XmlRpcClientConfigImpl common_config = new XmlRpcClientConfigImpl();\ncommon_config.setServerURL(new URL(String.format(\"%s/xmlrpc/2/common\", url)));\nclient.execute(common_config, \"version\", emptyList());\n</code></pre> <p>Result: <pre><code>{ \"server_version\": \"13.0\", \"server_version_info\": [13, 0, 0, \"final\", 0], \"server_serie\": \"13.0\", \"protocol_version\": 1, } `\n</code></pre></p> PythonRubyPHPJava <pre><code>uid = common.authenticate(db, username, password, {})\n</code></pre> <pre><code>uid = common.call('authenticate', db, username, password, {})\n</code></pre> <pre><code>$uid = $common-&gt;authenticate($db, $username, $password, array());\n</code></pre> <pre><code>int uid = (int)client.execute(common_config, \"authenticate\", asList(db, username, password, emptyMap()));\n</code></pre>"},{"location":"04_developer_guide/09_external_api/#calling-methods","title":"Calling Methods","text":"<p>The second endpoint is xmlrpc/2/object. It is used to call methods of PerfectWORK data models via the execute_kw RPC function.  Each call to execute_kw takes the following parameters:</p> <ul> <li>the database to use, a string</li> <li>the user id (retrieved through authenticate), an integer</li> <li>the user\u2019s password, a string</li> <li>the model name, a string</li> <li>the method name, a string</li> <li>an array/list of parameters passed by position</li> <li>a mapping/dict of parameters to pass by keyword (optional)</li> </ul> <p>Example</p> <p>For instance, to see if we can read the res.partner model, we can call check_access_rights with operation passed by position and raise_exception passed by keyword (in order to get a true/false result rather than true/error):</p> PythonRubyPHPJava <pre><code>models = xmlrpc.client.ServerProxy('{}/xmlrpc/2/object'.format(url))\nmodels.execute_kw(db, uid, password, 'res.partner', 'check_access_rights', ['read'], {'raise_exception': False})\n</code></pre> <pre><code>models = XMLRPC::Client.new2(\"#{url}/xmlrpc/2/object\").proxy\nmodels.execute_kw(db, uid, password, 'res.partner', 'check_access_rights', ['read'], {raise_exception: false})\n</code></pre> <pre><code>$models = ripcord::client(\"$url/xmlrpc/2/object\");\n$models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'check_access_rights', array('read'), array('raise_exception' =&gt; false));\n</code></pre> <pre><code>final XmlRpcClient models = new XmlRpcClient() {\nsetConfig(new XmlRpcClientConfigImpl() {\nsetServerURL(new URL(String.format(\"%s/xmlrpc/2/object\", url)));\n});\n};\nmodels.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"check_access_rights\",\nasList(\"read\"),\nnew HashMap() { put(\"raise_exception\", false); }\n));\n</code></pre> <p>Result:     <pre><code>true\n</code></pre></p>"},{"location":"04_developer_guide/09_external_api/#list-records","title":"List Records","text":"<p>Records can be listed and filtered via search().  search() takes a mandatory domain filter (possibly empty), and returns the database identifiers of all records matching the filter.</p> <p>Example</p> <p>To list customer companies, for instance:</p> PythonRubyPHPJava <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'search', [[['is_company', '=', True]]])\n</code></pre> <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'search', [[['is_company', '=', true]]])\n</code></pre> <pre><code>$models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true))));\n</code></pre> <pre><code>asList((Object[])models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"search\",\nasList(asList(\nasList(\"is_company\", \"=\", true)))\n)));\n</code></pre> <p>Result:     <pre><code>[7, 18, 12, 14, 17, 19, 8, 31, 26, 16, 13, 20, 30, 22, 29, 15, 23, 28, 74]\n</code></pre></p>"},{"location":"04_developer_guide/09_external_api/#pagination","title":"Pagination","text":"<p>By default a search will return the ids of all records matching the condition, which may be a huge number. offset and limit parameters are available to only retrieve a subset of all matched records. </p> <p>Example</p> <p>To list customer companies, for instance:</p> PythonRubyPHPJava <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'search', [[['is_company', '=', True]]], {'offset': 10, 'limit': 5})\n</code></pre> <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'search', [[['is_company', '=', true]]], {offset: 10, limit: 5})\n</code></pre> <pre><code>$models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true))), array('offset'=&gt;10, 'limit'=&gt;5));\n</code></pre> <pre><code>asList((Object[])models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"search\",\nasList(asList(\nasList(\"is_company\", \"=\", true))),\nnew HashMap() { put(\"offset\", 10); put(\"limit\", 5); }\n)));\n</code></pre> <p>Result:     <pre><code>[13, 20, 30, 22, 29]\n</code></pre></p>"},{"location":"04_developer_guide/09_external_api/#count-records","title":"Count records","text":"<p>Rather than retrieve a possibly gigantic list of records and count them, search_count() can be used to retrieve only the number of records matching the query. It takes the same domain filter as search() and no other parameter.</p> <p>Example</p> <p>To list customer companies, for instance:</p> PythonRubyPHPJava <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'search_count', [[['is_company', '=', True]]])\n</code></pre> <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'search_count', [[['is_company', '=', true]]])\n</code></pre> <pre><code>$models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'search_count', array(array(array('is_company', '=', true))));\n</code></pre> <pre><code>(Integer)models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"search_count\",\nasList(asList(\nasList(\"is_company\", \"=\", true)))\n));\n</code></pre> <p>Result:     <pre><code>19\n</code></pre></p> <p>Note</p> <p>Calling search then search_count (or the other way around) may not yield coherent results if other users are using the server: stored data could have changed between the calls.</p>"},{"location":"04_developer_guide/09_external_api/#read-records","title":"Read records","text":"<p>Record data are accessible via the read() method, which takes a list of ids (as returned by search()), and optionally a list of fields to fetch. By default, it fetches all the fields the current user can read, which tends to be a huge amount.</p> <p>Example</p> PythonRubyPHPJava <pre><code>ids = models.execute_kw(db, uid, password, 'res.partner', 'search', [[['is_company', '=', True]]], {'limit': 1})\n[record] = models.execute_kw(db, uid, password, 'res.partner', 'read', [ids])\n# count the number of fields fetched by default\nlen(record)\n</code></pre> <pre><code>ids = models.execute_kw(db, uid, password, 'res.partner', 'search', [[['is_company', '=', true]]], {limit: 1})\nrecord = models.execute_kw(db, uid, password, 'res.partner', 'read', [ids]).first\n# count the number of fields fetched by default\nrecord.length\n</code></pre> <pre><code>$ids = $models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true))), array('limit'=&gt;1));\n$records = $models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'read', array($ids));\n// count the number of fields fetched by default\ncount($records[0]);\n</code></pre> <pre><code>final List ids = asList((Object[])models.execute(\n\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"search\",\nasList(asList(\nasList(\"is_company\", \"=\", true))),\nnew HashMap() { put(\"limit\", 1); })));\nfinal Map record = (Map)((Object[])models.execute(\n\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"read\",\nasList(ids)\n)\n))[0];\n// count the number of fields fetched by default\nrecord.size();\n</code></pre> <p>Result:     <pre><code>121\n</code></pre> Conversely, picking only three fields deemed interesting.</p> PythonRubyPHPJava <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'read', [ids], {'fields': ['name', 'country_id', 'comment']})\n</code></pre> <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'read', [ids], {fields: %w(name country_id comment)})\n</code></pre> <pre><code>$models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'read', array($ids), array('fields'=&gt;array('name', 'country_id', 'comment')));\n</code></pre> <pre><code>asList((Object[])models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"read\",\nasList(ids),\nnew HashMap() {\nput(\"fields\", asList(\"name\", \"country_id\", \"comment\"));\n}\n)));\n</code></pre> <p>Result:     <pre><code>[{\"comment\": false, \"country_id\": [21, \"Belgium\"], \"id\": 7, \"name\": \"Agrolait\"}]\n</code></pre></p> <p>Note</p> <p>Even if the id field is not requested, it is always returned.</p>"},{"location":"04_developer_guide/09_external_api/#list-record-fields","title":"List record fields","text":"<p>fields_get() can be used to inspect a model\u2019s fields and check which ones seem to be of interest.  Because it returns a large amount of meta-information (it is also used by client programs) it should be filtered before printing, the most interesting items for a human user are string (the field\u2019s label), help (a help text if available) and type (to know which values to expect, or to send when updating a record).</p> <p>Example</p> PythonRubyPHPJava <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'fields_get', [], {'attributes': ['string', 'help', 'type']})\n</code></pre> <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'fields_get', [], {attributes: %w(string help type)})\n</code></pre> <pre><code>$models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'fields_get', array(), array('attributes' =&gt; array('string', 'help', 'type')));\n</code></pre> <pre><code>(Map&lt;String, Map&lt;String, Object&gt;&gt;)models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"fields_get\",\nemptyList(),\nnew HashMap() {\nput(\"attributes\", asList(\"string\", \"help\", \"type\"));\n}\n));\n</code></pre> <p>Result:     <pre><code>{\n\"ean13\": {\n\"type\": \"char\",\n\"help\": \"BarCode\",\n\"string\": \"EAN13\"\n},\n\"property_account_position_id\": {\n\"type\": \"many2one\",\n\"help\": \"The fiscal position will determine taxes and accounts used for the partner.\",\n\"string\": \"Fiscal Position\"\n},\n\"signup_valid\": {\n\"type\": \"boolean\",\n\"help\": \"\",\n\"string\": \"Signup Token is Valid\"\n},\n\"date_localization\": {\n\"type\": \"date\",\n\"help\": \"\",\n\"string\": \"Geo Localization Date\"\n},\n\"ref_company_ids\": {\n\"type\": \"one2many\",\n\"help\": \"\",\n\"string\": \"Companies that refers to partner\"\n},\n\"sale_order_count\": {\n\"type\": \"integer\",\n\"help\": \"\",\n\"string\": \"# of Sales Order\"\n},\n\"purchase_order_count\": {\n\"type\": \"integer\",\n\"help\": \"\",\n\"string\": \"# of Purchase Order\"\n},\n</code></pre></p>"},{"location":"04_developer_guide/09_external_api/#search-and-read","title":"Search and read","text":"<p>Because it is a very common task, PerfectWORK provides a search_read() shortcut which, as its name suggests, is equivalent to a search() followed by a read(), but avoids having to perform two requests and keep ids around.  Its arguments are similar to search()\u2019s, but it can also take a list of fields (like read(), if that list is not provided it will fetch all fields of matched records).</p> <p>Example</p> PythonRubyPHPJava <pre><code>ids = models.execute_kw(db, uid, password, 'res.partner', 'search', [[['is_company', '=', True]]], {'limit': 1})\n[record] = models.execute_kw(db, uid, password, 'res.partner', 'read', [ids])\n# count the number of fields fetched by default\nlen(record)\n</code></pre> <pre><code>ids = models.execute_kw(db, uid, password, 'res.partner', 'search', [[['is_company', '=', true]]], {limit: 1})\nrecord = models.execute_kw(db, uid, password, 'res.partner', 'read', [ids]).first\n# count the number of fields fetched by default\nrecord.length\n</code></pre> <pre><code>$ids = $models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true))), array('limit'=&gt;1));\n$records = $models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'read', array($ids));\n// count the number of fields fetched by default\ncount($records[0]);\n</code></pre> <pre><code>asList((Object[])models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"search_read\",\nasList(asList(\nasList(\"is_company\", \"=\", true))),\nnew HashMap() {\nput(\"fields\", asList(\"name\", \"country_id\", \"comment\"));\nput(\"limit\", 5);\n}\n)));\n</code></pre> <p>Result:     <pre><code>121\n</code></pre> Conversely, picking only three fields deemed interesting.</p> PythonRubyPHPJava <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'search_read', [[['is_company', '=', True]]], {'fields': ['name', 'country_id', 'comment'], 'limit': 5})\n</code></pre> <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'search_read', [[['is_company', '=', true]]], {fields: %w(name country_id comment), limit: 5})\n</code></pre> <pre><code>$models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'search_read', array(array(array('is_company', '=', true))), array('fields'=&gt;array('name', 'country_id', 'comment'), 'limit'=&gt;5));\n</code></pre> <pre><code>asList((Object[])models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"search_read\",\nasList(asList(\nasList(\"is_company\", \"=\", true))),\nnew HashMap() {\nput(\"fields\", asList(\"name\", \"country_id\", \"comment\"));\nput(\"limit\", 5);\n}\n)));\n</code></pre> <p>Result:     <pre><code>[\n{\n\"comment\": false,\n\"country_id\": [ 21, \"Belgium\" ],\n\"id\": 7,\n\"name\": \"Agrolait\"\n},\n{\n\"comment\": false,\n\"country_id\": [ 76, \"France\" ],\n\"id\": 18,\n\"name\": \"Axelor\"\n},\n{\n\"comment\": false,\n\"country_id\": [ 233, \"United Kingdom\" ],\n\"id\": 12,\n\"name\": \"Bank Wealthy and sons\"\n},\n{\n\"comment\": false,\n\"country_id\": [ 105, \"India\" ],\n\"id\": 14,\n\"name\": \"Best Designers\"\n},\n{\n\"comment\": false,\n\"country_id\": [ 76, \"France\" ],\n\"id\": 17,\n\"name\": \"Camptocamp\"\n}\n]\n</code></pre></p>"},{"location":"04_developer_guide/09_external_api/#create-records","title":"Create records","text":"<p>Records of a model are created using create(). The method creates a single record and returns its database identifier.  create() takes a mapping of fields to values, used to initialize the record. For any field which has a default value and is not set through the mapping argument, the default value will be used.</p> <p>Example</p> PythonRubyPHPJava <pre><code>id = models.execute_kw(db, uid, password, 'res.partner', 'create', [{'name': \"New Partner\"}])\n</code></pre> <pre><code>id = models.execute_kw(db, uid, password, 'res.partner', 'create', [{name: \"New Partner\"}])\n</code></pre> <pre><code>$id = $models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'create', array(array('name'=&gt;\"New Partner\")));\n</code></pre> <pre><code>final Integer id = (Integer)models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"create\",\nasList(new HashMap() { put(\"name\", \"New Partner\"); })\n));\n</code></pre> <p>Result:     <pre><code>121\n</code></pre> Conversely, picking only three fields deemed interesting.</p> PythonRubyPHPJava <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'search_read', [[['is_company', '=', True]]], {'fields': ['name', 'country_id', 'comment'], 'limit': 5})\n</code></pre> <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'search_read', [[['is_company', '=', true]]], {fields: %w(name country_id comment), limit: 5})\n</code></pre> <pre><code>$models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'search_read', array(array(array('is_company', '=', true))), array('fields'=&gt;array('name', 'country_id', 'comment'), 'limit'=&gt;5));\n</code></pre> <pre><code>asList((Object[])models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"search_read\",\nasList(asList(\nasList(\"is_company\", \"=\", true))),\nnew HashMap() {\nput(\"fields\", asList(\"name\", \"country_id\", \"comment\"));\nput(\"limit\", 5);\n}\n)));\n</code></pre> <p>Result:     <pre><code>    78\n</code></pre></p> <p>Warning</p> <p>While most value types are what would expect (integer for Integer, string for Char or Text)</p> <ul> <li>Date, Datetime and Binary fields use string values</li> <li>One2many and Many2many use a special command protocol detailed in the documentation to the write method.</li> </ul>"},{"location":"04_developer_guide/09_external_api/#update-records","title":"Update records","text":"<p>Records can be updated using write(). It takes a list of records to update and a mapping of updated fields to values similar to create().  Multiple records can be updated simultaneously, but they will all get the same values for the fields being set. It is not possible to perform \u201ccomputed\u201d updates (where the value being set depends on an existing value of a record).</p> <p>Example</p> PythonRubyPHPJava <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'write', [[id], {'name': \"Newer partner\"}])\n# get record name after having changed it\nmodels.execute_kw(db, uid, password, 'res.partner', 'name_get', [[id]])\n</code></pre> <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'write', [[id], {name: \"Newer partner\"}])\n# get record name after having changed it\nmodels.execute_kw(db, uid, password, 'res.partner', 'name_get', [[id]])\n</code></pre> <pre><code>$models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'write', array(array($id), array('name'=&gt;\"Newer partner\")));\n// get record name after having changed it\n$models-&gt;execute_kw($db, $uid, $password,'res.partner', 'name_get', array(array($id)));\n</code></pre> <pre><code>models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"write\",\nasList(\nasList(id),\nnew HashMap() { put(\"name\", \"Newer Partner\"); }\n)\n));\n// get record name after having changed it\nasList((Object[])models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"name_get\",\nasList(asList(id))\n)));\n</code></pre> <p>Result:     <pre><code>[[78, \"Newer partner\"]]\n</code></pre></p>"},{"location":"04_developer_guide/09_external_api/#delete-records","title":"Delete records","text":"<p>Records can be deleted in bulk by providing their ids to unlink().</p> <p>Example</p> PythonRubyPHPJava <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'unlink', [[id]])\n# check if the deleted record is still in the database\nmodels.execute_kw(db, uid, password, 'res.partner', 'search', [[['id', '=', id]]])\n</code></pre> <pre><code>models.execute_kw(db, uid, password, 'res.partner', 'unlink', [[id]])\n# check if the deleted record is still in the database\nmodels.execute_kw(db, uid, password, 'res.partner', 'search', [[['id', '=', id]]])\n</code></pre> <pre><code>$models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'unlink', array(array($id)));\n// check if the deleted record is still in the database\n$models-&gt;execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('id', '=', $id))));\n</code></pre> <pre><code>models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"unlink\",\nasList(asList(id))));\n// check if the deleted record is still in the database\nasList((Object[])models.execute(\"execute_kw\", asList(\ndb, uid, password,\n\"res.partner\", \"search\",\nasList(asList(asList(\"id\", \"=\", 78)))\n)));\n</code></pre> <p>Result:     <pre><code>[]\n</code></pre></p>"},{"location":"04_developer_guide/09_external_api/#inspection-and-introspection","title":"Inspection and introspection","text":"<p>While we previously used fields_get() to query a model and have been using an arbitrary model from the start, PerfectWORK stores most model metadata inside a few meta-models which allow both querying the system and altering models and fields (with some limitations) on the fly over XML-RPC. </p> <ul> <li> <p>ir.model      Provides information about PerfectWORK models via its various fields.</p> </li> <li> <p>name  a human-readable description of the model</p> </li> <li> <p>model  the name of each model in the system</p> </li> <li> <p>state  whether the model was generated in Python code (base) or by creating an ir.model record (manual)</p> </li> <li> <p>field_id  list of the model\u2019s fields through a One2many to ir.model.fields</p> </li> <li> <p>view_ids  One2many to the Views defined for the model</p> </li> <li> <p>access_ids  One2many relation to the Access Rights set on the model</p> </li> </ul> <p>ir.model can be used to</p> <ul> <li>Query the system for installed models (as a precondition to operations on the model or to explore the system\u2019s content).</li> <li>Get information about a specific model (generally by listing the fields associated with it).</li> <li>Create new models dynamically over RPC.</li> </ul> <p>Important</p> <ul> <li>Custom model names must start with x_.</li> <li>The state must be provided and set to manual, otherwise the model will not be loaded.</li> <li>It is not possible to add new methods to a custom model, only fields.</li> </ul> <p>Example</p> PythonRubyPHPJava <pre><code>models.execute_kw(db, uid, password, 'ir.model', 'create', [{\n    'name': \"Custom Model\",\n    'model': \"x_custom_model\",\n    'state': 'manual',\n}])\nmodels.execute_kw(db, uid, password, 'x_custom_model', 'fields_get', [], {'attributes': ['string', 'help', 'type']})\n</code></pre> <pre><code>models.execute_kw(db, uid, password, 'ir.model', 'create', [{\nname: \"Custom Model\",\nmodel: 'x_custom_model',\nstate: 'manual' }])\nfields = models.execute_kw(db, uid, password, 'x_custom_model', 'fields_get', [], {attributes: %w(string help type)})\n</code></pre> <pre><code>$models-&gt;execute_kw($db, $uid, $password, 'ir.model', 'create', array(array(\n    'name' =&gt; \"Custom Model\",\n    'model' =&gt; 'x_custom_model',\n    'state' =&gt; 'manual'\n)));\n$models-&gt;execute_kw($db, $uid, $password, 'x_custom_model', 'fields_get', array(), array('attributes' =&gt; array('string', 'help', 'type')));\n</code></pre> <pre><code>models.execute(\n\"execute_kw\", asList(\ndb, uid, password,\n\"ir.model\", \"create\",\nasList(new HashMap&lt;String, Object&gt;() {\nput(\"name\", \"Custom Model\");\nput(\"model\", \"x_custom_model\");\nput(\"state\", \"manual\");\n})\n));\nfinal Object fields = models.execute(\n\"execute_kw\", asList(\ndb, uid, password,\n\"x_custom_model\", \"fields_get\",\nemptyList(),\nnew HashMap&lt;String, Object&gt; () {\nput(\"attributes\", asList(\n\"string\",\n\"help\",\n\"type\"));\n}\n));\n</code></pre> <p>Result:     <pre><code>{\n\"create_uid\": {\n\"type\": \"many2one\",\n\"string\": \"Created by\"\n},\n\"create_date\": {\n\"type\": \"datetime\",\n\"string\": \"Created on\"\n},\n\"__last_update\": {\n\"type\": \"datetime\",\n\"string\": \"Last Modified on\"\n},\n\"write_uid\": {\n\"type\": \"many2one\",\n\"string\": \"Last Updated by\"\n},\n\"write_date\": {\n\"type\": \"datetime\",\n\"string\": \"Last Updated on\"\n},\n\"display_name\": {\n\"type\": \"char\",\n\"string\": \"Display Name\"\n},\n\"id\": {\n\"type\": \"integer\",\n\"string\": \"Id\"\n}   }   </code></pre></p> <ul> <li> <p>ir.model.fields  Provides information about the fields of PerfectWORK data models and allows adding custom fields without using Python code.</p> </li> <li> <p>model_id  Many2one to ir.model to which the field belongs</p> </li> <li> <p>name  the field\u2019s technical name (used in read or write)</p> </li> <li> <p>field_description  the field\u2019s user-readable label (e.g. string in fields_get)</p> </li> <li> <p>ttype  the type of field to create</p> </li> <li> <p>state  whether the field was created via Python code (base) or via ir.model.fields (manual)</p> </li> <li> <p>required, readonly, translate  enables the corresponding flag on the field</p> </li> <li> <p>groups  field-level access control, a Many2many to res.groups</p> </li> <li> <p>selection, size, on_delete, relation, relation_field, domain  type-specific properties and customizations, see the fields documentation for details</p> </li> </ul> <p>Important</p> <ul> <li>Like custom models, only new fields created with state=\"manual\" are activated as actual fields on the model.</li> <li>Computed fields can not be added via ir.model.fields, some field meta-information (defaults, onchange) can not be set either.</li> </ul> <p>Example</p> PythonRubyPHPJava <pre><code>id = models.execute_kw(db, uid, password, 'ir.model', 'create', [{\n    'name': \"Custom Model\",\n    'model': \"x_custom\",\n    'state': 'manual',\n}])\nmodels.execute_kw(db, uid, password, 'ir.model.fields', 'create', [{\n    'model_id': id,\n    'name': 'x_name',\n    'ttype': 'char',\n    'state': 'manual',\n    'required': True,\n}])\nrecord_id = models.execute_kw(db, uid, password, 'x_custom', 'create', [{'x_name': \"test record\"}])\nmodels.execute_kw(db, uid, password, 'x_custom', 'read', [[record_id]])\n</code></pre> <pre><code>id = models.execute_kw(db, uid, password, 'ir.model', 'create', [{\nname: \"Custom Model\",\nmodel: \"x_custom\",\nstate: 'manual'\n}])\nmodels.execute_kw(db, uid, password, 'ir.model.fields', 'create', [{\nmodel_id: id,\nname: \"x_name\",\nttype: \"char\",\nstate: \"manual\",\nrequired: true\n}])\nrecord_id = models.execute_kw(db, uid, password, 'x_custom', 'create', [{x_name: \"test record\"}])\nmodels.execute_kw(db, uid, password, 'x_custom', 'read', [[record_id]])\n</code></pre> <pre><code>$id = $models-&gt;execute_kw($db, $uid, $password, 'ir.model', 'create', array(array(\n    'name' =&gt; \"Custom Model\",\n    'model' =&gt; 'x_custom',\n    'state' =&gt; 'manual'\n)));\n$models-&gt;execute_kw($db, $uid, $password, 'ir.model.fields', 'create', array(array(\n    'model_id' =&gt; $id,\n    'name' =&gt; 'x_name',\n    'ttype' =&gt; 'char',\n    'state' =&gt; 'manual',\n    'required' =&gt; true\n)));\n$record_id = $models-&gt;execute_kw($db, $uid, $password, 'x_custom', 'create', array(array('x_name' =&gt; \"test record\")));\n$models-&gt;execute_kw($db, $uid, $password, 'x_custom', 'read', array(array($record_id)));\n</code></pre> <pre><code>final Integer id = (Integer)models.execute(\n\"execute_kw\", asList(\ndb, uid, password,\n\"ir.model\", \"create\",\nasList(new HashMap&lt;String, Object&gt;() {\nput(\"name\", \"Custom Model\");\nput(\"model\", \"x_custom\");\nput(\"state\", \"manual\");\n})\n));\nmodels.execute(\n\"execute_kw\", asList(\ndb, uid, password,\n\"ir.model.fields\", \"create\",\nasList(new HashMap&lt;String, Object&gt;() {\nput(\"model_id\", id);\nput(\"name\", \"x_name\");\nput(\"ttype\", \"char\");\nput(\"state\", \"manual\");\nput(\"required\", true);\n})\n));\nfinal Integer record_id = (Integer)models.execute(\n\"execute_kw\", asList(\ndb, uid, password,\n\"x_custom\", \"create\",\nasList(new HashMap&lt;String, Object&gt;() {\nput(\"x_name\", \"test record\");\n})\n));\n\nclient.execute(\n\"execute_kw\", asList(\ndb, uid, password,\n\"x_custom\", \"read\",\nasList(asList(record_id))\n));\n</code></pre> <p>Result:     <pre><code>[\n{\n\"create_uid\": [1, \"Administrator\"],\n\"x_name\": \"test record\",\n\"__last_update\": \"2014-11-12 16:32:13\",\n\"write_uid\": [1, \"Administrator\"],\n\"write_date\": \"2014-11-12 16:32:13\",\n\"create_date\": \"2014-11-12 16:32:13\",\n\"id\": 1,\n\"display_name\": \"test record\"\n}\n]   </code></pre></p>"},{"location":"internal/","title":"Internal Use Only Guide","text":"Internal User Only Guide Backend View Migration Guide API Integration Guide"},{"location":"internal/09_backend_view/","title":"Backend View","text":"Backend View Server Actions"},{"location":"internal/09_backend_view/10_actions/","title":"Actions","text":""},{"location":"internal/09_backend_view/10_actions/#server-action","title":"Server Action","text":"<p>In PerfectWORK we can execute server actions, an intriguing feature using which the customers can meet their requirements. Let's discuss the functionality and how to use various parameters in server actions accordingly.</p> <p></p> <p>Server Actions are actions that can be executed automatically. These actions are added to the \u2018Action\u2019 contextual menu.</p> <p></p> <p>To create a server action create a data record in data.xml file as shown below:</p> Server Action in XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;odoo&gt;\n&lt;data&gt;\n&lt;record model=\"ir.actions.server\" id=\"action_working_on_something\"&gt;\n&lt;field name=\"name\"&gt;ETL - Working On Something&lt;/field&gt;\n&lt;field name=\"model_id\" ref=\"model_res_partner\"/&gt;\n&lt;field name=\"binding_model_id\" ref=\"model_res_partner\"/&gt;\n&lt;field name=\"binding_view_types\"&gt;list&lt;/field&gt;\n&lt;field name=\"state\"&gt;code&lt;/field&gt;\n&lt;field name=\"code\"&gt;model.python_method()\n            &lt;/field&gt;\n&lt;/record&gt;\n&lt;/data&gt;\n&lt;/odoo&gt;\n</code></pre> <ul> <li> <p>binding_model_id - Model linked to the action.</p> </li> <li> <p>name - Name of the server action.</p> </li> <li> <p>state - The field name \u2018state\u2019 specifies the type of server action.</p> </li> </ul> <p>In the above example, we are going to call the model method - python_method()</p> <p>Note</p> <p>We can also add server actions easily via the user interface. In order to create a server action activate the developer mode, go to Settings \u2192 Technical \u2192Server Actions.</p>"},{"location":"internal/20_api_integration/","title":"Backend View","text":"Backend View REST API"},{"location":"internal/20_api_integration/10_base_rest/","title":"REST API","text":""},{"location":"internal/20_api_integration/10_base_rest/#base-rest","title":"Base REST","text":"<p>This addon provides the basis to develop high level REST APIs for Odoo.</p> <p>As Odoo becomes one of the central pieces of enterprise IT systems, it often becomes necessary to set up specialized service interfaces, so existing systems can interact with Odoo.</p> <p>While the XML-RPC interface of Odoo comes handy in such situations, it requires a deep understanding of Odoo\u2019s internal data model. When used extensively, it creates a strong coupling between Odoo internals and client systems, therefore increasing maintenance costs.</p> <p>Once developed, an OpenApi documentation is generated from the source code and available via a Swagger UI served by your odoo server at https://my_odoo_server/api-docs.</p>"},{"location":"internal/20_api_integration/10_base_rest/#installation","title":"Installation","text":"<p>Need to install base_rest, base_rest_datamodel, data_model modules  Need to have the following python libraries - </p> <p>Note</p> <p>apispec, cachetools, cerberus, jsondiff, marshmallow, marshmallow_objects, pyquerystring, parse-accept-language</p>"},{"location":"internal/20_api_integration/10_base_rest/#configuration","title":"Configuration","text":"<p>If an error occurs when calling a method of a service (ie missing parameter, ..) the system returns only a general description of the problem without details. This is done on purpose to ensure maximum opacity on implementation details and therefore lower security issue.  This restriction can be problematic when the services are accessed by an external system in development. To know the details of an error it is indeed necessary to have access to the log of the server. It is not always possible to provide this kind of access. That's why you can configure the server to run these services in development mode.  To run the REST API in development mode you must add a new section '[base_rest]' with the option 'dev_mode=True' in the server config file.</p> <p>Note</p> <p>[base_rest] dev_mode=True</p> <p>When the REST API runs in development mode, the original description and a stack trace is returned in case of error. Be careful to not use this mode in production.</p>"},{"location":"internal/99_migration/","title":"Migration Guide (OpenUpgrade)","text":"Migration Guide Migration Actions Frequently Asked Questions"},{"location":"internal/99_migration/10_actions/","title":"Migrate from 2.0 to 2.5","text":""},{"location":"internal/99_migration/10_actions/#openupgrade-from-oca","title":"OpenUpgrade from OCA","text":"<p>Tools to upgrade Odoo instances from a major version to another This OCA project aims to provide an Open Source upgrade path for Odoo from one major Odoo version to the next one.</p> <p></p> <p>As PerfectWORK is based on Odoo framework, table below shows the matching of Odoo version of PerfectWORK releases.</p> <p>PerfectWORK and Odoo version</p> PerfectWORK Odoo Community 2.0 11.0 2.5 12.0 3.0 13.0 3.3 14.0 3.6 15.0 4.0 16.0"},{"location":"internal/99_migration/10_actions/#introduction","title":"Introduction","text":"<p>Odoo is an open source business application suite and development platform. This project, OpenUpgrade, aims to provide an Open Source upgrade path for Odoo. This is a community initiative, as the open source version of Odoo does not support migrations from one major release to another. Instead, migrations are part of a support package sold by Odoo SA. Note that the name of the project refers to the old name of Odoo, OpenERP.</p> <p>The project is hosted as two separate GitHub projects</p> <ul> <li>https://github.com/OCA/openupgrade<ul> <li>The branches in the first project contain the framework, as well as the database analysis and the migration scripts.</li> </ul> </li> <li>https://github.com/OCA/openupgradelib<ul> <li>The second project contains a library with helper functions. It can be used in the migration of any Odoo module.</li> </ul> </li> </ul> <p>Changes in OpenUpgrade for PW 3.3</p> <p>Before Odoo 14.0, the branches in https://github.com/OCA/openupgrade contain copies (or forks in Git terminology) of the Odoo main project, but with extra commits that include the framework, and the analysis and the migration scripts for each module.</p>"},{"location":"internal/99_migration/10_actions/#migrating-your-database","title":"Migrating your database","text":"<p>Check out the code manually and upgrade your database by calling odoo-bin, (or openerp-server) directly. You will want to do this when you are working on developing migration scripts for uncovered modules.</p>"},{"location":"internal/99_migration/10_actions/#get-the-code","title":"Get the code","text":""},{"location":"internal/99_migration/10_actions/#openupgrade","title":"OpenUpgrade","text":"<p>PerfectWORK 3.3</p> <p>Make the openupgrade_framework and the openupgrade_scripts modules available in the addons path in the Odoo instance of the new version.</p> <p>Or, for older versions: check out the OpenUpgrade source code from Github for the branches you need. Each branch migrates to its version from the previous version, so branch 13.0 migrates from 12.0 to 13.0. If you are migrating across multiple versions, you need to run each version of OpenUpgrade in order. Skipping versions is not supported.</p> <p></p> <p>The OpenUpgrade repository includes both openupgrade_framework and openupgrade_scripts:</p> <p>https://github.com/OCA/openupgrade</p>"},{"location":"internal/99_migration/10_actions/#openupgradelib","title":"openupgradelib","text":"<p>When installing the openupgradelib make sure you check out the latest version from github to get the latest updates and fixes:</p> <pre><code>pip install git+https://github.com/OCA/openupgradelib.git@master#egg=openupgradelib\n</code></pre>"},{"location":"internal/99_migration/10_actions/#check-migration-scripts-for-installed-modules","title":"Check migration scripts for installed modules","text":"<p>Check if there are migration scripts provided for the set of modules that are installed in your Odoo database. If there are modules for which no migration scripts have been developed yet, your migration may fail or the integrity of your database may be lacking. Check the module coverage in this documentation under Module coverage and refer to the Migration script development documentation to add the missing migration scripts.</p> <p>The simplest way to do this by running the following command:  <pre><code>./odoo-bin -c pw.conf -d [database] -u all\n</code></pre></p>"},{"location":"internal/99_migration/10_actions/#remove-modules-not-available","title":"Remove modules not available","text":"<p>You may need to remove those modules, which are obselete in the next major version</p> <ul> <li>backend theme ( pw_backend_theme )</li> <li>OCA web_responsive module</li> <li>Flectra converted modules</li> <li>website and related modules</li> </ul>"},{"location":"internal/99_migration/10_actions/#clean-up-database","title":"Clean up database","text":"<p>May need to install the following module for database cleanup</p> <p>https://apps.odoo.com/apps/modules/11.0/database_cleanup/</p>"},{"location":"internal/99_migration/10_actions/#oca-and-syc-modules","title":"OCA and SYC modules","text":"<p>Please ensure all the addons for the database are located in the addons path ( PW_ADDONS.2.5 )</p> <p>If the module is not available at the higher version, you need to remove the modules or you need to write your own migration scripts for the module.</p>"},{"location":"internal/99_migration/10_actions/#make-a-copy-of-the-database","title":"Make a copy of the database","text":"<p>Decide which database you are going to upgrade. You absolutely must make a backup of your live database before you start this process!</p>"},{"location":"internal/99_migration/10_actions/#adjust-the-configuration-for-odoo-and-openupgrade","title":"Adjust the configuration for Odoo and OpenUpgrade","text":"<p>Edit the configuration files and command line parameters to point to the database you are going to upgrade. The recommended command line parameters are the --update all --stop-after-init --load=base,web,openupgrade_framework flags.</p> <p></p> <p>For versions earlier than 14.0 that are running the OpenUpgrade fork rather than Odoo itself, you do not pass the load parameter.</p>"},{"location":"internal/99_migration/10_actions/#configuration-options","title":"Configuration options","text":"<p>When migrating across several versions of Odoo, setting the target version as an environment variable allows OpenUpgrade to skip methods that are called in every version but really only need to run in the target version. Make the target version available to OpenUpgrade with:</p> <p>export OPENUPGRADE_TARGET_VERSION=13.0 (when migrating up to 13.0)</p>"},{"location":"internal/99_migration/10_actions/#obsolete-options-in-the-odoo-configuration-file","title":"Obsolete options in the Odoo configuration file\u00b6","text":"<p>Versions of OpenUpgrade earlier than 14.0 allow for the following configuration options. Add these options to a separate stanza in the server configuration file under a header [openupgrade]</p> <ul> <li> <p>autoinstall - A dictionary with module name keys and lists of module names as values. If a key module is installed on your database, the modules from the value (and their dependencies) are selected for installation as well.</p> </li> <li> <p>force_deps - A dictionary with module name keys and lists of module names as values. If a key module is installed on your database, the modules from the value will be treated as a module dependency. With this directive, you can manipulate the order in which the modules are migrated. If the modules from the value are not already installed on your database, they will be selected for installation (as will their dependencies). Be careful not to introduce a circular dependency using this directive.</p> </li> </ul>"},{"location":"internal/99_migration/10_actions/#run-the-upgrade-fix-data-and-repeat","title":"Run the upgrade, fix data and repeat\u2026","text":"<p>Run the upgrade and check for errors. You will probably learn a lot about your data and have to do some manual clean up before and after the upgrade. Expect to repeat the process several times as you encounter errors, clean up your data, and try again. If necessary, ask for help or report bugs on Github.</p>"},{"location":"internal/99_migration/10_actions/#write-the-missing-migration-scripts","title":"Write the missing migration scripts","text":"<p>At this stage, if some of your modules don\u2019t have yet migration scripts, you might need to add them yourself. Read more about the development of migrations scripts in Migration script development</p>"},{"location":"internal/99_migration/15_faq/","title":"Migration Issues to 2.5","text":""},{"location":"internal/99_migration/15_faq/#database","title":"Database","text":""},{"location":"internal/99_migration/15_faq/#table-base_module_uninstall","title":"Table : base_module_uninstall","text":"<p>Error Message</p> <p>psycopg2.errors.NotNullViolation: null value in column \"module_id\" of relation \"base_module_uninstall\" violates not-null constraint</p> <p>Solution</p> <ul> <li>Use database tool ( pgadmin or DBeave), go to table \"base_module_uninstall\", select Tool then Truncate</li> <li>Click Next Select Restart Identiy and Cascade</li> </ul>"}]}