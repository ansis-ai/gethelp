{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u00b6 Perfecting your decision with PerfectWORK Welcome to the PerfectWORK Documentation. Here you will find information and resources to help you learn about PerfectWORK, the next generation business information system with powerful modular design covering all essential aspects of a business. Documentation Learn More","title":"Getting Started"},{"location":"#_1","text":"","title":""},{"location":"01_application/","text":"Applications PerfectWORK Platform Finance & Accounting Sales & Distribution CRM & Marketing Website & eCommerce Manufacturing & Warehouse Supply Chain & Logistics Human Resources Customer Services Nothing is easier for you to discover PerfectWORK than subscribing to the PerfectWORK Online offer. You just need a web browser to get started. The Online service can be particularly useful to any companies, that just want to get going quickly at low cost. You have immediate access to PerfectWORK's Integrated Business Management System built on the type of enterprise architecture used in many organizations. PerfectWORK's Online offer includes several services: hosting at high bandwidth, database management, stable security update, backups, maintenance (24/7 server monitoring), bug fixing and migrations. So even if the PerfectWORK Online solution might be the best solution to suit your needs today, you can easily switch to other cloud providers; such as AWS, Google Cloud or Microsoft Azure according to your company's changing requirements or growth, while continuing to use the exact same system. Hence, you do not depend on your host. In addition, PerfectWORK works with standard and open formats and programming languages which allow you to export your data and use them in any other software. These advantages give you total control over your data, your software, your platform.","title":"Applications"},{"location":"01_application/01_platform/","text":"PerfectWORK PLATFORM Getting Started Companies and Users Communication and Collaboration Calendar Resource Scheduling Document & Knowledge Management Nothing is easier for you to discover PerfectWORK than subscribing to the PerfectWORK Online offer. You just need a web browser to get started. The Online service can be particularly useful to any companies, that just want to get going quickly at low cost. You have immediate access to PerfectWORK's Integrated Business Management System built on the type of enterprise architecture used in many organizations. PerfectWORK's Online offer includes several services: hosting at high bandwidth, database management, stable security update, backups, maintenance (24/7 server monitoring), bug fixing and migrations. So even if the PerfectWORK Online solution might be the best solution to suit your needs today, you can easily switch to other cloud providers; such as AWS, Google Cloud or Microsoft Azure according to your company's changing requirements or growth, while continuing to use the exact same system. Hence, you do not depend on your host. In addition, PerfectWORK works with standard and open formats and programming languages which allow you to export your data and use them in any other software. These advantages give you total control over your data, your software, your platform.","title":"PerfectWORK Platform"},{"location":"01_application/01_platform/01_getting_started/01_overview/","text":"PerfectWORK is a very feature-filled business application framework, with literally hundreds of applications and modules available. When you first access your PerfectWORK instance, the only functionality you will have is a limited messaging options between users. From there, PerfectWORK allows you to purchase and install the applications you need, as you need them. This flexibility makes PerfectWORK much more accessible than many business software solutions. Not long ago, nearly all companies kept their primary information systems in-house. This approach not only requires a lot of capital expense in purchasing servers and software licenses, but also creates a lot of responsibilities and risks in backing up data and ensuring business continuity. Today, more and more companies are choosing to host their business applications in online networks commonly called the cloud. PerfectWORK allows you the flexibility of both options\u2014either hosting on your own hardware, or utilizing PerfectWORK's online software services. The best thing about accessing PerfectWORK Online is that you can jump in and start using the software right away. You don't have to decide what operating system (OS) to use, and you don't have to install any software at all. Just enter the URL into your web browser and you are ready to get started. Another added benefit of taking this approach is that you will verify that your web browser is up to date and compatible with the latest version of PerfectWORK. You can expect to put a great deal of time into determining which PerfectWORK applications / modules are right for your company. Taking a few hours to use the PerfectWORK Online version is time well spent, and you can put off installing PerfectWORK until you are more certain it is the right software for your business. Browser Requirement \u00b6 PerfectWORK is designed to run on a variety of modern web browsers. Supported browsers include the following: - Google Chrome (recommended) - Firefox - Microsoft Edge - Safari Tip Macintosh users will need to make sure they are running macOS X or above. Users running older Macintosh systems are currently having difficulties running PerfectWORK version 3. Also, in our experience, Google Chrome tends to offer the best experience in working with PerfectWORK. Mobile phone and tablet support \u00b6 PerfectWORK has included native support for mobile phones and tablets. Menus are designed to flow and format properly. The new website application even includes a preview within the portal administration to emulate how the site would appear on a mobile phone. While you still suffer many of the limitations that come with a small screen size, the applications are functional and this makes it even easier for developers to create mobile Odoo applications.","title":"Overview"},{"location":"01_application/01_platform/01_getting_started/01_overview/#browser-requirement","text":"PerfectWORK is designed to run on a variety of modern web browsers. Supported browsers include the following: - Google Chrome (recommended) - Firefox - Microsoft Edge - Safari Tip Macintosh users will need to make sure they are running macOS X or above. Users running older Macintosh systems are currently having difficulties running PerfectWORK version 3. Also, in our experience, Google Chrome tends to offer the best experience in working with PerfectWORK.","title":"Browser Requirement"},{"location":"01_application/01_platform/01_getting_started/01_overview/#mobile-phone-and-tablet-support","text":"PerfectWORK has included native support for mobile phones and tablets. Menus are designed to flow and format properly. The new website application even includes a preview within the portal administration to emulate how the site would appear on a mobile phone. While you still suffer many of the limitations that come with a small screen size, the applications are functional and this makes it even easier for developers to create mobile Odoo applications.","title":"Mobile phone and tablet support"},{"location":"01_application/01_platform/01_getting_started/02_navigation/","text":"The purpose of this document is to provide an overview of how to navigate in PerfectWORK 3.0, what the various Filters , Settings , and Views available within the applications do, and how to use the Activities and Reporting functions. We'll also include some handy tips and tricks for easily getting around the system and making the most out of your experience with PerfectWORK. Application \u00b6 Once you log in you'll be on PerfectWORK's main menu where applications, or Apps, are represented by icons. At first, you may not see very many apps installed. Each app adds new functions to the database and they're installed as needed. To get started with building out your database, you will need to install the necessary apps for your business needs. To do this, navigate to the Apps application by clicking its icon . Global Search Apps aren't listed in alphabetical order, but you can easily navigate to an app by simply typing its name from the main menu. As you type, the installed apps will filter as well as other related items. This is extremely useful when you have multiple apps installed. Clicking the Apps icon will take you to the app repository where you can browse around for the apps that you want to install. From this screen, you can see which apps your database has installed already and you can browse through the available apps to install. If you click on the button on any application, you can see the application's overview page to see if you would like to use it before installing. When you're ready to install an app, simply click the button and wait for the application to load. Please Note: For larger apps, this process could take several minutes. Once the app is installed, you will be routed to either the initial setup screen of the application to begin configuring it, or to your database's homepage where you can see your newly installed apps. Search \u00b6 The Search area is persistent in every application in PerfectWORK and provides the ability to easily find information. Search is a very straightforward feature and is tailored to the application you're using. For example, you won't be able to find a Sale Order from the search bar in the CRM app . By typing in the name of a customer, project, employee, or another object, you can retrieve that to view within the application that you're using. For the purposes of this document, we've highlighted an enhanced search feature in PerfectWORK that will make searching even easier. As you type in the search bar, you will see a dropdown menu appear with different options available to help you quickly locate your desired information. In this example, we've searched the Sales application for \"Peter\" and are looking for a client \"Peter Lim\". As you begin typing in the search bar, PerfectWORK gives the option to search specific customer within the Sales application for the desired keyword. Any option with the arrow \u2023 icon next to it can be expanded with a click, and PerfectWORK will display the available items for the data type that match your keyword. The example above shows the \"Customer\" section expanded and, as you can see, all customers with the keyword \"Peter\" in their profile are shown. From here you can either select the specific customer record you want to see, or you can select the option to display all customers with \"Peter\" in their profile. Filters \u00b6 Filters appear directly beneath the Search bar and allow you to customize the data that is displayed on a given page within any application in PerfectWORK. While the filters themselves will vary depending on what application you're using. For this example we will go over the basics of how to use filters in the Sales application. To get started, navigate to the Sales app. (If it's not installed, follow the instructions above to install it.) Once you've launched the Sales application, Select Orders \u2023 Customers let's take a look at the Search area at the top right of the screen. Toggle the Filters Menu If you do not see Filters or Group By or Favorites underneath the search bar, click the spyglass icon (with the + sign in it) and they will appear. If you want to hide them from view, click the spyglass icon (with - sign in it) and they will be hidden again. Click the Filters option to review the Filters menu. Let's now go over how to make the most of your Filters. When you review the Filters that are available within each application, the options will be specific to the data that's housed within that application. The Sales application is displayed for this example, so the options you see in the menu are specific to Sales data. There will typically be a set of default filters that are present in the dropdown menu for you to choose from. If you don't see the data that you want to view in the default filters, you can use the Add Custom Filter option to create your own filters. When adding a custom filter, you can set as many conditions as you'd like for the information you need to pull. When you add multiple conditions to the same custom filter, PerfectWORK automatically adds the \"or\" parameter to the search. So, if you want to search for customers who like Chocolate Icing OR Strawberry Icing, you would set the first condition, then click Add a Condition This opens a new section where you'll enter your \"or\" conditions. When you're done, click . After you select the filters that you want to use, PerfectWORK will automatically search the records in the model you\u2019re on for the information you've selected. Your filter will be reflected in the search bar. Saving a Custom Filter Custom filters, by default, will be lost once you leave the application that you're using. If you would like to save these custom filters for future use, then you'll need to utilize the Favorites feature, covered below, to accomplish this. Group By \u00b6 This feature allows you to change how your data is grouped together to better visualize your information and inform your workflows. For example, you may want to see your pipeline data grouped by Salesperson, so you can review which opportunities are being handled by which of your salespeople. This is just one small example of what this feature can do. Like the Filters function discussed above, the ways that PerfectWORK will allow you to group your data will depend on the application that you're using and the page that you're on within that application. Also, like the Filters option, you can use the Add Custom Group button to create your own groupings if the default options do not suit your needs. Unlike Filters, custom groupings will only allow you to add one parameter to a Custom Group; however, you may create multiple Custom Groups and apply them together. PerfectWORK will add the grouping methods to one another and group the data as you've specified. Saving a Custom Group Custom Groups, by default, will be lost once you leave the application that you're using. If you would like to save these custom Groups for use in the future, then you will need to use the Favorites feature, covered in the next section, to accomplish this. Favorites \u00b6 This feature allows you to save custom searches that you've built using the Filters and Group By options covered above. Once you have your search or grouping parameters configured and selected, click the Favorites dropdown menu, then click Save current search and the following window will appear. In this window, enter a name for your Search or Custom Group, choose whether or not you want the system to default to this search when you open the application, and if you'd like to share this search with all other users of this application. Once you have made your selections, click SAVE . After you've successfully saved your custom Search or Group to your Favorites, simply go to Favorites and select it from the dropdown menu to utilize them in the future. Deleting a Favoutite If you would like to delete any of your Favorites, you simply click the trash can next to the name of the Favorite you want to delete and then confirm the deletion. Views \u00b6 This feature is similar to Group By, but instead of changing how the information is grouped on the page, it will change the method by which all of the data is displayed. Think of changing your Group By method like re-arranging information on a pie chart, while changing a View is like moving from a pie chart to a line graph. PerfectWORK has several different Views that you can choose from. Not all of them are available in every application, but we will cover all of them in this document so that when you come across a View you will know what it does. You can find the different Views that are available within any application tucked under the Search bar at the top right. Each View is denoted by an icon. Available views will vary between Apps. We will be going through each one and will provide examples of how the Views look when selected. For the purposes of this article, we will be using the same data for every view so that you can see the ways that your data can be manipulated simply by changing a View. If you hover over each View's icon, you will see a tool-tip telling you the name of the View. Kanban \u00b6 This View will allow you to create a kanban board to view your data. Kanban is an organizational method that typically uses columns and cards to visualize data. As each project, task, or item moves through the kanban sequence from left to right, you can easily track where each item is in its lifecycle. The example below is from the Sales Pipeline within the CRM application. As you can see from the below screenshot, the Kanban View is selected from the View options and we have our Sales Pipeline organized by stages. Each column represents a different stage in the Sales process and you can see the Opportunities under each stage. You can always change the stage that an item is in by dragging and dropping it into the correct column. You can also re-organize the columns by dragging and dropping them to the appropriate placement within the process flow. To the far right, you also have the option to Add a Column to create a new Stage of the process flow. Once created, you can drag-and-drop to wherever you'd like within the Kanban view. Once your stages are set up, you can begin assigning items to them. List \u00b6 This View will organize your data into a list format. As you can see below, all of the same information from the Pipeline View is still present in our List view (e.g. Stage, Expected Revenue, Opportunity, and Customer) and some new information has become visible in this view (e.g. Probability and Created On). Some column headers will show an arrow on hover. This indicates that clicking that column header will sort it in either ascending or descending order, and clicking it again will reverse the sort order. Not all fields have this feature. Exposing Columns On the top-right of many different list views in PerfectWORK, you'll see the vertical ellipses icon. Clicking this icon allows you to expose other available columns. Because the data availability will change between apps and views, the options in this fly-out menu will also differ. Calendar \u00b6 This View allows you to see your Scheduled Activities in a calendar. You can see your upcoming events by the Day, Week, or Month. The calendar will only show items that are created under the Schedule Activity section for each item listed in our Sales Pipeline. As you can see from the screenshot below, the Calendar View is selected from the View options and the calendar is displayed by the Month. Pivot \u00b6 This View allows you to display your data in a Pivot Table. In the following example, the Pivot View is selected from the View menu. This displays our Sales Pipeline data in this format, showing the Expected Revenue for October at every Stage. Note that our table only displays October because that's when our sample database was created and there is no prior data. Graph \u00b6 This View allows you to create Graphs and visualize data points in four different ways: Pie Chart \u00b6 Bar Chart \u00b6 Line Chart \u00b6 To change the input data that gets used to create the different Graphs, click the MEASURE button and select the data that you would like to visualize from the dropdown menu. Activity \u00b6 This View allows you to see all of your upcoming Scheduled Activities for your tasks, clients, leads, opportunities, or any other element in your PerfectWORK applications. In the example below, we're in the CRM application so these are the scheduled activities in our Sales Pipeline for four different Opportunities. Each Opportunity has its own row and the dates of each scheduled activity shows in a column to the right. Activities in red are overdue, activities in orange are scheduled for today, and activities in green are scheduled for a time in the future. You can schedule additional activities by clicking the SCHEDULE AN ACTIVITY button at the bottom of the table. If you click on an Activity in the grid, you'll see what the Activity is, the scheduled date, and you can mark it as Done by clicking the checkmark icon that's greyed out on the right. You can also schedule additional activities for the row by clicking the SCHEDULE AN ACTIVITY button at the bottom of the pop-up. Actions \u00b6 This feature allows you to take specific actions on an object within PerfectWORK applications. This could be anything from setting up access to your system for your users, sending a customer an SMS message, or editing a customer record. To get started, navigate to the Contacts application. If you don't have this application installed, please do so now. When you click the Action menu, you will get a set of pre-determined actions that you can take to modify or interact with that object. These options will vary depending on the application that you're in, and what you are currently viewing or modifying. As you work in PerfectWORK, keep an eye out for the Action menu as it can be a great shortcut to what you're trying to do.","title":"Navigation - UI"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#application","text":"Once you log in you'll be on PerfectWORK's main menu where applications, or Apps, are represented by icons. At first, you may not see very many apps installed. Each app adds new functions to the database and they're installed as needed. To get started with building out your database, you will need to install the necessary apps for your business needs. To do this, navigate to the Apps application by clicking its icon . Global Search Apps aren't listed in alphabetical order, but you can easily navigate to an app by simply typing its name from the main menu. As you type, the installed apps will filter as well as other related items. This is extremely useful when you have multiple apps installed. Clicking the Apps icon will take you to the app repository where you can browse around for the apps that you want to install. From this screen, you can see which apps your database has installed already and you can browse through the available apps to install. If you click on the button on any application, you can see the application's overview page to see if you would like to use it before installing. When you're ready to install an app, simply click the button and wait for the application to load. Please Note: For larger apps, this process could take several minutes. Once the app is installed, you will be routed to either the initial setup screen of the application to begin configuring it, or to your database's homepage where you can see your newly installed apps.","title":"Application"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#search","text":"The Search area is persistent in every application in PerfectWORK and provides the ability to easily find information. Search is a very straightforward feature and is tailored to the application you're using. For example, you won't be able to find a Sale Order from the search bar in the CRM app . By typing in the name of a customer, project, employee, or another object, you can retrieve that to view within the application that you're using. For the purposes of this document, we've highlighted an enhanced search feature in PerfectWORK that will make searching even easier. As you type in the search bar, you will see a dropdown menu appear with different options available to help you quickly locate your desired information. In this example, we've searched the Sales application for \"Peter\" and are looking for a client \"Peter Lim\". As you begin typing in the search bar, PerfectWORK gives the option to search specific customer within the Sales application for the desired keyword. Any option with the arrow \u2023 icon next to it can be expanded with a click, and PerfectWORK will display the available items for the data type that match your keyword. The example above shows the \"Customer\" section expanded and, as you can see, all customers with the keyword \"Peter\" in their profile are shown. From here you can either select the specific customer record you want to see, or you can select the option to display all customers with \"Peter\" in their profile.","title":"Search"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#filters","text":"Filters appear directly beneath the Search bar and allow you to customize the data that is displayed on a given page within any application in PerfectWORK. While the filters themselves will vary depending on what application you're using. For this example we will go over the basics of how to use filters in the Sales application. To get started, navigate to the Sales app. (If it's not installed, follow the instructions above to install it.) Once you've launched the Sales application, Select Orders \u2023 Customers let's take a look at the Search area at the top right of the screen. Toggle the Filters Menu If you do not see Filters or Group By or Favorites underneath the search bar, click the spyglass icon (with the + sign in it) and they will appear. If you want to hide them from view, click the spyglass icon (with - sign in it) and they will be hidden again. Click the Filters option to review the Filters menu. Let's now go over how to make the most of your Filters. When you review the Filters that are available within each application, the options will be specific to the data that's housed within that application. The Sales application is displayed for this example, so the options you see in the menu are specific to Sales data. There will typically be a set of default filters that are present in the dropdown menu for you to choose from. If you don't see the data that you want to view in the default filters, you can use the Add Custom Filter option to create your own filters. When adding a custom filter, you can set as many conditions as you'd like for the information you need to pull. When you add multiple conditions to the same custom filter, PerfectWORK automatically adds the \"or\" parameter to the search. So, if you want to search for customers who like Chocolate Icing OR Strawberry Icing, you would set the first condition, then click Add a Condition This opens a new section where you'll enter your \"or\" conditions. When you're done, click . After you select the filters that you want to use, PerfectWORK will automatically search the records in the model you\u2019re on for the information you've selected. Your filter will be reflected in the search bar. Saving a Custom Filter Custom filters, by default, will be lost once you leave the application that you're using. If you would like to save these custom filters for future use, then you'll need to utilize the Favorites feature, covered below, to accomplish this.","title":"Filters"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#group-by","text":"This feature allows you to change how your data is grouped together to better visualize your information and inform your workflows. For example, you may want to see your pipeline data grouped by Salesperson, so you can review which opportunities are being handled by which of your salespeople. This is just one small example of what this feature can do. Like the Filters function discussed above, the ways that PerfectWORK will allow you to group your data will depend on the application that you're using and the page that you're on within that application. Also, like the Filters option, you can use the Add Custom Group button to create your own groupings if the default options do not suit your needs. Unlike Filters, custom groupings will only allow you to add one parameter to a Custom Group; however, you may create multiple Custom Groups and apply them together. PerfectWORK will add the grouping methods to one another and group the data as you've specified. Saving a Custom Group Custom Groups, by default, will be lost once you leave the application that you're using. If you would like to save these custom Groups for use in the future, then you will need to use the Favorites feature, covered in the next section, to accomplish this.","title":"Group By"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#favorites","text":"This feature allows you to save custom searches that you've built using the Filters and Group By options covered above. Once you have your search or grouping parameters configured and selected, click the Favorites dropdown menu, then click Save current search and the following window will appear. In this window, enter a name for your Search or Custom Group, choose whether or not you want the system to default to this search when you open the application, and if you'd like to share this search with all other users of this application. Once you have made your selections, click SAVE . After you've successfully saved your custom Search or Group to your Favorites, simply go to Favorites and select it from the dropdown menu to utilize them in the future. Deleting a Favoutite If you would like to delete any of your Favorites, you simply click the trash can next to the name of the Favorite you want to delete and then confirm the deletion.","title":"Favorites"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#views","text":"This feature is similar to Group By, but instead of changing how the information is grouped on the page, it will change the method by which all of the data is displayed. Think of changing your Group By method like re-arranging information on a pie chart, while changing a View is like moving from a pie chart to a line graph. PerfectWORK has several different Views that you can choose from. Not all of them are available in every application, but we will cover all of them in this document so that when you come across a View you will know what it does. You can find the different Views that are available within any application tucked under the Search bar at the top right. Each View is denoted by an icon. Available views will vary between Apps. We will be going through each one and will provide examples of how the Views look when selected. For the purposes of this article, we will be using the same data for every view so that you can see the ways that your data can be manipulated simply by changing a View. If you hover over each View's icon, you will see a tool-tip telling you the name of the View.","title":"Views"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#kanban","text":"This View will allow you to create a kanban board to view your data. Kanban is an organizational method that typically uses columns and cards to visualize data. As each project, task, or item moves through the kanban sequence from left to right, you can easily track where each item is in its lifecycle. The example below is from the Sales Pipeline within the CRM application. As you can see from the below screenshot, the Kanban View is selected from the View options and we have our Sales Pipeline organized by stages. Each column represents a different stage in the Sales process and you can see the Opportunities under each stage. You can always change the stage that an item is in by dragging and dropping it into the correct column. You can also re-organize the columns by dragging and dropping them to the appropriate placement within the process flow. To the far right, you also have the option to Add a Column to create a new Stage of the process flow. Once created, you can drag-and-drop to wherever you'd like within the Kanban view. Once your stages are set up, you can begin assigning items to them.","title":"Kanban"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#list","text":"This View will organize your data into a list format. As you can see below, all of the same information from the Pipeline View is still present in our List view (e.g. Stage, Expected Revenue, Opportunity, and Customer) and some new information has become visible in this view (e.g. Probability and Created On). Some column headers will show an arrow on hover. This indicates that clicking that column header will sort it in either ascending or descending order, and clicking it again will reverse the sort order. Not all fields have this feature. Exposing Columns On the top-right of many different list views in PerfectWORK, you'll see the vertical ellipses icon. Clicking this icon allows you to expose other available columns. Because the data availability will change between apps and views, the options in this fly-out menu will also differ.","title":"List"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#calendar","text":"This View allows you to see your Scheduled Activities in a calendar. You can see your upcoming events by the Day, Week, or Month. The calendar will only show items that are created under the Schedule Activity section for each item listed in our Sales Pipeline. As you can see from the screenshot below, the Calendar View is selected from the View options and the calendar is displayed by the Month.","title":"Calendar"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#pivot","text":"This View allows you to display your data in a Pivot Table. In the following example, the Pivot View is selected from the View menu. This displays our Sales Pipeline data in this format, showing the Expected Revenue for October at every Stage. Note that our table only displays October because that's when our sample database was created and there is no prior data.","title":"Pivot"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#graph","text":"This View allows you to create Graphs and visualize data points in four different ways:","title":"Graph"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#pie-chart","text":"","title":"Pie Chart"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#bar-chart","text":"","title":"Bar Chart"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#line-chart","text":"To change the input data that gets used to create the different Graphs, click the MEASURE button and select the data that you would like to visualize from the dropdown menu.","title":"Line Chart"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#activity","text":"This View allows you to see all of your upcoming Scheduled Activities for your tasks, clients, leads, opportunities, or any other element in your PerfectWORK applications. In the example below, we're in the CRM application so these are the scheduled activities in our Sales Pipeline for four different Opportunities. Each Opportunity has its own row and the dates of each scheduled activity shows in a column to the right. Activities in red are overdue, activities in orange are scheduled for today, and activities in green are scheduled for a time in the future. You can schedule additional activities by clicking the SCHEDULE AN ACTIVITY button at the bottom of the table. If you click on an Activity in the grid, you'll see what the Activity is, the scheduled date, and you can mark it as Done by clicking the checkmark icon that's greyed out on the right. You can also schedule additional activities for the row by clicking the SCHEDULE AN ACTIVITY button at the bottom of the pop-up.","title":"Activity"},{"location":"01_application/01_platform/01_getting_started/02_navigation/#actions","text":"This feature allows you to take specific actions on an object within PerfectWORK applications. This could be anything from setting up access to your system for your users, sending a customer an SMS message, or editing a customer record. To get started, navigate to the Contacts application. If you don't have this application installed, please do so now. When you click the Action menu, you will get a set of pre-determined actions that you can take to modify or interact with that object. These options will vary depending on the application that you're in, and what you are currently viewing or modifying. As you work in PerfectWORK, keep an eye out for the Action menu as it can be a great shortcut to what you're trying to do.","title":"Actions"},{"location":"01_application/01_platform/02_companies_users/01_companies/","text":"A centralized management environment allows you to select multiple companies simultaneously and set their specific warehouses, customers, equipment, and contacts. It provides you the ability to generate reports of aggregated figures without switching interfaces, which facilitates daily tasks and the overall management process. Manage companies and records \u00b6 Go to Settings \u2023 Manage Companies and fill in the form with your company\u2019s information. If a Parent Company is selected, records are shared between the two companies (as long as both environments are active). Switch between or select multiple companies by enabling their selection boxes to activate them. The grayed company is the one which environment is in use. To switch environments, click on the company\u2019s name. In the example below, the user has access to two companies, one is activated, and the environment in use is of Best Company (Singapore). Employees\u2019 access \u00b6 Once companies are created, manage your employees\u2019 Access Rights for Multi Companies . If a user has multiple companies activated on his database, and he is editing a record, the editing happens on the record\u2019s related company. Example: if editing a sale order issued under Best Company (Singapore) while working on the Best Company (Malaysia) environment, the changes are applied under Best Company (Singapore) the company from which the sale order was issued). When creating a record, the company taken into account is: The current company (the one active) or, No company is set (on products and contacts\u2019 forms for example) or, The company set is the one linked to the document (the same as if a record is being edited).","title":"Companies"},{"location":"01_application/01_platform/02_companies_users/01_companies/#manage-companies-and-records","text":"Go to Settings \u2023 Manage Companies and fill in the form with your company\u2019s information. If a Parent Company is selected, records are shared between the two companies (as long as both environments are active). Switch between or select multiple companies by enabling their selection boxes to activate them. The grayed company is the one which environment is in use. To switch environments, click on the company\u2019s name. In the example below, the user has access to two companies, one is activated, and the environment in use is of Best Company (Singapore).","title":"Manage companies and records"},{"location":"01_application/01_platform/02_companies_users/01_companies/#employees-access","text":"Once companies are created, manage your employees\u2019 Access Rights for Multi Companies . If a user has multiple companies activated on his database, and he is editing a record, the editing happens on the record\u2019s related company. Example: if editing a sale order issued under Best Company (Singapore) while working on the Best Company (Malaysia) environment, the changes are applied under Best Company (Singapore) the company from which the sale order was issued). When creating a record, the company taken into account is: The current company (the one active) or, No company is set (on products and contacts\u2019 forms for example) or, The company set is the one linked to the document (the same as if a record is being edited).","title":"Employees\u2019 access"},{"location":"01_application/01_platform/02_companies_users/10_users/","text":"Managing Users \u00b6 PerfectWORK defines a user as someone who has access to a database to perform daily tasks. You can add as many users as you need and, in order to restrict the type of information each user can access, rules can be applied. Users and access rights can be added and changed at any point of time. See Also Change Language Access Right Add individual users \u00b6 Go to Settings \u2023 Manage Users and click on Create . Fill in the form with the needed information. Under the tab Access Right choose the group within each application the user can have access to. The list of applications shown is based on the applications installed on the database. When you are done editing the page and have Saved it, an invitation email is automatically sent to the user. The user must click on it to accept the invitation and create a login. Deactivate users \u00b6 Go to Settings \u2023 Users & Companies \u2023 Users , open the user you want to deactivate, click on Action , and then on Archive . Danger NEVER deactivate the main user (admin) Passwords Management \u00b6 Reset Password \u00b6 Enable password resets from login page \u00b6 It is possible to enable password resets directly from the login page. To do so, go to Settings \u2023 General Settings , Under Users Tab, activate Password Reset and Save . Send reset instructions to users \u00b6 Go to Settings \u2023 Users & Companies \u2023 Users , select the user out of the list and click on Send Password Reset Instructions on its user form. An email is automatically sent to them. Note The Send Password Reset Instructions button only appears if the PerfectWORK invitation email has already been confirmed by the user. This email contains all the instructions needed to reset the password, along with a link redirecting the user to an PerfectWORK login page. Change users\u2019 passwords \u00b6 Go to Settings \u2023 Users & Companies \u2023 Users and select a user to access its form. Click on the Action button and select Change Password . Enter a new password and confirm by clicking on Change Password . Note This operation only modifies the password of the users locally and does not affect their odoo.com account. If you want to change the odoo.com password, you can send the password reset instructions . Multi Companies \u00b6 The Multi Companies field allows you to set to which of the multiple companies database you hold the user can have access. Note Note that if not handled correctly, it may be the source of a lot of inconsistent multi-company behaviors. Therefore, a good knowledge of PerfectWORK is required. For technical explanations refer to multi-company Guidelines documentation. See Also Companies Change Language \u00b6 PerfectWORK provides you with the option to manage PerfectWORK in different languages, and each user can use PerfectWORK in his own language. Load your desired language \u00b6 The first thing to do is to load your desired language on your PerfectWORK database. From the general dashboard click on the Settings app; on the top left of the page select Translations \u2023 Laungauges , select a language to install and click on LOAD . ''' note If you check the \u201cWebsites to translate\u201d checkbox you will have the option to change the navigation language on your website. Change your language \u00b6 User can change the language to the installed language by going to the drop-down menu at the top right side of the screen, choose Preferences . Then change the Language setting to your installed language and click SAVE. Change other user's language \u00b6 PerfectWORK also gives you the possibility for each user to choose his preferred language. To change the language for a different user, choose Users \u2023 Users from the Settings app. Here you have a list of all users and you can choose the user who you\u2019d like to change the language for. Select the user and click on Edit in the top left corner. Under Preferences you can change the Language to any previously installed language and click SAVE . Access Right \u00b6 Activate the developer mode , then go to Settings \u2023 Users & Companies \u2023 Groups . Groups \u00b6 When choosing the groups the user can have access under Access Rights , details of the rules and inheritances of that group are not shown, so this is when the menu Groups comes along. Groups are created to define rules to models within an application. Under Users , have a list of the current ones. The ones with internal user access are shown in black. Inherited means that users added to this application group are automatically added to the following ones. In the example below, users who have access to the group Extra Right / Technical Features also have access to Internal User group Important Remember to always test the settings being changed in order to ensure that they are being applied to the needed and right users. The Menus tab is where you define which menus (models) the user can have access to. Access Rights rules are the first level of rights. The field is composed of the object name, which is the technical name given to a model. For each model, enable the following options as appropriate: Read: the values of that object can be only seen by the user. Write: the values of that object can be edited by the user. Create: values for that object can be created by the user. Delete: the values of that object can be deleted by the user. As a second layer of editing and visibility rules, Record Rules can be formed. They overwrite, or refine, the Access Rights . A record rule is written using a Domain . Domains are conditions used to filter or searching data. Therefore, a domain expression is a list of conditions. For each rule, choose among the following options: Read , Write , Create and Delete values. Important Making changes in access rights can have a big impact on the database. For this reason, we recommend you to contact your PerfectWORK Consultants or our Support Team, unless you have knowledge about Domains in PerfectWORK.","title":"Users"},{"location":"01_application/01_platform/02_companies_users/10_users/#managing-users","text":"PerfectWORK defines a user as someone who has access to a database to perform daily tasks. You can add as many users as you need and, in order to restrict the type of information each user can access, rules can be applied. Users and access rights can be added and changed at any point of time. See Also Change Language Access Right","title":"Managing Users"},{"location":"01_application/01_platform/02_companies_users/10_users/#add-individual-users","text":"Go to Settings \u2023 Manage Users and click on Create . Fill in the form with the needed information. Under the tab Access Right choose the group within each application the user can have access to. The list of applications shown is based on the applications installed on the database. When you are done editing the page and have Saved it, an invitation email is automatically sent to the user. The user must click on it to accept the invitation and create a login.","title":"Add individual users"},{"location":"01_application/01_platform/02_companies_users/10_users/#deactivate-users","text":"Go to Settings \u2023 Users & Companies \u2023 Users , open the user you want to deactivate, click on Action , and then on Archive . Danger NEVER deactivate the main user (admin)","title":"Deactivate users"},{"location":"01_application/01_platform/02_companies_users/10_users/#passwords-management","text":"","title":"Passwords Management"},{"location":"01_application/01_platform/02_companies_users/10_users/#reset-password","text":"","title":"Reset Password"},{"location":"01_application/01_platform/02_companies_users/10_users/#enable-password-resets-from-login-page","text":"It is possible to enable password resets directly from the login page. To do so, go to Settings \u2023 General Settings , Under Users Tab, activate Password Reset and Save .","title":"Enable password resets from login page"},{"location":"01_application/01_platform/02_companies_users/10_users/#send-reset-instructions-to-users","text":"Go to Settings \u2023 Users & Companies \u2023 Users , select the user out of the list and click on Send Password Reset Instructions on its user form. An email is automatically sent to them. Note The Send Password Reset Instructions button only appears if the PerfectWORK invitation email has already been confirmed by the user. This email contains all the instructions needed to reset the password, along with a link redirecting the user to an PerfectWORK login page.","title":"Send reset instructions to users"},{"location":"01_application/01_platform/02_companies_users/10_users/#change-users-passwords","text":"Go to Settings \u2023 Users & Companies \u2023 Users and select a user to access its form. Click on the Action button and select Change Password . Enter a new password and confirm by clicking on Change Password . Note This operation only modifies the password of the users locally and does not affect their odoo.com account. If you want to change the odoo.com password, you can send the password reset instructions .","title":"Change users\u2019 passwords"},{"location":"01_application/01_platform/02_companies_users/10_users/#multi-companies","text":"The Multi Companies field allows you to set to which of the multiple companies database you hold the user can have access. Note Note that if not handled correctly, it may be the source of a lot of inconsistent multi-company behaviors. Therefore, a good knowledge of PerfectWORK is required. For technical explanations refer to multi-company Guidelines documentation. See Also Companies","title":"Multi Companies"},{"location":"01_application/01_platform/02_companies_users/10_users/#change-language","text":"PerfectWORK provides you with the option to manage PerfectWORK in different languages, and each user can use PerfectWORK in his own language.","title":"Change Language"},{"location":"01_application/01_platform/02_companies_users/10_users/#load-your-desired-language","text":"The first thing to do is to load your desired language on your PerfectWORK database. From the general dashboard click on the Settings app; on the top left of the page select Translations \u2023 Laungauges , select a language to install and click on LOAD . ''' note If you check the \u201cWebsites to translate\u201d checkbox you will have the option to change the navigation language on your website.","title":"Load your desired language"},{"location":"01_application/01_platform/02_companies_users/10_users/#change-your-language","text":"User can change the language to the installed language by going to the drop-down menu at the top right side of the screen, choose Preferences . Then change the Language setting to your installed language and click SAVE.","title":"Change your language"},{"location":"01_application/01_platform/02_companies_users/10_users/#change-other-users-language","text":"PerfectWORK also gives you the possibility for each user to choose his preferred language. To change the language for a different user, choose Users \u2023 Users from the Settings app. Here you have a list of all users and you can choose the user who you\u2019d like to change the language for. Select the user and click on Edit in the top left corner. Under Preferences you can change the Language to any previously installed language and click SAVE .","title":"Change other user's language"},{"location":"01_application/01_platform/02_companies_users/10_users/#access-right","text":"Activate the developer mode , then go to Settings \u2023 Users & Companies \u2023 Groups .","title":"Access Right"},{"location":"01_application/01_platform/02_companies_users/10_users/#groups","text":"When choosing the groups the user can have access under Access Rights , details of the rules and inheritances of that group are not shown, so this is when the menu Groups comes along. Groups are created to define rules to models within an application. Under Users , have a list of the current ones. The ones with internal user access are shown in black. Inherited means that users added to this application group are automatically added to the following ones. In the example below, users who have access to the group Extra Right / Technical Features also have access to Internal User group Important Remember to always test the settings being changed in order to ensure that they are being applied to the needed and right users. The Menus tab is where you define which menus (models) the user can have access to. Access Rights rules are the first level of rights. The field is composed of the object name, which is the technical name given to a model. For each model, enable the following options as appropriate: Read: the values of that object can be only seen by the user. Write: the values of that object can be edited by the user. Create: values for that object can be created by the user. Delete: the values of that object can be deleted by the user. As a second layer of editing and visibility rules, Record Rules can be formed. They overwrite, or refine, the Access Rights . A record rule is written using a Domain . Domains are conditions used to filter or searching data. Therefore, a domain expression is a list of conditions. For each rule, choose among the following options: Read , Write , Create and Delete values. Important Making changes in access rights can have a big impact on the database. For this reason, we recommend you to contact your PerfectWORK Consultants or our Support Team, unless you have knowledge about Domains in PerfectWORK.","title":"Groups"},{"location":"01_application/01_platform/03_connect/01_overview/","text":"Get Started with CONNECT \u00b6 CONNECT allows you to bring all of your company\u2019s communication together through messages, notes, and chat. Share information, projects, files, prioritize tasks, and stay connected with colleagues and partners throughout applications. Forge better relationships, increase productivity and transparency by promoting a convenient way of communicating. Choose your notifications preference \u00b6 Access your Preferences and choose how you would like your notifications to be handled. By default, the field is set as Handle by Emails making messages, notes, and notifications where you were mentioned or that you follow, to be sent through email. By choosing Handle in PerfectWORK , they are shown in the Inbox . Messages can then be Marked as Todo, Replied, or Marked as Read. Start Chatting \u00b6 The first time you log in to your account, PWBot sends you a message asking for permission to receive desktop notifications to chats. If accepted, you receive push notifications to the messages sent to you despite of where you are in PerfectWORK. Tip To stop receiving desktop notifications, reset the notifications settings of your browser. To start a chat, click on New Message on the Messaging Menu, or go to Connect and send a Direct Message . You can also create public and private channels . Mentions in the chat and on the Chatter \u00b6 To mention a user within a chat or the chatter type @user -name ; to refer to a channel, type #channel-name . A notification is sent to the user mentioned either to his Inbox or through email, depending on his settings. Tip When a user is mentioned, the search list (list of names) suggests values first based on the task\u2019s followers, and secondly on Employees. If the record being searched does not match with either a follower or employee, the scope of the search becomes all partners. Chat status \u00b6 It is helpful to see what colleagues are up to and how quickly they can respond to messages by checking their Status. The status is shown on the left side of a contact\u2019s names on Discuss\u2019 sidebar and on the Messaging menu. Green = online Orange = away White = offline Airplane = out of the office Efficiently Communicate Using Channels \u00b6 You can use channels to organize discussions between individual teams, departments, projects, or any other group that requires regular communication. This way, you keep everyone in the loop updated with the latest developments. Public and Private channels \u00b6 A Public channel can be seen by everyone, while a Private one is only visible to users invited to it. Tip A public channel is best used when many employees need to access information (such as company announcements), whereas a private channel could be used whenever information should be limited to specific groups (such as a specific department). Configuration options \u00b6 You can configure a channel\u2019s name, description, email alias, and privacy by clicking on the Channel Settings icon on the sidebar. Privacy and Members \u00b6 Changing Who can follow the group\u2019s activities ? allows you to control which groups can have access to the channel. Note that allowing Everyone to follow a private channel lets other users view and join it, as they would a public one. If you choose Invited people only , go to the Members tab to add your members, or, go to Connect\u2019 main page, select the channel and click on Invite . For Selected group of users , the option Auto Subscribe Groups automatically add its members as followers. In other words, while Authorized Groups limits which users can access the channel, Auto Subscribe Groups automatically adds the user as a member as long as they are part of the group. Use a channel as a mailing list \u00b6 Choosing to Send messages by email configures the channel to behave as a mailing list. Enabling this option allows you to Moderate this channel , meaning that messages will need to be approved before being sent. Under the Moderation tab choose as many moderators as you need, and if you would like them to receive an Automatic notification . Mark Send guidelines to new subscribers to automatically send instructions to newcomers. Moderators can: Accept, Reject, Discard, Always Allow or Ban messages. Note Members of a mailing channel receive messages through email regardless of their notification preference . Once a channel is moderated, the menu Ban List allows you to add email addresses per moderated channel to auto-ban them from sending messages. Quick search bar \u00b6 Once at least 20 channels, direct message and live chat conversations (if the module is installed on your database) are pinned in the sidebar, a Quick search\u2026 bar is displayed. It is a clever way to filter conversations and quickly find the one you need. Finding channels \u00b6 Click on Channels (on the sidebar), browse through the list of public channels, and join or leave them from a single screen. Apply filters criteria and save it for later use. The search function accepts wildcards by using the underscore character ( )_ to represent a single character. Get Organized by Planning Activities \u00b6 When you plan activities you minimize the risk of uncertainties, as you provide clear directions for the course of your next action. In addition to that, you do not leave space for wasteful activities and reduce the chance of having overlapping actions between team members. Where do I see my schedule activities? \u00b6 Access and manage your activities wherever you are in PerfectWORK by the Activities menu. Plan activities \u00b6 Activities can be planned and managed from the chatter by clicking on Schedule activity, or through Kanban views. Set your activity types \u00b6 A number of activities types are available by default in PerfectWORK (call, email, meeting, etc.). However, you can set new ones going to Settings \u2023 Activity types. Tip If you need to create an activity type with an available calendar, make sure to create it with an Action to Perform set as Meeting. Recommend next activities \u00b6 PerfectWORK helps you to plan a flow of activities by allowing you to set Recommended Next Activities. Once the respective activity is completed, select Done & Schedule Next and next steps are suggested to you.","title":"CONNECT Application"},{"location":"01_application/01_platform/03_connect/01_overview/#get-started-with-connect","text":"CONNECT allows you to bring all of your company\u2019s communication together through messages, notes, and chat. Share information, projects, files, prioritize tasks, and stay connected with colleagues and partners throughout applications. Forge better relationships, increase productivity and transparency by promoting a convenient way of communicating.","title":"Get Started with CONNECT"},{"location":"01_application/01_platform/03_connect/01_overview/#choose-your-notifications-preference","text":"Access your Preferences and choose how you would like your notifications to be handled. By default, the field is set as Handle by Emails making messages, notes, and notifications where you were mentioned or that you follow, to be sent through email. By choosing Handle in PerfectWORK , they are shown in the Inbox . Messages can then be Marked as Todo, Replied, or Marked as Read.","title":"Choose your notifications preference"},{"location":"01_application/01_platform/03_connect/01_overview/#start-chatting","text":"The first time you log in to your account, PWBot sends you a message asking for permission to receive desktop notifications to chats. If accepted, you receive push notifications to the messages sent to you despite of where you are in PerfectWORK. Tip To stop receiving desktop notifications, reset the notifications settings of your browser. To start a chat, click on New Message on the Messaging Menu, or go to Connect and send a Direct Message . You can also create public and private channels .","title":"Start Chatting"},{"location":"01_application/01_platform/03_connect/01_overview/#mentions-in-the-chat-and-on-the-chatter","text":"To mention a user within a chat or the chatter type @user -name ; to refer to a channel, type #channel-name . A notification is sent to the user mentioned either to his Inbox or through email, depending on his settings. Tip When a user is mentioned, the search list (list of names) suggests values first based on the task\u2019s followers, and secondly on Employees. If the record being searched does not match with either a follower or employee, the scope of the search becomes all partners.","title":"Mentions in the chat and on the Chatter"},{"location":"01_application/01_platform/03_connect/01_overview/#chat-status","text":"It is helpful to see what colleagues are up to and how quickly they can respond to messages by checking their Status. The status is shown on the left side of a contact\u2019s names on Discuss\u2019 sidebar and on the Messaging menu. Green = online Orange = away White = offline Airplane = out of the office","title":"Chat status"},{"location":"01_application/01_platform/03_connect/01_overview/#efficiently-communicate-using-channels","text":"You can use channels to organize discussions between individual teams, departments, projects, or any other group that requires regular communication. This way, you keep everyone in the loop updated with the latest developments.","title":"Efficiently Communicate Using Channels"},{"location":"01_application/01_platform/03_connect/01_overview/#public-and-private-channels","text":"A Public channel can be seen by everyone, while a Private one is only visible to users invited to it. Tip A public channel is best used when many employees need to access information (such as company announcements), whereas a private channel could be used whenever information should be limited to specific groups (such as a specific department).","title":"Public and Private channels"},{"location":"01_application/01_platform/03_connect/01_overview/#configuration-options","text":"You can configure a channel\u2019s name, description, email alias, and privacy by clicking on the Channel Settings icon on the sidebar.","title":"Configuration options"},{"location":"01_application/01_platform/03_connect/01_overview/#privacy-and-members","text":"Changing Who can follow the group\u2019s activities ? allows you to control which groups can have access to the channel. Note that allowing Everyone to follow a private channel lets other users view and join it, as they would a public one. If you choose Invited people only , go to the Members tab to add your members, or, go to Connect\u2019 main page, select the channel and click on Invite . For Selected group of users , the option Auto Subscribe Groups automatically add its members as followers. In other words, while Authorized Groups limits which users can access the channel, Auto Subscribe Groups automatically adds the user as a member as long as they are part of the group.","title":"Privacy and Members"},{"location":"01_application/01_platform/03_connect/01_overview/#use-a-channel-as-a-mailing-list","text":"Choosing to Send messages by email configures the channel to behave as a mailing list. Enabling this option allows you to Moderate this channel , meaning that messages will need to be approved before being sent. Under the Moderation tab choose as many moderators as you need, and if you would like them to receive an Automatic notification . Mark Send guidelines to new subscribers to automatically send instructions to newcomers. Moderators can: Accept, Reject, Discard, Always Allow or Ban messages. Note Members of a mailing channel receive messages through email regardless of their notification preference . Once a channel is moderated, the menu Ban List allows you to add email addresses per moderated channel to auto-ban them from sending messages.","title":"Use a channel as a mailing list"},{"location":"01_application/01_platform/03_connect/01_overview/#quick-search-bar","text":"Once at least 20 channels, direct message and live chat conversations (if the module is installed on your database) are pinned in the sidebar, a Quick search\u2026 bar is displayed. It is a clever way to filter conversations and quickly find the one you need.","title":"Quick search bar"},{"location":"01_application/01_platform/03_connect/01_overview/#finding-channels","text":"Click on Channels (on the sidebar), browse through the list of public channels, and join or leave them from a single screen. Apply filters criteria and save it for later use. The search function accepts wildcards by using the underscore character ( )_ to represent a single character.","title":"Finding channels"},{"location":"01_application/01_platform/03_connect/01_overview/#get-organized-by-planning-activities","text":"When you plan activities you minimize the risk of uncertainties, as you provide clear directions for the course of your next action. In addition to that, you do not leave space for wasteful activities and reduce the chance of having overlapping actions between team members.","title":"Get Organized by Planning Activities"},{"location":"01_application/01_platform/03_connect/01_overview/#where-do-i-see-my-schedule-activities","text":"Access and manage your activities wherever you are in PerfectWORK by the Activities menu.","title":"Where do I see my schedule activities?"},{"location":"01_application/01_platform/03_connect/01_overview/#plan-activities","text":"Activities can be planned and managed from the chatter by clicking on Schedule activity, or through Kanban views.","title":"Plan activities"},{"location":"01_application/01_platform/03_connect/01_overview/#set-your-activity-types","text":"A number of activities types are available by default in PerfectWORK (call, email, meeting, etc.). However, you can set new ones going to Settings \u2023 Activity types. Tip If you need to create an activity type with an available calendar, make sure to create it with an Action to Perform set as Meeting.","title":"Set your activity types"},{"location":"01_application/01_platform/03_connect/01_overview/#recommend-next-activities","text":"PerfectWORK helps you to plan a flow of activities by allowing you to set Recommended Next Activities. Once the respective activity is completed, select Done & Schedule Next and next steps are suggested to you.","title":"Recommend next activities"},{"location":"01_application/01_platform/03_connect/02_email_communication/","text":"Send and Receive Emails in PerfectWORK with an Email Server \u00b6 If you are a user of PerfectWORK Online \u00b6 You have nothing to do! PerfectWORK sets up its own mail servers for your database. Outgoing and incoming emails work out-of-the-box! Unless you plan to send large batches of mass mailing that could require the use of an external mail server, simply enjoy your new PerfectWORK database. Scope of this documentation \u00b6 This document is mainly dedicated to PerfectWORK on-premise users who don\u2019t benefit from an out-of-the-box solution to send and receive emails in PerfectWORK, unlike PerfectWORK Online. Warning If no one in your company is used to manage email servers, we strongly recommend that you opt for those PerfectWORK hosting solutions. Their email system works instantly and is monitored by professionals. Nevertheless you can still use your own email servers if you want to manage your email server\u2019s reputation yourself. You will find here some useful information on how to integrate your own email solution with PerfectWORK. Note Office 365 email servers don\u2019t easily allow to send external emails from hosts like PerfectWORK. Refer to Microsoft\u2019s documentation to make it work. How to manage outbound messages \u00b6 As a system admin, go to Settings \u2023 General Settings and check External Email Servers . Then, click Outgoing Mail Servers to create one and reference the SMTP data of your email server. Once all the information has been filled out, click on Test Connection . Here is a typical configuration for a G Suite server. Then set your email domain name in the General Settings. Note If you get a [AUTHENTICATIONFAILED] Invalid credentials (Failure) warning when you Test Connection on a Gmail address, activate the Less secure app access option. A direct link can be accessed here. In addition to that, enable the IMAP setting on your Gmail account. Can I use an Office 365 server \u00b6 You can use an Office 365 server if you run PerfectWORK on-premise. Office 365 SMTP relays are not compatible with PerfectWORK Online unless you configure PerfectWORK to force the outgoing \u201cFrom\u201d address . Please refer to Microsoft\u2019s documentation to configure a SMTP relay for your PerfectWORK\u2019s IP address. How to use a G Suite server \u00b6 You can use an G Suite server for any PerfectWORK hosting type. To do so you need to setup the SMTP relay service. The configuration steps are explained in Google documentation. Restriction \u00b6 Please note that port 25 is blocked for security reasons on our PerfectWORK Online platform. Try using 465 or 587. Use a default \u201cFrom\u201d email address \u00b6 Sometimes, an email\u2019s \u201cFrom\u201d (outgoing) address can belong to a different domain, and that can be a problem. For example, if a customer with address mary@customer.example.com responds to a message, PerfectWORK will try to redistribute that same email to other subscribers in the thread. But if the domain customer.example.com forbids that kind of usage for security, the PerfectWORK\u2019s redistributed email would get rejected by some recipients\u2019 mail servers. To avoid those kind of problems, you should make sure all emails use a \u201cFrom\u201d address from your authorized domain. If your MTA supports SRS (Sender Rewriting Scheme), you can enable it to handle these situations. However, that is more complex and requires more technical knowledge that is not meant to be covered by this documentation. Instead, you can also configure PerfectWORK to do something similar by itself: Set your domain name in the General Settings. Click on Outgoing Mail Servers Create a new one. Fill its From Filter. Use a domain (such as mycompany.example.com) to keep the original \u201cFrom\u201d address for mails that come from that domain. Use an address (such as outgoing@mycompany.example.com ) to allow only that outgoing address. Keep it empty to use this server for any email address. With this configuration in place, if PerfectWORK sends an email that doesn\u2019t match any of the from filters, it will alter the email\u2019s \u201cFrom\u201d before sending it to the MTA. It will use the default outgoing email address, composed like this: {mail.default.from}@{mail.catchall.domain}. In developer mode, go to Settings \u2023 Technical \u2023 Parameters \u2023 System Parameters. Add these system parameters: mail.default.from: local part of default outgoing email address. mail.catchall.domain: domain part of default outgoing email address. How to manage inbound messages \u00b6 PerfectWORK relies on generic email aliases to fetch incoming messages. Reply messages of messages sent from PerfectWORK are routed to their original discussion thread (and to the inbox of all its followers) by the catchall alias (catchall@). Bounced messages are routed to bounce@ in order to track them in PerfectWORK. This is especially used in PerfectWORK Email Marketing to opt-out invalid recipients. Original messages : Several business objects have their own alias to create new records in PerfectWORK from incoming emails: Sales Channel (to create Leads or Opportunities in PerfectWORK CRM), Support Channel (to create Tickets in PerfectWORK Helpdesk), Projects (to create new Tasks in PerfectWORK Project), Job Positions (to create Applicants in PerfectWORK Recruitment), etc. Depending on your mail server, there might be several methods to fetch emails. The easiest and most recommended method is to manage one email address per PerfectWORK alias in your mail server. Create the corresponding email addresses in your mail server (catchall@, bounce@, sales@, etc.). Set your domain name in the General Settings. If you use PerfectWORK on-premise, create an Incoming Mail Server in PerfectWORK for each alias. You can do it from the General Settings as well. Fill out the form according to your email provider\u2019s settings. Leave the Actions to Perform on Incoming Mails blank. Once all the information has been filled out, click on TEST & CONFIRM . If you use PerfectWORK Online or PerfectWORK.sh, We do recommend to redirect incoming messages to PerfectWORK\u2019s domain name rather than exclusively use your own email server. That way you will receive incoming messages without delay. Indeed, PerfectWORK Online is fetching incoming messages of external servers once per hour only. You should set redirections for all the email addresses to PerfectWORK\u2019s domain name in your email server (e.g. catchall@mydomain.ext to catchall@mycompany.PerfectWORK.com ). Tip All the aliases are customizable in PerfectWORK . Object aliases can be edited from their respective configuration view. To edit catchall and bounce aliases, you first need to activate the developer mode. Then go to Settings \u2023 Technical \u2023 Parameters \u2023 System Parameters to customize the aliases (mail.catchall.alias & * mail.bounce.alias*). Note By default inbound messages are fetched every 5 minutes in PerfectWORK on-premise. You can change this value in developer mode. Go to Settings \u2023 Technical \u2023 Automation \u2023 Scheduled Actions and look for Mail: Fetchmail Service . Set up different dedicated servers for transactional and mass mails \u00b6 PerfectWORK is subject to a daily email limit to prevent abuse. However, if needed, you can use a separate Mail Transfer Agent (MTA) servers for transactional e-mails and mass mailings. Example: use PerfectWORK\u2019s own mail server for transactional e-mails, and Sendgrid, Amazon SES, or Mailgun for mass mailings. Another alternative is to use Postmark for transactional e-mails, and Amazon SES or Sendgrid for mass mailings. Note A default outgoing email server is already configured. You should not create an alternative one unless you want to use a specific external outgoing email server for technical reasons. To do this, you should first activate the developer mode and then go to Settings \u2023 Technical \u2023 Outgoing e-mail servers. There you have to create two e-mail MTA server settings. One for transactional e-mails and one for mass mail servers. Be sure to mark the priority of transactional e-mail servers as low as the mass email servers. Now, go to Email Marketing \u2023 Settings and enable Dedicated Server. With these settings, PerfectWORK uses the server with the lower priority for transactional emails, and the server here selected for mass mails. Note that in this case, you have to set your domain\u2019s Sender Policy Framework (SPF) records to include both transactional and mass mail servers. If your server resides with xxxx.PerfectWORK.com, the available options are Sendinblue and Mailchimp, as your e-mails would be originated from the xxxx.PerfectWORK.app domain. Sending emails with PerfectWORK \u00b6 Using your email domain in PerfectWORK \u00b6 Documents in PerfectWORK (a CRM opportunity, a sales order, an invoice \u2026) have a discussion thread, called chatter. When you post a message in the chatter, this message is sent by email to the followers of the document. If a follower replies to the message, the reply updates the chatter, and PerfectWORK relays the reply to the followers. Emails from your users to partners (customers, vendors) are sent from the email address of your users. Similarly, emails from partners to users are sent from the email address of the partners. This allows you to recognize at a glance who sent an email relayed by PerfectWORK. If your database is hosted on our cloud (PerfectWORK Online), it is not necessary to add an outgoing email server to send emails from your custom domain. You can enjoy this feature by using the default PerfectWORK email server. Important The PerfectWORK server is subject to a daily email limit to prevent abuse. The default limit is 200 emails sent per day for databases with an subscription. This limit can be increased under certain conditions. See our FAQ or contact support for more information. However, it is recommended that you configure your domain name to ensure that emails from your users reach your partners, rather than being considered spam. For the same reason, we recommend that you always give your users an email address from a domain you manage, rather than a generic email address (gmail.com, outlook.com, etc.). Be SPF compliant \u00b6 The Sender Policy Framework (SPF) protocol allows the owner of a domain name to specify which servers are allowed to send email from that domain. When a server receives an incoming email, it checks whether the IP address of the sending server is on the list of allowed IPs according to the SPF record of the sender. Note The SPF verification is performed on the domain mentioned in the Return-Path field of the email. In the case of an email sent by PerfectWORK, this domain corresponds to the value of the mail.catchall.domain key in the database system parameters. See the documentation on incoming emails. The SPF policy of a domain is set using a TXT record. How to create or modify a TXT record depends on the provider hosting the DNS zone of your domain name. In order for the verification to work properly, each domain can only have one SPF record. If your domain name does not yet have an SPF record, the content of the record to create is as follows: v=spf1 include:_spf.PerfectWORK.com ~all If your domain name already has an SPF record, you need to update this record (and do not create a new one). Example If your TXT record is v=spf1 include:_spf.google.com ~all, you need to edit it to add include: _spf.perfectwork.app : v=spf1 include:_spf.perfectwork.app include:_spf.google.com ~~all You can check if your SPF record is valid with a free tool like MXToolbox SPF . Enable DKIM \u00b6 The DomainKeys Identified Mail (DKIM) allows you to authenticate your emails with a digital signature. When sending an email, the PerfectWORK server includes a unique DKIM signature in the headers. The recipient\u2019s server decrypts this signature using the DKIM record in your domain name. If the signature and the key contained in the record match, this guarantees that your message is authentic and has not been altered during transport. To enable DKIM, you must add a CNAME record to the DNS zone of your domain name: PerfectWORK._domainkey IN CNAME PerfectWORK._domainkey.PerfectWORK.app. Tip If your domain name is mycompany.com, you need to create a subdomain PerfectWORK._domainkey.mycompany.com whose canonical name is PerfectWORK._domainkey.PerfectWORK.app. How to create or modify a CNAME record depends on the provider hosting the DNS zone of your domain name. The most common providers are list below. You can check if your DKIM record is valid with a free tool like DKIM Core. If a selector is asked, enter PerfectWORK. Check your DMARC policy \u00b6 The Domain-based Message Authentication, Reporting & Conformance (DMARC) is a protocol that unifies SPF and DKIM. The instructions contained in the DMARC record of a domain name tell the destination server what to do with an incoming email that fails the SPF and/or DKIM check. There are three DMARC policies: - p=none - p=quarantine - p=reject p=quarantine and p=reject instruct the server that receives an email to quarantine that email or ignore it if the SPF and/or DKIM check fails. If your domain name uses DMARC and has defined one of these policies, it is therefore imperative to be SPF compliant or to enable DKIM. Danger Yahoo or AOL are examples of email providers with a DMARC policy set to p=reject. We strongly advise against using an @yahoo .com or @aol .com address for your users. These emails will never reach their recipient. p=none is used for the domain owner to receive reports about entities using their domain. It should not impact the deliverability if the DMARC check fails. You can check the DMARC record of a domain name with a tool like MXToolbox DMARC . If one of your partners, customer or vendor, uses DMARC and has defined one of these policies, the PerfectWORK server cannot relay emails from this partner to your users. You need to handle user notifications in PerfectWORK, or replace the email address of the partner with a default email address. Use a default email address \u00b6 To force the email address from which emails are sent, you need to create the following key in the System Parameters of the database: If mail.default.from is set, and contains a full email address, all outgoing emails are sent from the given address. This is a requirement to use Outlook with PerfectWORK. You access the System Parameters in developer mode in the Settings \u2023 Technical \u2023 Parameters \u2023 System Parameters menu. Email Templates \u00b6 We all know writing good emails is vital to get a high response rate, but you do not want to rewrite the same structure every time, do you? That is where email templates come in. Without the need to rewrite the entire email structure every time, you save time to focus on the content. Multiple templates also let you deliver the right message to the right audience, improving their overall experience with the company. Note The email templates use QWeb. The composer allows you to edit emails in their final rendering, making customizations more robust as you don\u2019t have to edit code. Defining a default reply to on your mail template \u00b6 Although the field reply to is available within the mail templates, this field is only used for mass mailing mode (this means when sending templates on what we call bulk emailing). You can send emails in bulk in almost every app that has a list view. Select the records you want and click on the action button. If you have an option to send an email, you will see a mail composer with possible values to define: You can also define them by default on the template: Because of this, setting a value in this field is useless as the value defined will be totally ignored. The default reply-to value is the default catchall email address to ensure a communication between your customer and your PerfectWORK database. For more information about the way the catchall works, please check how to manage inbound messages. Transactional emails and corresponding URL for each company \u00b6 When using PerfectWORK, multiple events trigger the sending of automated emails. These emails are known as transactional emails and sometimes contain links pointing to your PerfectWORK database. By default, links generated by the database use the dynamic web.base.url key defined in the system parameters. More information about this parameter. If the website application isn\u2019t installed, the web.base.url key will always be the default parameter used to generate all the links. It\u2019s important to know that this key can only have a single value, meaning that in a multi-website/company database environment, even if you have a specific domain name for each website, the links generated to share a document or within a transactional email might remain the same, whatever the website/company related to the sending of the email/document. This is not always the case as some PerfectWORK applications have a link established in the database with the website application, meaning that in this case, if a specific domain is defined for the websites, the URL generated in the email template will use the domain defined on the corresponding website of the company. Caution A document shared using the documents application will always use the web.base.url key, as the document shared isn\u2019t associated with any particular website. Meaning that the URL will always be the same (the web.base.url key value), whatever the company it\u2019s shared from, this is a known limitation! On the other hand, sales orders made by a customer on one of your PerfectWORK e-commerce websites have a link established with the website from which the order was made. As a result, the e-mail sent for the sales orders uses the domain name defined for the corresponding website to generate the links. For more information about how to configure your domains, we invite you to check our domain name documentation. Updating translations within email templates \u00b6 Email templates are automatically translated. Changing the translations shouldn\u2019t be necessary. However, if for a specific reason you\u2019d like to change some of the translations, this can be done. Like any modification in the code, keep in mind that modifications that aren\u2019t done correctly (for example modifications leading to bad syntax) can break the template, as a result, the template will appear blank. In order to edit your translations, follow these steps from the template. Click on the edit button, then on the language button Edit the language of a template A pop-up window with the different languages installed on the database will be displayed. From here, editing the translations will be possible. Don\u2019t forget to hit the save button to preserve your changes. FAQ \u00b6 This document contains an explanation of the most recurring mailing concerns. We will start by addressing issues of outgoing emails (ex: my client has not received my email), and then, of incoming emails (ex: I do not receive responses from my customers in the database). Outgoing emails \u00b6 What do you have to check if your email is not sent? \u00b6 The first indicator showing you that the email has not been sent is the red envelope next to the date and time of the message. Common error messages \u00b6 You reached your daily limit: Warning in PerfectWORK upon email limit reached Each email service provider has its own email sending limits. The limits may be daily, hourly, and sometimes even per minute. This is the same for PerfectWORK, we have to limit our customers to prevent our e-mail servers from being blacklisted. Here are the default limits for new databases: 200 emails/day for PerfectWORK Online and PerfectWORK.sh databases with an active subscription, 50 emails/day for one-app free and trial databases, in case of migration, your daily limit might be reset to 50 emails a day. In case you hit the limit, you can: Ask our support team to increase your daily limit. We will analyze the situation of your database depending on (non-exhaustive list): How many users in your database, Which apps are installed, Your bounce rate: the percentage of email addresses that did not receive your emails because it was returned by a mail server on its way to the final recipient. You can contact the support. Use your own outgoing email server to be independent of PerfectWORK\u2019s mail limit (please refer to the corresponding documentation), Wait until 11pm UTC for the reset and click on the retry button: The Developer mode must be activated. Then, go to Settings \u2023 Technical \u2023 Emails Warning The daily limit is global to your database and can rise quickly! By default an internal message, a notification, a note, etc. counts as an email in your daily limit if it notifies someone. You can mitigate this by receiving your notifications in PerfectWORK instead of by emails. SMTP Error \u00b6 You can find out why an email wasn\u2019t transmitted successfully by reviewing the Simple Mail Transport Protocol (SMTP) error messages. SMTP is a protocol to describe the email structure and transmit it over the Internet, and the error messages generated by email services are helpful tools to diagnose and troubleshoot email problems. No Error \u00b6 PerfectWORK is not always capable of providing information for the reason it failed. The different providers implement a personalized policy of the bounce emails and it is not always possible for PerfectWORK to interpret it correctly. If you have this problem on a recurring basis with the same client or the same domain, please do not hesitate to contact PerfectWORK Support for help in finding a reason. Note: in such case, one of the most common reasons is related to SPF and/or DKIM configuration. Why is my email sent late? \u00b6 It may happen that you schedule an email campaign but it is not sent on time. We know that we use a delayed job to send emails that we consider as not urgent (Newsletters concept such as mass mailing, marketing automation, events). The system utility cron can be used to schedule programs to run automatically at predetermined intervals. We use that policy in order to avoid cluttering the mail servers and prioritize the communication. The emails considered urgent (communication from one person to another one such as Sales Orders, Invoices, Purchase Orders, etc.) are sent directly. By default, the Mass Mailing cron runs every 60 minutes. So, you should wait maximum an hour before the campaign is actually sent. Incoming emails \u00b6 When you have an issue with incoming emails, there might not be an indication per se in PerfectWORK. This is the client who tries to contact a database who will get a bounce (most of the time 550: mailbox unavailable). Emails are not received \u00b6 Depending on the platform you are using: Get help from support \u00b6 In order to get helped efficiently, please provide as much information as possible. Here is a list of what can be helpful: The EML of the email, stating for Electronic Mail, is the file format containing all the technical information required for an investigation. The documentation of your own email provider might help you on how to get your EML files. Once you get the EML of the email, adding it in the attachment of your ticket is the most efficient way for us to investigate. The support will mainly focus on redundant issues. The exact flow you are following in order to normally receive those emails in PerfectWORK. Here are examples of questions whose answers can be useful: Is this simply a reply from an email going out from PerfectWORK ? Are you using an incoming email server or somehow redirecting? Can you provide us with an example of an email that has been correctly forwarded ? Providing answers to the following questions: Is it a generic issue or is it specific to a use case? If yes, which one exactly? Is it working as expected? In case the email is sent using PerfectWORK, the bounce email should reach the PerfectWORK database and display the red envelope.","title":"Email Communication"},{"location":"01_application/01_platform/03_connect/02_email_communication/#send-and-receive-emails-in-perfectwork-with-an-email-server","text":"","title":"Send and Receive Emails in PerfectWORK with an Email Server"},{"location":"01_application/01_platform/03_connect/02_email_communication/#if-you-are-a-user-of-perfectwork-online","text":"You have nothing to do! PerfectWORK sets up its own mail servers for your database. Outgoing and incoming emails work out-of-the-box! Unless you plan to send large batches of mass mailing that could require the use of an external mail server, simply enjoy your new PerfectWORK database.","title":"If you are a user of PerfectWORK Online"},{"location":"01_application/01_platform/03_connect/02_email_communication/#scope-of-this-documentation","text":"This document is mainly dedicated to PerfectWORK on-premise users who don\u2019t benefit from an out-of-the-box solution to send and receive emails in PerfectWORK, unlike PerfectWORK Online. Warning If no one in your company is used to manage email servers, we strongly recommend that you opt for those PerfectWORK hosting solutions. Their email system works instantly and is monitored by professionals. Nevertheless you can still use your own email servers if you want to manage your email server\u2019s reputation yourself. You will find here some useful information on how to integrate your own email solution with PerfectWORK. Note Office 365 email servers don\u2019t easily allow to send external emails from hosts like PerfectWORK. Refer to Microsoft\u2019s documentation to make it work.","title":"Scope of this documentation"},{"location":"01_application/01_platform/03_connect/02_email_communication/#how-to-manage-outbound-messages","text":"As a system admin, go to Settings \u2023 General Settings and check External Email Servers . Then, click Outgoing Mail Servers to create one and reference the SMTP data of your email server. Once all the information has been filled out, click on Test Connection . Here is a typical configuration for a G Suite server. Then set your email domain name in the General Settings. Note If you get a [AUTHENTICATIONFAILED] Invalid credentials (Failure) warning when you Test Connection on a Gmail address, activate the Less secure app access option. A direct link can be accessed here. In addition to that, enable the IMAP setting on your Gmail account.","title":"How to manage outbound messages"},{"location":"01_application/01_platform/03_connect/02_email_communication/#can-i-use-an-office-365-server","text":"You can use an Office 365 server if you run PerfectWORK on-premise. Office 365 SMTP relays are not compatible with PerfectWORK Online unless you configure PerfectWORK to force the outgoing \u201cFrom\u201d address . Please refer to Microsoft\u2019s documentation to configure a SMTP relay for your PerfectWORK\u2019s IP address.","title":"Can I use an Office 365 server"},{"location":"01_application/01_platform/03_connect/02_email_communication/#how-to-use-a-g-suite-server","text":"You can use an G Suite server for any PerfectWORK hosting type. To do so you need to setup the SMTP relay service. The configuration steps are explained in Google documentation.","title":"How to use a G Suite server"},{"location":"01_application/01_platform/03_connect/02_email_communication/#restriction","text":"Please note that port 25 is blocked for security reasons on our PerfectWORK Online platform. Try using 465 or 587.","title":"Restriction"},{"location":"01_application/01_platform/03_connect/02_email_communication/#use-a-default-from-email-address","text":"Sometimes, an email\u2019s \u201cFrom\u201d (outgoing) address can belong to a different domain, and that can be a problem. For example, if a customer with address mary@customer.example.com responds to a message, PerfectWORK will try to redistribute that same email to other subscribers in the thread. But if the domain customer.example.com forbids that kind of usage for security, the PerfectWORK\u2019s redistributed email would get rejected by some recipients\u2019 mail servers. To avoid those kind of problems, you should make sure all emails use a \u201cFrom\u201d address from your authorized domain. If your MTA supports SRS (Sender Rewriting Scheme), you can enable it to handle these situations. However, that is more complex and requires more technical knowledge that is not meant to be covered by this documentation. Instead, you can also configure PerfectWORK to do something similar by itself: Set your domain name in the General Settings. Click on Outgoing Mail Servers Create a new one. Fill its From Filter. Use a domain (such as mycompany.example.com) to keep the original \u201cFrom\u201d address for mails that come from that domain. Use an address (such as outgoing@mycompany.example.com ) to allow only that outgoing address. Keep it empty to use this server for any email address. With this configuration in place, if PerfectWORK sends an email that doesn\u2019t match any of the from filters, it will alter the email\u2019s \u201cFrom\u201d before sending it to the MTA. It will use the default outgoing email address, composed like this: {mail.default.from}@{mail.catchall.domain}. In developer mode, go to Settings \u2023 Technical \u2023 Parameters \u2023 System Parameters. Add these system parameters: mail.default.from: local part of default outgoing email address. mail.catchall.domain: domain part of default outgoing email address.","title":"Use a default \u201cFrom\u201d email address"},{"location":"01_application/01_platform/03_connect/02_email_communication/#how-to-manage-inbound-messages","text":"PerfectWORK relies on generic email aliases to fetch incoming messages. Reply messages of messages sent from PerfectWORK are routed to their original discussion thread (and to the inbox of all its followers) by the catchall alias (catchall@). Bounced messages are routed to bounce@ in order to track them in PerfectWORK. This is especially used in PerfectWORK Email Marketing to opt-out invalid recipients. Original messages : Several business objects have their own alias to create new records in PerfectWORK from incoming emails: Sales Channel (to create Leads or Opportunities in PerfectWORK CRM), Support Channel (to create Tickets in PerfectWORK Helpdesk), Projects (to create new Tasks in PerfectWORK Project), Job Positions (to create Applicants in PerfectWORK Recruitment), etc. Depending on your mail server, there might be several methods to fetch emails. The easiest and most recommended method is to manage one email address per PerfectWORK alias in your mail server. Create the corresponding email addresses in your mail server (catchall@, bounce@, sales@, etc.). Set your domain name in the General Settings. If you use PerfectWORK on-premise, create an Incoming Mail Server in PerfectWORK for each alias. You can do it from the General Settings as well. Fill out the form according to your email provider\u2019s settings. Leave the Actions to Perform on Incoming Mails blank. Once all the information has been filled out, click on TEST & CONFIRM . If you use PerfectWORK Online or PerfectWORK.sh, We do recommend to redirect incoming messages to PerfectWORK\u2019s domain name rather than exclusively use your own email server. That way you will receive incoming messages without delay. Indeed, PerfectWORK Online is fetching incoming messages of external servers once per hour only. You should set redirections for all the email addresses to PerfectWORK\u2019s domain name in your email server (e.g. catchall@mydomain.ext to catchall@mycompany.PerfectWORK.com ). Tip All the aliases are customizable in PerfectWORK . Object aliases can be edited from their respective configuration view. To edit catchall and bounce aliases, you first need to activate the developer mode. Then go to Settings \u2023 Technical \u2023 Parameters \u2023 System Parameters to customize the aliases (mail.catchall.alias & * mail.bounce.alias*). Note By default inbound messages are fetched every 5 minutes in PerfectWORK on-premise. You can change this value in developer mode. Go to Settings \u2023 Technical \u2023 Automation \u2023 Scheduled Actions and look for Mail: Fetchmail Service .","title":"How to manage inbound messages"},{"location":"01_application/01_platform/03_connect/02_email_communication/#set-up-different-dedicated-servers-for-transactional-and-mass-mails","text":"PerfectWORK is subject to a daily email limit to prevent abuse. However, if needed, you can use a separate Mail Transfer Agent (MTA) servers for transactional e-mails and mass mailings. Example: use PerfectWORK\u2019s own mail server for transactional e-mails, and Sendgrid, Amazon SES, or Mailgun for mass mailings. Another alternative is to use Postmark for transactional e-mails, and Amazon SES or Sendgrid for mass mailings. Note A default outgoing email server is already configured. You should not create an alternative one unless you want to use a specific external outgoing email server for technical reasons. To do this, you should first activate the developer mode and then go to Settings \u2023 Technical \u2023 Outgoing e-mail servers. There you have to create two e-mail MTA server settings. One for transactional e-mails and one for mass mail servers. Be sure to mark the priority of transactional e-mail servers as low as the mass email servers. Now, go to Email Marketing \u2023 Settings and enable Dedicated Server. With these settings, PerfectWORK uses the server with the lower priority for transactional emails, and the server here selected for mass mails. Note that in this case, you have to set your domain\u2019s Sender Policy Framework (SPF) records to include both transactional and mass mail servers. If your server resides with xxxx.PerfectWORK.com, the available options are Sendinblue and Mailchimp, as your e-mails would be originated from the xxxx.PerfectWORK.app domain.","title":"Set up different dedicated servers for transactional and mass mails"},{"location":"01_application/01_platform/03_connect/02_email_communication/#sending-emails-with-perfectwork","text":"","title":"Sending emails with PerfectWORK"},{"location":"01_application/01_platform/03_connect/02_email_communication/#using-your-email-domain-in-perfectwork","text":"Documents in PerfectWORK (a CRM opportunity, a sales order, an invoice \u2026) have a discussion thread, called chatter. When you post a message in the chatter, this message is sent by email to the followers of the document. If a follower replies to the message, the reply updates the chatter, and PerfectWORK relays the reply to the followers. Emails from your users to partners (customers, vendors) are sent from the email address of your users. Similarly, emails from partners to users are sent from the email address of the partners. This allows you to recognize at a glance who sent an email relayed by PerfectWORK. If your database is hosted on our cloud (PerfectWORK Online), it is not necessary to add an outgoing email server to send emails from your custom domain. You can enjoy this feature by using the default PerfectWORK email server. Important The PerfectWORK server is subject to a daily email limit to prevent abuse. The default limit is 200 emails sent per day for databases with an subscription. This limit can be increased under certain conditions. See our FAQ or contact support for more information. However, it is recommended that you configure your domain name to ensure that emails from your users reach your partners, rather than being considered spam. For the same reason, we recommend that you always give your users an email address from a domain you manage, rather than a generic email address (gmail.com, outlook.com, etc.).","title":"Using your email domain in PerfectWORK"},{"location":"01_application/01_platform/03_connect/02_email_communication/#be-spf-compliant","text":"The Sender Policy Framework (SPF) protocol allows the owner of a domain name to specify which servers are allowed to send email from that domain. When a server receives an incoming email, it checks whether the IP address of the sending server is on the list of allowed IPs according to the SPF record of the sender. Note The SPF verification is performed on the domain mentioned in the Return-Path field of the email. In the case of an email sent by PerfectWORK, this domain corresponds to the value of the mail.catchall.domain key in the database system parameters. See the documentation on incoming emails. The SPF policy of a domain is set using a TXT record. How to create or modify a TXT record depends on the provider hosting the DNS zone of your domain name. In order for the verification to work properly, each domain can only have one SPF record. If your domain name does not yet have an SPF record, the content of the record to create is as follows: v=spf1 include:_spf.PerfectWORK.com ~all If your domain name already has an SPF record, you need to update this record (and do not create a new one). Example If your TXT record is v=spf1 include:_spf.google.com ~all, you need to edit it to add include: _spf.perfectwork.app : v=spf1 include:_spf.perfectwork.app include:_spf.google.com ~~all You can check if your SPF record is valid with a free tool like MXToolbox SPF .","title":"Be SPF compliant"},{"location":"01_application/01_platform/03_connect/02_email_communication/#enable-dkim","text":"The DomainKeys Identified Mail (DKIM) allows you to authenticate your emails with a digital signature. When sending an email, the PerfectWORK server includes a unique DKIM signature in the headers. The recipient\u2019s server decrypts this signature using the DKIM record in your domain name. If the signature and the key contained in the record match, this guarantees that your message is authentic and has not been altered during transport. To enable DKIM, you must add a CNAME record to the DNS zone of your domain name: PerfectWORK._domainkey IN CNAME PerfectWORK._domainkey.PerfectWORK.app. Tip If your domain name is mycompany.com, you need to create a subdomain PerfectWORK._domainkey.mycompany.com whose canonical name is PerfectWORK._domainkey.PerfectWORK.app. How to create or modify a CNAME record depends on the provider hosting the DNS zone of your domain name. The most common providers are list below. You can check if your DKIM record is valid with a free tool like DKIM Core. If a selector is asked, enter PerfectWORK.","title":"Enable DKIM"},{"location":"01_application/01_platform/03_connect/02_email_communication/#check-your-dmarc-policy","text":"The Domain-based Message Authentication, Reporting & Conformance (DMARC) is a protocol that unifies SPF and DKIM. The instructions contained in the DMARC record of a domain name tell the destination server what to do with an incoming email that fails the SPF and/or DKIM check. There are three DMARC policies: - p=none - p=quarantine - p=reject p=quarantine and p=reject instruct the server that receives an email to quarantine that email or ignore it if the SPF and/or DKIM check fails. If your domain name uses DMARC and has defined one of these policies, it is therefore imperative to be SPF compliant or to enable DKIM. Danger Yahoo or AOL are examples of email providers with a DMARC policy set to p=reject. We strongly advise against using an @yahoo .com or @aol .com address for your users. These emails will never reach their recipient. p=none is used for the domain owner to receive reports about entities using their domain. It should not impact the deliverability if the DMARC check fails. You can check the DMARC record of a domain name with a tool like MXToolbox DMARC . If one of your partners, customer or vendor, uses DMARC and has defined one of these policies, the PerfectWORK server cannot relay emails from this partner to your users. You need to handle user notifications in PerfectWORK, or replace the email address of the partner with a default email address.","title":"Check your DMARC policy"},{"location":"01_application/01_platform/03_connect/02_email_communication/#use-a-default-email-address","text":"To force the email address from which emails are sent, you need to create the following key in the System Parameters of the database: If mail.default.from is set, and contains a full email address, all outgoing emails are sent from the given address. This is a requirement to use Outlook with PerfectWORK. You access the System Parameters in developer mode in the Settings \u2023 Technical \u2023 Parameters \u2023 System Parameters menu.","title":"Use a default email address"},{"location":"01_application/01_platform/03_connect/02_email_communication/#email-templates","text":"We all know writing good emails is vital to get a high response rate, but you do not want to rewrite the same structure every time, do you? That is where email templates come in. Without the need to rewrite the entire email structure every time, you save time to focus on the content. Multiple templates also let you deliver the right message to the right audience, improving their overall experience with the company. Note The email templates use QWeb. The composer allows you to edit emails in their final rendering, making customizations more robust as you don\u2019t have to edit code.","title":"Email Templates"},{"location":"01_application/01_platform/03_connect/02_email_communication/#defining-a-default-reply-to-on-your-mail-template","text":"Although the field reply to is available within the mail templates, this field is only used for mass mailing mode (this means when sending templates on what we call bulk emailing). You can send emails in bulk in almost every app that has a list view. Select the records you want and click on the action button. If you have an option to send an email, you will see a mail composer with possible values to define: You can also define them by default on the template: Because of this, setting a value in this field is useless as the value defined will be totally ignored. The default reply-to value is the default catchall email address to ensure a communication between your customer and your PerfectWORK database. For more information about the way the catchall works, please check how to manage inbound messages.","title":"Defining a default reply to on your mail template"},{"location":"01_application/01_platform/03_connect/02_email_communication/#transactional-emails-and-corresponding-url-for-each-company","text":"When using PerfectWORK, multiple events trigger the sending of automated emails. These emails are known as transactional emails and sometimes contain links pointing to your PerfectWORK database. By default, links generated by the database use the dynamic web.base.url key defined in the system parameters. More information about this parameter. If the website application isn\u2019t installed, the web.base.url key will always be the default parameter used to generate all the links. It\u2019s important to know that this key can only have a single value, meaning that in a multi-website/company database environment, even if you have a specific domain name for each website, the links generated to share a document or within a transactional email might remain the same, whatever the website/company related to the sending of the email/document. This is not always the case as some PerfectWORK applications have a link established in the database with the website application, meaning that in this case, if a specific domain is defined for the websites, the URL generated in the email template will use the domain defined on the corresponding website of the company. Caution A document shared using the documents application will always use the web.base.url key, as the document shared isn\u2019t associated with any particular website. Meaning that the URL will always be the same (the web.base.url key value), whatever the company it\u2019s shared from, this is a known limitation! On the other hand, sales orders made by a customer on one of your PerfectWORK e-commerce websites have a link established with the website from which the order was made. As a result, the e-mail sent for the sales orders uses the domain name defined for the corresponding website to generate the links. For more information about how to configure your domains, we invite you to check our domain name documentation.","title":"Transactional emails and corresponding URL for each company"},{"location":"01_application/01_platform/03_connect/02_email_communication/#updating-translations-within-email-templates","text":"Email templates are automatically translated. Changing the translations shouldn\u2019t be necessary. However, if for a specific reason you\u2019d like to change some of the translations, this can be done. Like any modification in the code, keep in mind that modifications that aren\u2019t done correctly (for example modifications leading to bad syntax) can break the template, as a result, the template will appear blank. In order to edit your translations, follow these steps from the template. Click on the edit button, then on the language button Edit the language of a template A pop-up window with the different languages installed on the database will be displayed. From here, editing the translations will be possible. Don\u2019t forget to hit the save button to preserve your changes.","title":"Updating translations within email templates"},{"location":"01_application/01_platform/03_connect/02_email_communication/#faq","text":"This document contains an explanation of the most recurring mailing concerns. We will start by addressing issues of outgoing emails (ex: my client has not received my email), and then, of incoming emails (ex: I do not receive responses from my customers in the database).","title":"FAQ"},{"location":"01_application/01_platform/03_connect/02_email_communication/#outgoing-emails","text":"","title":"Outgoing emails"},{"location":"01_application/01_platform/03_connect/02_email_communication/#what-do-you-have-to-check-if-your-email-is-not-sent","text":"The first indicator showing you that the email has not been sent is the red envelope next to the date and time of the message.","title":"What do you have to check if your email is not sent?"},{"location":"01_application/01_platform/03_connect/02_email_communication/#common-error-messages","text":"You reached your daily limit: Warning in PerfectWORK upon email limit reached Each email service provider has its own email sending limits. The limits may be daily, hourly, and sometimes even per minute. This is the same for PerfectWORK, we have to limit our customers to prevent our e-mail servers from being blacklisted. Here are the default limits for new databases: 200 emails/day for PerfectWORK Online and PerfectWORK.sh databases with an active subscription, 50 emails/day for one-app free and trial databases, in case of migration, your daily limit might be reset to 50 emails a day. In case you hit the limit, you can: Ask our support team to increase your daily limit. We will analyze the situation of your database depending on (non-exhaustive list): How many users in your database, Which apps are installed, Your bounce rate: the percentage of email addresses that did not receive your emails because it was returned by a mail server on its way to the final recipient. You can contact the support. Use your own outgoing email server to be independent of PerfectWORK\u2019s mail limit (please refer to the corresponding documentation), Wait until 11pm UTC for the reset and click on the retry button: The Developer mode must be activated. Then, go to Settings \u2023 Technical \u2023 Emails Warning The daily limit is global to your database and can rise quickly! By default an internal message, a notification, a note, etc. counts as an email in your daily limit if it notifies someone. You can mitigate this by receiving your notifications in PerfectWORK instead of by emails.","title":"Common error messages"},{"location":"01_application/01_platform/03_connect/02_email_communication/#smtp-error","text":"You can find out why an email wasn\u2019t transmitted successfully by reviewing the Simple Mail Transport Protocol (SMTP) error messages. SMTP is a protocol to describe the email structure and transmit it over the Internet, and the error messages generated by email services are helpful tools to diagnose and troubleshoot email problems.","title":"SMTP Error"},{"location":"01_application/01_platform/03_connect/02_email_communication/#no-error","text":"PerfectWORK is not always capable of providing information for the reason it failed. The different providers implement a personalized policy of the bounce emails and it is not always possible for PerfectWORK to interpret it correctly. If you have this problem on a recurring basis with the same client or the same domain, please do not hesitate to contact PerfectWORK Support for help in finding a reason. Note: in such case, one of the most common reasons is related to SPF and/or DKIM configuration.","title":"No Error"},{"location":"01_application/01_platform/03_connect/02_email_communication/#why-is-my-email-sent-late","text":"It may happen that you schedule an email campaign but it is not sent on time. We know that we use a delayed job to send emails that we consider as not urgent (Newsletters concept such as mass mailing, marketing automation, events). The system utility cron can be used to schedule programs to run automatically at predetermined intervals. We use that policy in order to avoid cluttering the mail servers and prioritize the communication. The emails considered urgent (communication from one person to another one such as Sales Orders, Invoices, Purchase Orders, etc.) are sent directly. By default, the Mass Mailing cron runs every 60 minutes. So, you should wait maximum an hour before the campaign is actually sent.","title":"Why is my email sent late?"},{"location":"01_application/01_platform/03_connect/02_email_communication/#incoming-emails","text":"When you have an issue with incoming emails, there might not be an indication per se in PerfectWORK. This is the client who tries to contact a database who will get a bounce (most of the time 550: mailbox unavailable).","title":"Incoming emails"},{"location":"01_application/01_platform/03_connect/02_email_communication/#emails-are-not-received","text":"Depending on the platform you are using:","title":"Emails are not received"},{"location":"01_application/01_platform/03_connect/02_email_communication/#get-help-from-support","text":"In order to get helped efficiently, please provide as much information as possible. Here is a list of what can be helpful: The EML of the email, stating for Electronic Mail, is the file format containing all the technical information required for an investigation. The documentation of your own email provider might help you on how to get your EML files. Once you get the EML of the email, adding it in the attachment of your ticket is the most efficient way for us to investigate. The support will mainly focus on redundant issues. The exact flow you are following in order to normally receive those emails in PerfectWORK. Here are examples of questions whose answers can be useful: Is this simply a reply from an email going out from PerfectWORK ? Are you using an incoming email server or somehow redirecting? Can you provide us with an example of an email that has been correctly forwarded ? Providing answers to the following questions: Is it a generic issue or is it specific to a use case? If yes, which one exactly? Is it working as expected? In case the email is sent using PerfectWORK, the bounce email should reach the PerfectWORK database and display the red envelope.","title":"Get help from support"},{"location":"01_application/01_platform/10_apps_integration/03_modules/","text":"Installing or uninstalling apps and managing users is up to you. As the administrator of your database, you are responsible for its usage, as you know best how your organization works. PerfectWORK apps have dependencies . Installing some apps and features with dependencies may also install additional apps and modules that are technically required, even if you won\u2019t actively use them. Test app installation/removal on a duplicate of your database . This way, you can know what app dependencies may be required or what data may be erased.","title":"Application & Modules"},{"location":"01_application/01_platform/10_apps_integration/05_authentication/","text":"Authentication \u00b6 Google Sign-in \u00b6 OAuth Authentication \u00b6 LDAP Authentication \u00b6 Two-Factor Authentication \u00b6","title":"Authentication"},{"location":"01_application/01_platform/10_apps_integration/05_authentication/#authentication","text":"","title":"Authentication"},{"location":"01_application/01_platform/10_apps_integration/05_authentication/#google-sign-in","text":"","title":"Google Sign-in"},{"location":"01_application/01_platform/10_apps_integration/05_authentication/#oauth-authentication","text":"","title":"OAuth Authentication"},{"location":"01_application/01_platform/10_apps_integration/05_authentication/#ldap-authentication","text":"","title":"LDAP Authentication"},{"location":"01_application/01_platform/10_apps_integration/05_authentication/#two-factor-authentication","text":"","title":"Two-Factor Authentication"},{"location":"01_application/01_platform/10_apps_integration/06_google/","text":"Working with Google Application \u00b6 Using Unsplash Image Library \u00b6","title":"Google"},{"location":"01_application/01_platform/10_apps_integration/06_google/#working-with-google-application","text":"","title":"Working with Google Application"},{"location":"01_application/01_platform/10_apps_integration/06_google/#using-unsplash-image-library","text":"","title":"Using Unsplash Image Library"},{"location":"01_application/01_platform/10_apps_integration/07_unsplash/","text":"Working with Google Application \u00b6 Using Unsplash Image Library \u00b6","title":"Unsplash"},{"location":"01_application/01_platform/10_apps_integration/07_unsplash/#working-with-google-application","text":"","title":"Working with Google Application"},{"location":"01_application/01_platform/10_apps_integration/07_unsplash/#using-unsplash-image-library","text":"","title":"Using Unsplash Image Library"},{"location":"01_application/02_finance/","text":"Getting Started Accounts Receivable Accounts Payable Bank & Cash Taxation Reporting MIS Report Writer Accounts Budgeting Enterprise Asset Management Inventory Additional Features Fiscal Localization","title":"Financial & Accounting"},{"location":"01_application/02_finance/01_getting_started/","text":"PerfectWORK Invoicing is a standalone invoicing app to create invoices, send them to your customers, and manage payments. PerfectWORK Accounting is a full featured accounting app. Accountant productivity is at the core of its development with features such as AI-powered invoice recognition, synchronization with your bank accounts, smart matching suggestions, etc.","title":"Getting Started"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/","text":"Double Book Entry System \u00b6 PerfectWORK automatically creates all the behind-the-scenes journal entries for each of your accounting transactions: customer invoices, point of sale order, expenses, inventory moves, etc. PerfectWORK uses the rules of double-entry bookkeeping system: all journal entries are automatically balanced (sum of debits = sum of credits). Accrual and Cash Basis Methods \u00b6 PerfectWORK supports both accrual and cash basis reporting. This allows you to report income / expense at the time transactions occur (i.e., accrual basis), or when payment is made or received (i.e., cash basis). Multiple Companies \u00b6 PerfectWORK allows one to manage several companies within the same database. Each company has its own chart of accounts and rules. You can get consolidation reports following your consolidation rules. Users can access several companies but always work in one company at a time. Multi-currencies \u00b6 Every transaction is recorded in the default currency of the company. For transactions occurring in another currency, PerfectWORK stores both the value in the currency of the company and the value in the currency of the transaction. PerfectWORK can generate currencies gains and losses after the reconciliation of the journal items. Currency rates are updated once a day using a yahoo.com online web-service. International Standards \u00b6 PerfectWORK accounting supports more than 50 countries. The PerfectWORK core accounting implements accounting standards that are common to all countries. Specific modules exist per country for the specificities of the country like the chart of accounts, taxes, or bank interfaces. In particular, PerfectWORK\u2019s core accounting engine supports: Anglo-Saxon Accounting (U.S., U.K.,, and other English-speaking countries including Ireland, Canada, Australia, and New Zealand) where costs of good sold are reported when products are sold/delivered. European accounting where expenses are accounted at the supplier bill. PerfectWORK has modules to comply with IFRS rules. Accounts Receivable and Payable \u00b6 By default, PerfectWORK uses a single account for all account receivable entries and one for all accounts payable entries. You can create separate accounts per customers/suppliers, but you don\u2019t need to. As transactions are associated to customers or suppliers, you get reports to perform analysis per customer/supplier such as the customer statement, revenues per customers, aged receivable/payables, \u2026 Wide range of financial reports \u00b6 In PerfectWORK, you can generate financial reports in real time. PerfectWORK\u2019s reports range from basic accounting reports to advanced management reports. PerfectWORK\u2019s reports include: Performance reports (such as Profit and Loss, Budget Variance) Position reports (such as Balance Sheet, Aged Payables, Aged Receivables) Cash reports (such as Bank Summary) Detail reports (such as Trial Balance and General Ledger) Management reports (such as Budgets, Executive Summary) PerfectWORK\u2019s report engine allows you to customize your own report based on your own formulae. Import bank feeds automatically \u00b6 Bank reconciliation is a process that matches your bank statement lines, as supplied by the bank, to your accounting transactions in the general ledger. PerfectWORK makes bank reconciliation easy by frequently importing bank statement lines from your bank directly into your PerfectWORK account. This means you can have a daily view of your cashflow without having to log into your online banking or wait for your paper bank statements. PerfectWORK speeds up bank reconciliation by matching most of your imported bank statement lines to your accounting transactions. PerfectWORK also remembers how you\u2019ve treated other bank statement lines and provides suggested general ledger transactions. Calculate the tax you owe your tax authority \u00b6 PerfectWORK totals all your accounting transactions for your tax period and uses these totals to calculate your tax obligation. You can then check your sales tax by running PerfectWORK\u2019s Tax Report. Inventory Valuation \u00b6 PerfectWORK support both periodic (manual) and perpetual (automated) inventory valuations. The available methods are standard price, average price, LIFO (for countries allowing it) and FIFO. See Also View impact of the valuation method on your transactions Easy retained earnings \u00b6 Retained earnings are the portion of income retained by your business. PerfectWORK automatically calculates your current year earnings in real time so no year-end journal or rollover is required. This is calculated by reporting the profit and loss balance to your balance sheet report automatically.","title":"Main Accounting Concepts"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/#double-book-entry-system","text":"PerfectWORK automatically creates all the behind-the-scenes journal entries for each of your accounting transactions: customer invoices, point of sale order, expenses, inventory moves, etc. PerfectWORK uses the rules of double-entry bookkeeping system: all journal entries are automatically balanced (sum of debits = sum of credits).","title":"Double Book Entry System"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/#accrual-and-cash-basis-methods","text":"PerfectWORK supports both accrual and cash basis reporting. This allows you to report income / expense at the time transactions occur (i.e., accrual basis), or when payment is made or received (i.e., cash basis).","title":"Accrual and Cash Basis Methods"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/#multiple-companies","text":"PerfectWORK allows one to manage several companies within the same database. Each company has its own chart of accounts and rules. You can get consolidation reports following your consolidation rules. Users can access several companies but always work in one company at a time.","title":"Multiple Companies"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/#multi-currencies","text":"Every transaction is recorded in the default currency of the company. For transactions occurring in another currency, PerfectWORK stores both the value in the currency of the company and the value in the currency of the transaction. PerfectWORK can generate currencies gains and losses after the reconciliation of the journal items. Currency rates are updated once a day using a yahoo.com online web-service.","title":"Multi-currencies"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/#international-standards","text":"PerfectWORK accounting supports more than 50 countries. The PerfectWORK core accounting implements accounting standards that are common to all countries. Specific modules exist per country for the specificities of the country like the chart of accounts, taxes, or bank interfaces. In particular, PerfectWORK\u2019s core accounting engine supports: Anglo-Saxon Accounting (U.S., U.K.,, and other English-speaking countries including Ireland, Canada, Australia, and New Zealand) where costs of good sold are reported when products are sold/delivered. European accounting where expenses are accounted at the supplier bill. PerfectWORK has modules to comply with IFRS rules.","title":"International Standards"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/#accounts-receivable-and-payable","text":"By default, PerfectWORK uses a single account for all account receivable entries and one for all accounts payable entries. You can create separate accounts per customers/suppliers, but you don\u2019t need to. As transactions are associated to customers or suppliers, you get reports to perform analysis per customer/supplier such as the customer statement, revenues per customers, aged receivable/payables, \u2026","title":"Accounts Receivable and Payable"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/#wide-range-of-financial-reports","text":"In PerfectWORK, you can generate financial reports in real time. PerfectWORK\u2019s reports range from basic accounting reports to advanced management reports. PerfectWORK\u2019s reports include: Performance reports (such as Profit and Loss, Budget Variance) Position reports (such as Balance Sheet, Aged Payables, Aged Receivables) Cash reports (such as Bank Summary) Detail reports (such as Trial Balance and General Ledger) Management reports (such as Budgets, Executive Summary) PerfectWORK\u2019s report engine allows you to customize your own report based on your own formulae.","title":"Wide range of financial reports"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/#import-bank-feeds-automatically","text":"Bank reconciliation is a process that matches your bank statement lines, as supplied by the bank, to your accounting transactions in the general ledger. PerfectWORK makes bank reconciliation easy by frequently importing bank statement lines from your bank directly into your PerfectWORK account. This means you can have a daily view of your cashflow without having to log into your online banking or wait for your paper bank statements. PerfectWORK speeds up bank reconciliation by matching most of your imported bank statement lines to your accounting transactions. PerfectWORK also remembers how you\u2019ve treated other bank statement lines and provides suggested general ledger transactions.","title":"Import bank feeds automatically"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/#calculate-the-tax-you-owe-your-tax-authority","text":"PerfectWORK totals all your accounting transactions for your tax period and uses these totals to calculate your tax obligation. You can then check your sales tax by running PerfectWORK\u2019s Tax Report.","title":"Calculate the tax you owe your tax authority"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/#inventory-valuation","text":"PerfectWORK support both periodic (manual) and perpetual (automated) inventory valuations. The available methods are standard price, average price, LIFO (for countries allowing it) and FIFO. See Also View impact of the valuation method on your transactions","title":"Inventory Valuation"},{"location":"01_application/02_finance/01_getting_started/01_accounting_concept/#easy-retained-earnings","text":"Retained earnings are the portion of income retained by your business. PerfectWORK automatically calculates your current year earnings in real time so no year-end journal or rollover is required. This is calculated by reporting the profit and loss balance to your balance sheet report automatically.","title":"Easy retained earnings"},{"location":"01_application/02_finance/01_getting_started/02_configuration/01_initial_setup/","text":"When you first open your PerfectWORK Accounting app, the Accounting Overview page welcomes you with a step-by-step onboarding banner, a wizard that helps you get started. This onboarding banner is displayed until you choose to close it. The settings visible in the onboarding banner can still be modified later by going to Accounting \u2023 Configuration \u2023 Settings8 . Note PerfectWORK Accounting automatically installs the appropriate Fiscal Localization Package for your company, according to the country selected at the creation of the database. This way, the right accounts, reports, and taxes are ready-to-go. Click here for more information about Fiscal Localization Packages. Accounting onboarding banner \u00b6 The step-by-step Accounting onboarding banner is composed of four steps: 1. Company Data 2. Bank Account 3. Accounting Periods 4. Chart of Accounts Company Data \u00b6 This menu allows you to add your company\u2019s details such as the name, address, logo, website, phone number, email address, and Tax ID, or VAT number. These details are then displayed on your documents, such as on invoices. Note You can also change these settings by going to Settings \u2023 General Settings \u2023 Settings \u2023 Companies and clicking on Update Info. Bank Account \u00b6 Connect your bank account to your database and have your bank statements synced automatically. To do so, find your bank in the list, click on Connect, and follow the instructions on-screen. If your Bank Institution can\u2019t be synchronized automatically, or if you prefer not to sync it with your database, you may also configure your bank account manually by clicking on Create it, and filling out the form. Name : the bank account\u2019s name, as displayed on PerfectWORK. Account Number : your bank account number (IBAN in Europe). Bank : click on Create and Edit to configure the bank\u2019s details. Add the bank institution\u2019s name and its Identifier Code (BIC or SWIFT). Code : this code is your Journal\u2019s Short Code, as displayed on PerfectWORK. By default, PerfectWORK creates a new Journal with this Short Code. Journal : This field is displayed if you have an existing Bank Journal that is not linked yet to a bank account. If so, then select the Journal you want to use to record the financial transactions linked to this bank account or create a new one by clicking on Create and Edit . Note You can add as many bank accounts as needed with this tool by going to Accounting \u2023 Configuration , and clicking on Add a Bank Account . Click here for more information about Bank Accounts. Accounting Periods \u00b6 Define here your Fiscal Years \u2019 opening and closing dates, which are used to generate reports automatically, and your Tax Return Periodicity , along with a reminder to never miss a tax return deadline. By default, the opening date is set on the 1 st of January and the closing date on the 31 st of December, as this is the most common use. Note You can also change these settings by going to Accounting \u2023 Configuration \u2023 Settings \u2023 Fiscal Periods and updating the values. Chart of Accounts \u00b6 With this menu, you can add accounts to your Chart of Accounts and indicate their initial opening balances. Basic settings are displayed on this page to help you review your Chart of Accounts. To access all the settings of an account, click on the double arrow button at the end of the line. Note Click here for more information on how to configure your Chart of Accounts. Invoicing onboarding banner \u00b6 There is another step-by-step onboarding banner that helps you take advantage of your PerfectWORK Invoicing and Accounting apps. The Invoicing onboarding banner is the one that welcomes you if you use the Invoicing app rather than the Accounting app. If you have PerfectWORK Accounting installed on your database, you can reach it by going to Accounting \u2023 Customers \u2023 Invoices . The Invoicing onboarding banner is composed of four main steps: 1. Company Data 2. Invoice Layout 3. Payment Method 4. Sample Invoice Company Data \u00b6 This form is the same as the one presented in the Accounting onboarding banner . Invoice Layout \u00b6 With this tool, you can design the appearance of your documents by selecting which layout template, paper format, colors, font, and logo you want to use. You can also add your Company Tagline and the content of the documents\u2019 footer. Note that PerfectWORK automatically adds the company\u2019s phone number, email, website URL, and Tax ID (or VAT number) to the footer, according to the values you previously configured in the Company Data . Tip Add your bank account number and a link to your General Terms & Condition in the footer. This way, your contacts can find the full content of your GT&C online without having to print them on the invoices you issue. Note These settings can also be modified by going to Settings \u2023 General Settings, under the Business Documents section. Payment Method \u00b6 This menu helps you configure the payment methods with which your customers can pay you. Important Configuring a Payment Acquirer with this tool also activates the Invoice Online Payment option automatically. With this, users can directly pay online, from their Customer Portal. Sample Invoice \u00b6 Send yourself a sample invoice by email to make sure everything is correctly configured.","title":"Initial Setup of PerfectWORK Accounting"},{"location":"01_application/02_finance/01_getting_started/02_configuration/01_initial_setup/#accounting-onboarding-banner","text":"The step-by-step Accounting onboarding banner is composed of four steps: 1. Company Data 2. Bank Account 3. Accounting Periods 4. Chart of Accounts","title":"Accounting onboarding banner"},{"location":"01_application/02_finance/01_getting_started/02_configuration/01_initial_setup/#company-data","text":"This menu allows you to add your company\u2019s details such as the name, address, logo, website, phone number, email address, and Tax ID, or VAT number. These details are then displayed on your documents, such as on invoices. Note You can also change these settings by going to Settings \u2023 General Settings \u2023 Settings \u2023 Companies and clicking on Update Info.","title":"Company Data"},{"location":"01_application/02_finance/01_getting_started/02_configuration/01_initial_setup/#bank-account","text":"Connect your bank account to your database and have your bank statements synced automatically. To do so, find your bank in the list, click on Connect, and follow the instructions on-screen. If your Bank Institution can\u2019t be synchronized automatically, or if you prefer not to sync it with your database, you may also configure your bank account manually by clicking on Create it, and filling out the form. Name : the bank account\u2019s name, as displayed on PerfectWORK. Account Number : your bank account number (IBAN in Europe). Bank : click on Create and Edit to configure the bank\u2019s details. Add the bank institution\u2019s name and its Identifier Code (BIC or SWIFT). Code : this code is your Journal\u2019s Short Code, as displayed on PerfectWORK. By default, PerfectWORK creates a new Journal with this Short Code. Journal : This field is displayed if you have an existing Bank Journal that is not linked yet to a bank account. If so, then select the Journal you want to use to record the financial transactions linked to this bank account or create a new one by clicking on Create and Edit . Note You can add as many bank accounts as needed with this tool by going to Accounting \u2023 Configuration , and clicking on Add a Bank Account . Click here for more information about Bank Accounts.","title":"Bank Account"},{"location":"01_application/02_finance/01_getting_started/02_configuration/01_initial_setup/#accounting-periods","text":"Define here your Fiscal Years \u2019 opening and closing dates, which are used to generate reports automatically, and your Tax Return Periodicity , along with a reminder to never miss a tax return deadline. By default, the opening date is set on the 1 st of January and the closing date on the 31 st of December, as this is the most common use. Note You can also change these settings by going to Accounting \u2023 Configuration \u2023 Settings \u2023 Fiscal Periods and updating the values.","title":"Accounting Periods"},{"location":"01_application/02_finance/01_getting_started/02_configuration/01_initial_setup/#chart-of-accounts","text":"With this menu, you can add accounts to your Chart of Accounts and indicate their initial opening balances. Basic settings are displayed on this page to help you review your Chart of Accounts. To access all the settings of an account, click on the double arrow button at the end of the line. Note Click here for more information on how to configure your Chart of Accounts.","title":"Chart of Accounts"},{"location":"01_application/02_finance/01_getting_started/02_configuration/01_initial_setup/#invoicing-onboarding-banner","text":"There is another step-by-step onboarding banner that helps you take advantage of your PerfectWORK Invoicing and Accounting apps. The Invoicing onboarding banner is the one that welcomes you if you use the Invoicing app rather than the Accounting app. If you have PerfectWORK Accounting installed on your database, you can reach it by going to Accounting \u2023 Customers \u2023 Invoices . The Invoicing onboarding banner is composed of four main steps: 1. Company Data 2. Invoice Layout 3. Payment Method 4. Sample Invoice","title":"Invoicing onboarding banner"},{"location":"01_application/02_finance/01_getting_started/02_configuration/01_initial_setup/#company-data_1","text":"This form is the same as the one presented in the Accounting onboarding banner .","title":"Company Data"},{"location":"01_application/02_finance/01_getting_started/02_configuration/01_initial_setup/#invoice-layout","text":"With this tool, you can design the appearance of your documents by selecting which layout template, paper format, colors, font, and logo you want to use. You can also add your Company Tagline and the content of the documents\u2019 footer. Note that PerfectWORK automatically adds the company\u2019s phone number, email, website URL, and Tax ID (or VAT number) to the footer, according to the values you previously configured in the Company Data . Tip Add your bank account number and a link to your General Terms & Condition in the footer. This way, your contacts can find the full content of your GT&C online without having to print them on the invoices you issue. Note These settings can also be modified by going to Settings \u2023 General Settings, under the Business Documents section.","title":"Invoice Layout"},{"location":"01_application/02_finance/01_getting_started/02_configuration/01_initial_setup/#payment-method","text":"This menu helps you configure the payment methods with which your customers can pay you. Important Configuring a Payment Acquirer with this tool also activates the Invoice Online Payment option automatically. With this, users can directly pay online, from their Customer Portal.","title":"Payment Method"},{"location":"01_application/02_finance/01_getting_started/02_configuration/01_initial_setup/#sample-invoice","text":"Send yourself a sample invoice by email to make sure everything is correctly configured.","title":"Sample Invoice"},{"location":"01_application/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/","text":"The Chart of Accounts (COA) is the list of all the accounts used to record financial transactions in the general ledger of an organization. The accounts are usually listed in the order of appearance in the financial reports. Most of the time, they are listed as follows : Balance Sheet accounts Assets Liabilities Equity Profit & Loss Income Expense When browsing your Chart of Accounts, you can filter the accounts by number, in the left column, and also group them by Account Type. Configuration of an Account \u00b6 The country you select at the creation of your database (or additional company on your database) determines which Fiscal Localization Package is installed by default. This package includes a standard Chart of Accounts already configured according to the country\u2019s regulations. You can use it directly or set it according to your company\u2019s needs. Warning It is not possible to modify the Fiscal Localization of a company once a Journal Entry has been posted. To create a new account, go to Accounting \u2023 Configuration \u2023 Chart of Accounts , click on Create , and fill out the form. Code and Name \u00b6 Each account is identified by its Code and Name, which also indicates the account\u2019s purpose. Type \u00b6 Configuring correctly the Account Type is critical as it serves multiple purposes: Information on the account\u2019s purpose and behavior Generate country-specific legal and financial reports Set the rules to close a fiscal year Generate opening entries To configure an account type, open the Type field\u2019s drop-down selector and select the right type among the following list: Method Description Account Types Balance Sheet Assets Receivables Bank and Cash Current Assets Non Current Assets Prepayments Fixed Assets Liabilities Payable Credit Card Current Liabilities Non Current Liabilities Profit & Loss Income Income Other Income Expense Expense Depreciation Cost of Revenue Other Other Off-Balance Sheet Assets, Deferred Expenses, and Deferred Revenues Automation \u00b6 Some Account Types display a new field to automate the creation of Assets entries, Deferred Expenses entries , and Deferred Revenues entries. You have three choices for the Automation field: 1. No : this is the default value. Nothing happens. 2. Create in draft : whenever a transaction is posted on the account, a draft entry is created, but not validated. You must first fill out the corresponding form. 3. Create and validate : you must also select a Model. Whenever a transaction is posted on the account, an entry is created and immediately validated. Default Taxes \u00b6 Select a default tax that will be applied when this account is chosen for a product sale or purchase. Tags \u00b6 Some accounting reports require tags to be set on the relevant accounts. By default, you can choose among the tags that are used by the Cash Flow Statement. Account Groups \u00b6 Account Groups are useful to list multiple accounts as sub-accounts of a bigger account and thus consolidate reports such as the Trial Balance . To create a new Account Group, open the account you want to configure as sub-account, click on the Group drop-down selector, select Create and Edit\u2026, fill out the form, and save. Next, set all the sub-accounts with the right Account Group. To display your Trial Balance report with your Account Groups, go to Accounting \u2023 Reporting \u2023 Trial Balance , then open the Options menu and select Hierarchy and Subtotals . Allow Reconciliation \u00b6 Some accounts, such as accounts made to record the transactions of a payment method, can be used for the reconciliation of journal entries. For example, an invoice paid with a credit card can be marked as paid if reconciled with the payment. Therefore, the account used to record credit card payments needs to be configured as allowing reconciliation. To do so, check the Allow Reconciliation box and save. Deprecated \u00b6 It is not possible to delete an account once a transaction has been recorded on it. You can make them unusable by using the Deprecated feature. To do so, check the Deprecated box and save. See also Non-current Assets and Fixed Assets Deferred Expenses and Prepayments Deferred Revenues Fiscal Localization Packages","title":"Chart of Accounts"},{"location":"01_application/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#configuration-of-an-account","text":"The country you select at the creation of your database (or additional company on your database) determines which Fiscal Localization Package is installed by default. This package includes a standard Chart of Accounts already configured according to the country\u2019s regulations. You can use it directly or set it according to your company\u2019s needs. Warning It is not possible to modify the Fiscal Localization of a company once a Journal Entry has been posted. To create a new account, go to Accounting \u2023 Configuration \u2023 Chart of Accounts , click on Create , and fill out the form.","title":"Configuration of an Account"},{"location":"01_application/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#code-and-name","text":"Each account is identified by its Code and Name, which also indicates the account\u2019s purpose.","title":"Code and Name"},{"location":"01_application/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#type","text":"Configuring correctly the Account Type is critical as it serves multiple purposes: Information on the account\u2019s purpose and behavior Generate country-specific legal and financial reports Set the rules to close a fiscal year Generate opening entries To configure an account type, open the Type field\u2019s drop-down selector and select the right type among the following list: Method Description Account Types Balance Sheet Assets Receivables Bank and Cash Current Assets Non Current Assets Prepayments Fixed Assets Liabilities Payable Credit Card Current Liabilities Non Current Liabilities Profit & Loss Income Income Other Income Expense Expense Depreciation Cost of Revenue Other Other Off-Balance Sheet","title":"Type"},{"location":"01_application/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#assets-deferred-expenses-and-deferred-revenues-automation","text":"Some Account Types display a new field to automate the creation of Assets entries, Deferred Expenses entries , and Deferred Revenues entries. You have three choices for the Automation field: 1. No : this is the default value. Nothing happens. 2. Create in draft : whenever a transaction is posted on the account, a draft entry is created, but not validated. You must first fill out the corresponding form. 3. Create and validate : you must also select a Model. Whenever a transaction is posted on the account, an entry is created and immediately validated.","title":"Assets, Deferred Expenses, and Deferred Revenues Automation"},{"location":"01_application/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#default-taxes","text":"Select a default tax that will be applied when this account is chosen for a product sale or purchase.","title":"Default Taxes"},{"location":"01_application/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#tags","text":"Some accounting reports require tags to be set on the relevant accounts. By default, you can choose among the tags that are used by the Cash Flow Statement.","title":"Tags"},{"location":"01_application/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#account-groups","text":"Account Groups are useful to list multiple accounts as sub-accounts of a bigger account and thus consolidate reports such as the Trial Balance . To create a new Account Group, open the account you want to configure as sub-account, click on the Group drop-down selector, select Create and Edit\u2026, fill out the form, and save. Next, set all the sub-accounts with the right Account Group. To display your Trial Balance report with your Account Groups, go to Accounting \u2023 Reporting \u2023 Trial Balance , then open the Options menu and select Hierarchy and Subtotals .","title":"Account Groups"},{"location":"01_application/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#allow-reconciliation","text":"Some accounts, such as accounts made to record the transactions of a payment method, can be used for the reconciliation of journal entries. For example, an invoice paid with a credit card can be marked as paid if reconciled with the payment. Therefore, the account used to record credit card payments needs to be configured as allowing reconciliation. To do so, check the Allow Reconciliation box and save.","title":"Allow Reconciliation"},{"location":"01_application/02_finance/01_getting_started/02_configuration/02_chart_of_accounts/#deprecated","text":"It is not possible to delete an account once a transaction has been recorded on it. You can make them unusable by using the Deprecated feature. To do so, check the Deprecated box and save. See also Non-current Assets and Fixed Assets Deferred Expenses and Prepayments Deferred Revenues Fiscal Localization Packages","title":"Deprecated"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/","text":"PerfectWORK supports multiple invoicing and payment workflows, so you can choose and use the ones that match your business needs. Whether you want to accept a single payment for a single invoice, or process a payment spanning multiple invoices and taking discounts for early payments, you can do so efficiently and accurately. From Draft Invoice to Profit and Loss \u00b6 If we pick up at the end of a typical \u2018order to cash\u2019 scenario, after the goods have been shipped, you will: issue an invoice; receive payment; deposit that payment at the bank; make sure the Customer Invoice is closed; follow up if Customers are late; and finally present your Income on the Profit and Loss report and show the decrease in Assets on the Balance Sheet report. Invoicing in most countries occurs when a contractual obligation is met. If you ship a box to a customer, you have met the terms of the contract and can bill them. If your supplier sends you a shipment, they have met the terms of that contract and can bill you. Therefore, the terms of the contract is fulfilled when the box moves to or from the truck. At this point, PerfectWORK supports the creation of what is called a Draft Invoice by Warehouse staff. Invoice creation \u00b6 Draft invoices can be manually generated from other documents such as Sales Orders, Purchase Orders,etc. Although you can create a draft invoice directly if you would like. An invoice must be provided to the customer with the necessary information in order for them to pay for the goods and services ordered and delivered. It must also include other information needed to pay the invoice in a timely and precise manner. Draft invoices \u00b6 The system generates invoice which are initially set to the Draft state. While these invoices remain unvalidated, they have no accounting impact within the system. There is nothing to stop users from creating their own draft invoices. Let\u2019s create a customer invoice with following information: Customer: Agrolait Product: iMac Quantity: 1 Unit Price: 100 Taxes: Tax 15% The document is composed of three parts: the top of the invoice, with customer information, the main body of the invoice, with detailed invoice lines, the bottom of the page, with detail about the taxes, and the totals. Open or Pro-forma invoices \u00b6 An invoice will usually include the quantity and the price of goods and/or services, the date, any parties involved, the unique invoice number, and any tax information. \u201cValidate\u201d the invoice when you are ready to approve it. The invoice then moves from the Draft state to the Open state. When you have validated an invoice, PerfectWORK gives it a unique number from a defined, and modifiable, sequence. Accounting entries corresponding to this invoice are automatically generated when you validate the invoice. You can see the details by clicking on the entry in the Journal Entry field in the \u201cOther Info\u201d tab. Send the invoice to customer \u00b6 After validating the customer invoice, you can directly send it to the customer via the \u2018Send by email\u2019 functionality. A typical journal entry generated from a validated invoice will look like as follows: Account Partner Due Date Debit Credit Account Receivable Agrolait 01/07/2021 115 Taxes Agrolait 15 Sales 100 Payment \u00b6 In PerfectWORK, an invoice is considered to be paid when the associated accounting entry has been reconciled with the payment entries. If there has not been a reconciliation, the invoice will remain in the Open state until you have entered the payment. A typical journal entry generated from a payment will look like as follows: Account Partner Due Date Debit Credit Bank Agrolait 01/07/2021 115 Accounts Receivable Agrolait 01/07/2021 115 Receive a partial payment through the bank statement \u00b6 You can manually enter your bank statements in PerfectWORK, or you can import them in from a csv file or from several other predefined formats according to your accounting localisation. Create a bank statement from the accounting dashboard with the related journal and enter an amount of $100 . Reconcile \u00b6 Now let\u2019s reconcile! You can now go through every transaction and reconcile them or you can mass reconcile with instructions at the bottom. After reconciling the items in the sheet, the related invoice will now display \u201cYou have outstanding payments for this customer. You can reconcile them to pay this invoice. \u201c Apply the payment. Below, you can see that the payment has been added to the invoice. Payment Followup \u00b6 There\u2019s a growing trend of customers paying bills later and later. Therefore, collectors must make every effort to collect money and collect it faster. PerfectWORK will help you define your follow-up strategy. To remind customers to pay their outstanding invoices, you can define different actions depending on how severely overdue the customer is. These actions are bundled into follow-up levels that are triggered when the due date of an invoice has passed a certain number of days. If there are other overdue invoices for the same customer, the actions of the most overdue invoice will be executed. By going to the customer record and diving into the \u201cOverdue Payments\u201d you will see the follow-up message and all overdue invoices. Customer aging report: \u00b6 The customer aging report will be an additional key tool for the collector to understand the customer credit issues, and to prioritize their work. Use the aging report to determine which customers are overdue and begin your collection efforts. Profit and loss \u00b6 The Profit and Loss statement displays your revenue and expense details. Ultimately, this gives you a clear image of your Net Profit and Loss. It is sometimes referred to as the \u201cIncome Statement\u201d or \u201cStatement of Revenues and Expenses.\u201d Balance sheet \u00b6 The balance sheet summarizes your company\u2019s liabilities, assets and equity at a specific moment in time. For example, if you manage your inventory using the perpetual accounting method, you should expect a decrease in account \u201cCurrent Assets\u201d once the material has been shipped to the customer.","title":"From Customer Invoice to Payments Collection"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#from-draft-invoice-to-profit-and-loss","text":"If we pick up at the end of a typical \u2018order to cash\u2019 scenario, after the goods have been shipped, you will: issue an invoice; receive payment; deposit that payment at the bank; make sure the Customer Invoice is closed; follow up if Customers are late; and finally present your Income on the Profit and Loss report and show the decrease in Assets on the Balance Sheet report. Invoicing in most countries occurs when a contractual obligation is met. If you ship a box to a customer, you have met the terms of the contract and can bill them. If your supplier sends you a shipment, they have met the terms of that contract and can bill you. Therefore, the terms of the contract is fulfilled when the box moves to or from the truck. At this point, PerfectWORK supports the creation of what is called a Draft Invoice by Warehouse staff.","title":"From Draft Invoice to Profit and Loss"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#invoice-creation","text":"Draft invoices can be manually generated from other documents such as Sales Orders, Purchase Orders,etc. Although you can create a draft invoice directly if you would like. An invoice must be provided to the customer with the necessary information in order for them to pay for the goods and services ordered and delivered. It must also include other information needed to pay the invoice in a timely and precise manner.","title":"Invoice creation"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#draft-invoices","text":"The system generates invoice which are initially set to the Draft state. While these invoices remain unvalidated, they have no accounting impact within the system. There is nothing to stop users from creating their own draft invoices. Let\u2019s create a customer invoice with following information: Customer: Agrolait Product: iMac Quantity: 1 Unit Price: 100 Taxes: Tax 15% The document is composed of three parts: the top of the invoice, with customer information, the main body of the invoice, with detailed invoice lines, the bottom of the page, with detail about the taxes, and the totals.","title":"Draft invoices"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#open-or-pro-forma-invoices","text":"An invoice will usually include the quantity and the price of goods and/or services, the date, any parties involved, the unique invoice number, and any tax information. \u201cValidate\u201d the invoice when you are ready to approve it. The invoice then moves from the Draft state to the Open state. When you have validated an invoice, PerfectWORK gives it a unique number from a defined, and modifiable, sequence. Accounting entries corresponding to this invoice are automatically generated when you validate the invoice. You can see the details by clicking on the entry in the Journal Entry field in the \u201cOther Info\u201d tab.","title":"Open or Pro-forma invoices"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#send-the-invoice-to-customer","text":"After validating the customer invoice, you can directly send it to the customer via the \u2018Send by email\u2019 functionality. A typical journal entry generated from a validated invoice will look like as follows: Account Partner Due Date Debit Credit Account Receivable Agrolait 01/07/2021 115 Taxes Agrolait 15 Sales 100","title":"Send the invoice to customer"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#payment","text":"In PerfectWORK, an invoice is considered to be paid when the associated accounting entry has been reconciled with the payment entries. If there has not been a reconciliation, the invoice will remain in the Open state until you have entered the payment. A typical journal entry generated from a payment will look like as follows: Account Partner Due Date Debit Credit Bank Agrolait 01/07/2021 115 Accounts Receivable Agrolait 01/07/2021 115","title":"Payment"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#receive-a-partial-payment-through-the-bank-statement","text":"You can manually enter your bank statements in PerfectWORK, or you can import them in from a csv file or from several other predefined formats according to your accounting localisation. Create a bank statement from the accounting dashboard with the related journal and enter an amount of $100 .","title":"Receive a partial payment through the bank statement"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#reconcile","text":"Now let\u2019s reconcile! You can now go through every transaction and reconcile them or you can mass reconcile with instructions at the bottom. After reconciling the items in the sheet, the related invoice will now display \u201cYou have outstanding payments for this customer. You can reconcile them to pay this invoice. \u201c Apply the payment. Below, you can see that the payment has been added to the invoice.","title":"Reconcile"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#payment-followup","text":"There\u2019s a growing trend of customers paying bills later and later. Therefore, collectors must make every effort to collect money and collect it faster. PerfectWORK will help you define your follow-up strategy. To remind customers to pay their outstanding invoices, you can define different actions depending on how severely overdue the customer is. These actions are bundled into follow-up levels that are triggered when the due date of an invoice has passed a certain number of days. If there are other overdue invoices for the same customer, the actions of the most overdue invoice will be executed. By going to the customer record and diving into the \u201cOverdue Payments\u201d you will see the follow-up message and all overdue invoices.","title":"Payment Followup"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#customer-aging-report","text":"The customer aging report will be an additional key tool for the collector to understand the customer credit issues, and to prioritize their work. Use the aging report to determine which customers are overdue and begin your collection efforts.","title":"Customer aging report:"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#profit-and-loss","text":"The Profit and Loss statement displays your revenue and expense details. Ultimately, this gives you a clear image of your Net Profit and Loss. It is sometimes referred to as the \u201cIncome Statement\u201d or \u201cStatement of Revenues and Expenses.\u201d","title":"Profit and loss"},{"location":"01_application/02_finance/01_getting_started/03_process/01_invoice_to_payment/#balance-sheet","text":"The balance sheet summarizes your company\u2019s liabilities, assets and equity at a specific moment in time. For example, if you manage your inventory using the perpetual accounting method, you should expect a decrease in account \u201cCurrent Assets\u201d once the material has been shipped to the customer.","title":"Balance sheet"},{"location":"01_application/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/","text":"Once vendor bills are registered in PerfectWORK, you can easily pay vendors for the correct amount and at the right time (not too late, not too early; depending on your vendor policy). PerfectWORK also offers reports to track your aged payable balances. If you want to control vendor bills received from your vendors, you can use the PerfectWORK Purchase application that allows you to control and pre-complete them automatically based on past purchase orders. From Vendor Bill to Payment \u00b6 Record a new vendor bill \u00b6 When a vendor bill is received, you can record it from Purchases \u2023 Vendor Bills in the Accounting application. As a shortcut, you can also use the New Bill feature on the accounting dashboard. To register a new vendor bill, start by selecting a vendor and inputting their invoice as the Vendor Reference , then add and confirm the product lines, making sure to have the right product quantities, taxes and prices. Save the invoice to update the pre tax and tax amounts at the bottom of the screen. You will most likely need to configure the prices of your products without taxes as PerfectWORK will compute the tax for you. Note On the bottom left corner, PerfectWORK shows a summary table of all taxes on the vendor bill. In several countries, different methods are accepted to round the totals (round per line, or round globally). The default rounding method in PerfectWORK is to round the final prices per line (as you may have different taxes per product. E.g. Alcohol and cigarettes). However if your vendor has a different tax amount on their bill, you can change the amount in the bottom left table to adjust and match. Validate The Vendor Bill \u00b6 Once the vendor bill is validated, a journal entry will be generated based on the configuration on the invoice. This journal entry may differ depending on the the accounting package you choose to use. For most European countries, the journal entry will use the following accounts: Accounts Payable: defined on the vendor form Taxes: defined on the products and per line Expenses: defined on the line item product used For Anglo-Saxon (US) accounting, the journal entry will use the following accounts: Accounts Payable: defined on the vendor form Taxes: defined on the products and per line Goods Received: defined on the product form You can check your Profit & Loss or the Balance Sheet reports after having validated a couple of vendor bills to see the impact on your general ledger. Pay a bill \u00b6 To create a payment for an open vendor bill directly, you can click on Register a Payment at the top of the form. From there, you select the payment method (i.e. Checking account, credit card, check, etc\u2026) and the amount you wish to pay. By default, PerfectWORK will propose the entire remaining balance on the bill for payment. In the memo field, we recommend you set the vendor invoice number as a reference (PerfectWORK will auto fill this field from the from the vendor bill if set it correctly). Note You can also register a payment to a vendor directly without applying it to a vendor bill. To do that, Purchases \u2023 Payments. Then, from the vendor bill you will be able to reconcile this payment with directly. Printing vendor Checks \u00b6 If you choose to pay your vendor bills by check, PerfectWORK offers a method to do so directly from your vendor payments within PerfectWORK. Whether you do so on a daily basis or prefer to do so at the end of the week, you can print in checks in batches. If you have checks to print, PerfectWORK\u2019s accounting dashboard acts as a to do list and reminds you of how many checks you have left to be printed. By selecting the amount of checks to be printed, you can dive right into a list of all payments that are ready to be processed. Select all the checks you wish to print (use the first checkbox to select them all) and set the action to Print Checks . PerfectWORK will ask you to set the next check number in the sequence and will then print all the checks at once. Reporting \u00b6 Aged payable balance \u00b6 In order to get a list of open vendor bills and their related due dates, you can use the Aged Payable report, under the reporting menu, (in Reporting \u2023 Business Statement \u2023 Aged payable ) to get a visual of all of your outstanding bills. From here, you can click directly on a vendors name to open up the details of all outstanding bills and the amounts due, or you can annotate any line for managements information. At any point in time while you\u2019re looking through the report, you can print directly to Excel or PDF and get exactly what you see on the screen. See also From Customer Invoice to Payments Collection","title":"From Vendor Bill to Payment"},{"location":"01_application/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#from-vendor-bill-to-payment","text":"","title":"From Vendor Bill to Payment"},{"location":"01_application/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#record-a-new-vendor-bill","text":"When a vendor bill is received, you can record it from Purchases \u2023 Vendor Bills in the Accounting application. As a shortcut, you can also use the New Bill feature on the accounting dashboard. To register a new vendor bill, start by selecting a vendor and inputting their invoice as the Vendor Reference , then add and confirm the product lines, making sure to have the right product quantities, taxes and prices. Save the invoice to update the pre tax and tax amounts at the bottom of the screen. You will most likely need to configure the prices of your products without taxes as PerfectWORK will compute the tax for you. Note On the bottom left corner, PerfectWORK shows a summary table of all taxes on the vendor bill. In several countries, different methods are accepted to round the totals (round per line, or round globally). The default rounding method in PerfectWORK is to round the final prices per line (as you may have different taxes per product. E.g. Alcohol and cigarettes). However if your vendor has a different tax amount on their bill, you can change the amount in the bottom left table to adjust and match.","title":"Record a new vendor bill"},{"location":"01_application/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#validate-the-vendor-bill","text":"Once the vendor bill is validated, a journal entry will be generated based on the configuration on the invoice. This journal entry may differ depending on the the accounting package you choose to use. For most European countries, the journal entry will use the following accounts: Accounts Payable: defined on the vendor form Taxes: defined on the products and per line Expenses: defined on the line item product used For Anglo-Saxon (US) accounting, the journal entry will use the following accounts: Accounts Payable: defined on the vendor form Taxes: defined on the products and per line Goods Received: defined on the product form You can check your Profit & Loss or the Balance Sheet reports after having validated a couple of vendor bills to see the impact on your general ledger.","title":"Validate The Vendor Bill"},{"location":"01_application/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#pay-a-bill","text":"To create a payment for an open vendor bill directly, you can click on Register a Payment at the top of the form. From there, you select the payment method (i.e. Checking account, credit card, check, etc\u2026) and the amount you wish to pay. By default, PerfectWORK will propose the entire remaining balance on the bill for payment. In the memo field, we recommend you set the vendor invoice number as a reference (PerfectWORK will auto fill this field from the from the vendor bill if set it correctly). Note You can also register a payment to a vendor directly without applying it to a vendor bill. To do that, Purchases \u2023 Payments. Then, from the vendor bill you will be able to reconcile this payment with directly.","title":"Pay a bill"},{"location":"01_application/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#printing-vendor-checks","text":"If you choose to pay your vendor bills by check, PerfectWORK offers a method to do so directly from your vendor payments within PerfectWORK. Whether you do so on a daily basis or prefer to do so at the end of the week, you can print in checks in batches. If you have checks to print, PerfectWORK\u2019s accounting dashboard acts as a to do list and reminds you of how many checks you have left to be printed. By selecting the amount of checks to be printed, you can dive right into a list of all payments that are ready to be processed. Select all the checks you wish to print (use the first checkbox to select them all) and set the action to Print Checks . PerfectWORK will ask you to set the next check number in the sequence and will then print all the checks at once.","title":"Printing vendor Checks"},{"location":"01_application/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#reporting","text":"","title":"Reporting"},{"location":"01_application/02_finance/01_getting_started/03_process/02_vendor_bill_to_payment/#aged-payable-balance","text":"In order to get a list of open vendor bills and their related due dates, you can use the Aged Payable report, under the reporting menu, (in Reporting \u2023 Business Statement \u2023 Aged payable ) to get a visual of all of your outstanding bills. From here, you can click directly on a vendors name to open up the details of all outstanding bills and the amounts due, or you can annotate any line for managements information. At any point in time while you\u2019re looking through the report, you can print directly to Excel or PDF and get exactly what you see on the screen. See also From Customer Invoice to Payments Collection","title":"Aged payable balance"},{"location":"01_application/02_finance/02_accounts_receivable/","text":"Accounts receivable (AR) is the balance of money due to a firm for goods or services delivered or used but not yet paid for by customers. Accounts receivables are listed on the balance sheet as a current asset. AR is any amount of money owed by customers for purchases made on credit.","title":"Accounts Receivable"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/","text":"Depending on your business and the application you use, there are different ways to automate the customer invoice creation in PerfectWORK. Usually, draft invoices are created by the system (with information coming from other documents like sales order or contracts) and accountant just have to validate draft invoices and send the invoices in batch (by regular mail or email). Depending on your business, you may opt for one of the following way to create draft invoices: Sales \u00b6 Sales Order \u2023 Invoice \u00b6 In most companies, salespeople create quotations that become sales order once they are validated. Then, draft invoices are created based on the sales order. You have different options like: Invoice manually: use a button on the sale order to trigger the draft invoice Invoice before delivery: invoice the full order before triggering the delivery order Invoice based on delivery order: see next section Invoice before delivery is usually used by the eCommerce application when the customer pays at the order and we deliver afterwards. (pre-paid) For most other use cases, it\u2019s recommended to invoice manually. It allows the salesperson to trigger the invoice on demand with options: invoice the whole order, invoice a percentage (advance), invoice some lines, invoice a fixed advance. This process is good for both services and physical products. Sales Order \u2023 Delivery Order \u2023 Invoice \u00b6 Retailers and eCommerce usually invoice based on delivery orders, instead of sales order. This approach is suitable for businesses where the quantities you deliver may differs from the ordered quantities: foods (invoice based on actual Kg). This way, if you deliver a partial order, you only invoice for what you really delivered. If you do back orders (deliver partially and the rest later), the customer will receive two invoices, one for each delivery order. eCommerce Order \u2023 Invoice \u00b6 An eCommerce order will also trigger the creation of the order when it is fully paid. If you allow paying orders by check or wire transfer, PerfectWORK only creates an order and the invoice will be triggered once the payment is received. Contracts \u00b6 Regular Contracts \u2023 Invoices \u00b6 If you use contracts, you can trigger invoice based on time and material spent, expenses or fixed lines of services/products. Every month, the salesperson will trigger invoice based on activities on the contract. Activities can be: fixed products/services, coming from a sale order linked to this contract materials purchased (that you will re-invoice) time and material based on timesheets or purchases (subcontracting) expenses like travel and accommodation that you re-invoice to the customer You can invoice at the end of the contract or trigger intermediate invoices. This approach is used by services companies that invoice mostly based on time and material. For services companies that invoice on fix price, they use a regular sales order. Recurring Contracts \u2023 Invoices \u00b6 For subscriptions, an invoice is triggered periodically, automatically. The frequency of the invoicing and the services/products invoiced are defined on the contract. Others \u00b6 Creating an invoice manually \u00b6 Users can also create invoices manually without using contracts or a sales order. It\u2019s a recommended approach if you do not need to manage the sales process (quotations), or the delivery of the products or services. Even if you generate the invoice from a sales order, you may need to create invoices manually in exceptional use cases: if you need to create a refund If you need to give a discount if you need to change an invoice created from a sales order if you need to invoice something not related to your core business Specific modules \u00b6 Some specific modules are also able to generate draft invoices: membership: invoice your members every year repairs: invoice your after-sale services Resequencing of the invoices \u00b6 It remains possible to resequence the invoices but with some restrictions: The feature does not work when entries are previous to a lock date. The feature does not work if the sequence is inconsistent with the month of the entry. It does not work if the sequence leads to a duplicate. The order of the invoice remains unchanged. It is useful for people who use a numbering from another software and who want to continue the current year without starting over from the beginning.","title":"Invoicing Process"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#sales","text":"","title":"Sales"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#sales-order-invoice","text":"In most companies, salespeople create quotations that become sales order once they are validated. Then, draft invoices are created based on the sales order. You have different options like: Invoice manually: use a button on the sale order to trigger the draft invoice Invoice before delivery: invoice the full order before triggering the delivery order Invoice based on delivery order: see next section Invoice before delivery is usually used by the eCommerce application when the customer pays at the order and we deliver afterwards. (pre-paid) For most other use cases, it\u2019s recommended to invoice manually. It allows the salesperson to trigger the invoice on demand with options: invoice the whole order, invoice a percentage (advance), invoice some lines, invoice a fixed advance. This process is good for both services and physical products.","title":"Sales Order \u2023 Invoice"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#sales-order-delivery-order-invoice","text":"Retailers and eCommerce usually invoice based on delivery orders, instead of sales order. This approach is suitable for businesses where the quantities you deliver may differs from the ordered quantities: foods (invoice based on actual Kg). This way, if you deliver a partial order, you only invoice for what you really delivered. If you do back orders (deliver partially and the rest later), the customer will receive two invoices, one for each delivery order.","title":"Sales Order \u2023 Delivery Order \u2023 Invoice"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#ecommerce-order-invoice","text":"An eCommerce order will also trigger the creation of the order when it is fully paid. If you allow paying orders by check or wire transfer, PerfectWORK only creates an order and the invoice will be triggered once the payment is received.","title":"eCommerce Order \u2023 Invoice"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#contracts","text":"","title":"Contracts"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#regular-contracts-invoices","text":"If you use contracts, you can trigger invoice based on time and material spent, expenses or fixed lines of services/products. Every month, the salesperson will trigger invoice based on activities on the contract. Activities can be: fixed products/services, coming from a sale order linked to this contract materials purchased (that you will re-invoice) time and material based on timesheets or purchases (subcontracting) expenses like travel and accommodation that you re-invoice to the customer You can invoice at the end of the contract or trigger intermediate invoices. This approach is used by services companies that invoice mostly based on time and material. For services companies that invoice on fix price, they use a regular sales order.","title":"Regular Contracts \u2023 Invoices"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#recurring-contracts-invoices","text":"For subscriptions, an invoice is triggered periodically, automatically. The frequency of the invoicing and the services/products invoiced are defined on the contract.","title":"Recurring Contracts \u2023 Invoices"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#others","text":"","title":"Others"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#creating-an-invoice-manually","text":"Users can also create invoices manually without using contracts or a sales order. It\u2019s a recommended approach if you do not need to manage the sales process (quotations), or the delivery of the products or services. Even if you generate the invoice from a sales order, you may need to create invoices manually in exceptional use cases: if you need to create a refund If you need to give a discount if you need to change an invoice created from a sales order if you need to invoice something not related to your core business","title":"Creating an invoice manually"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#specific-modules","text":"Some specific modules are also able to generate draft invoices: membership: invoice your members every year repairs: invoice your after-sale services","title":"Specific modules"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/01_invoice_to_payment/#resequencing-of-the-invoices","text":"It remains possible to resequence the invoices but with some restrictions: The feature does not work when entries are previous to a lock date. The feature does not work if the sequence is inconsistent with the month of the entry. It does not work if the sequence leads to a duplicate. The order of the invoice remains unchanged. It is useful for people who use a numbering from another software and who want to continue the current year without starting over from the beginning.","title":"Resequencing of the invoices"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/02_offer_cash_discount/","text":"Cash discounts are incentives you can offer to customers to motivate them to pay within a specific time frame. For instance, you offer a 2% discount if the customer pays you within the first 5 days of the invoice, when it is due in 30 days. This approach can greatly improve your average collection period. Set up a cash discount \u00b6 To set up a cash discount, go to Accounting \u2023 Configuration \u2023 Management \u2023 Payment Terms and click on Create . Add a Percent type of term with a corresponding value (e.g. 98% of the total price for a 2% discount) and the number of days during which the offer is valid. You can also change the default balance term if needed. Start offering the cash discount \u00b6 Now, you can create a customer invoice and select the cash discount payment term you added. Once the invoice is validated, PerfectWORK will automatically split the account receivables part of the journal entry into two installments having different due dates. Since the discounted price is already calculated, your payment controls will be simplified. Grant the cash discount \u00b6 The customer fulfilled the payment terms and therefore benefits from the cash discount. When you process the bank statement, match the payment with the related journal entry. Then, select the remaining cash discount and click on Create Write-off to reconcile it. Tip You can also create a dedicated reconciliation model to make the process easier. In this case, you should add a tax to the model based on the taxes applied to your invoices. This means that if you handle multiple tax rates, you need to create several reconciliation models. Note that depending on your localisation, you might already have a Cash Discount model available by default. Register the full payment \u00b6 In this case, the customer has not fulfilled the payment term and cannot benefit from the cash discount. When you process the bank statement, match the payment with the two related journal entries.","title":"Offer Cash Discounts"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/02_offer_cash_discount/#set-up-a-cash-discount","text":"To set up a cash discount, go to Accounting \u2023 Configuration \u2023 Management \u2023 Payment Terms and click on Create . Add a Percent type of term with a corresponding value (e.g. 98% of the total price for a 2% discount) and the number of days during which the offer is valid. You can also change the default balance term if needed.","title":"Set up a cash discount"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/02_offer_cash_discount/#start-offering-the-cash-discount","text":"Now, you can create a customer invoice and select the cash discount payment term you added. Once the invoice is validated, PerfectWORK will automatically split the account receivables part of the journal entry into two installments having different due dates. Since the discounted price is already calculated, your payment controls will be simplified.","title":"Start offering the cash discount"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/02_offer_cash_discount/#grant-the-cash-discount","text":"The customer fulfilled the payment terms and therefore benefits from the cash discount. When you process the bank statement, match the payment with the related journal entry. Then, select the remaining cash discount and click on Create Write-off to reconcile it. Tip You can also create a dedicated reconciliation model to make the process easier. In this case, you should add a tax to the model based on the taxes applied to your invoices. This means that if you handle multiple tax rates, you need to create several reconciliation models. Note that depending on your localisation, you might already have a Cash Discount model available by default.","title":"Grant the cash discount"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/02_offer_cash_discount/#register-the-full-payment","text":"In this case, the customer has not fulfilled the payment term and cannot benefit from the cash discount. When you process the bank statement, match the payment with the two related journal entries.","title":"Register the full payment"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/03_cash_rounding/","text":"Cash rounding is required when the lowest physical denomination of currency, or the smallest coin, is higher than the minimum unit of account. For example, some countries require their companies to round up or down the total amount of an invoice to the nearest five cents, when the payment is made in cash. Configuration \u00b6 Go to Accounting \u2023 Configuration \u2023 Settings and enable Cash Rounding , then click on Save . Go to Accounting \u2023 Configuration \u2023 Cash Roundings , and click on Create . Define here your Rounding Precision, Rounding Strategy, and Rounding Method. PerfectWORK supports two rounding strategies : Add a rounding line : a rounding line is added on the invoice. You have to define which account records the cash roundings. Modify tax amount : the rounding is applied in the taxes section. Apply roundings \u00b6 When editing a draft invoice, open the Other Info tab, go to the Accounting Information section, and select the appropriate Cash Rounding Method.","title":"Cash Rounding"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/03_cash_rounding/#configuration","text":"Go to Accounting \u2023 Configuration \u2023 Settings and enable Cash Rounding , then click on Save . Go to Accounting \u2023 Configuration \u2023 Cash Roundings , and click on Create . Define here your Rounding Precision, Rounding Strategy, and Rounding Method. PerfectWORK supports two rounding strategies : Add a rounding line : a rounding line is added on the invoice. You have to define which account records the cash roundings. Modify tax amount : the rounding is applied in the taxes section.","title":"Configuration"},{"location":"01_application/02_finance/02_accounts_receivable/01_customer_invoices/03_cash_rounding/#apply-roundings","text":"When editing a draft invoice, open the Other Info tab, go to the Accounting Information section, and select the appropriate Cash Rounding Method.","title":"Apply roundings"},{"location":"01_application/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/","text":"In PerfectWORK, a payment can either be linked directly to an invoice or be a stand alone record for use on a later date: If a payment is linked to an invoice, it reduces the amount due of the invoice. You can have multiple payments linked to the same invoice. If a payment is not linked to an invoice, the customer has an outstanding credit with your company, or your company as an outstanding balance with a vendor. You can use this outstanding credit/debit to pay future invoices or bills. Paying an invoice \u00b6 If you register a payment on a customer invoice or a vendor bill, the payment is automatically reconciled with the invoice reducing the amount due. The green icon near the payment line will display more information about the payment. From there you can choose to open the journal entry or reconcile the payment. Note If you unreconcile a payment, it is still registered in your books but not linked to the specific invoice any longer. If you unreconcile a payment in a different currency, PerfectWORK will create a journal entry to reverse the Currency Exchange Loss/Gain posted at the time of reconciliation. Payments not tied to an invoice \u00b6 Registering a payment \u00b6 In the Accounting application, you can create a new payment from the Sales menu (register a customer payment) or the Purchases menu (pay a vendor). If you use these menus, the payment is not linked to an invoice, but can easily be reconciled on an invoice later on. When registering a new payment, you must select a customer or vendor, the payment method, and the amount of the payment. The currency of the transaction is defined by the payment method. If the payment refers to a document (sale order, purchase order or invoice), set the reference of this document in the memo field. Once confirmed, a journal entry will be posted reflecting the transaction just made in the accounting application. Reconciling invoice payments \u00b6 The easiest way of reconciling a payment with an invoice is to do so on the invoice directly. When validating a new invoice, Odoo will warn you that an outstanding payment for this customer or vendor is available. In this case, you can reconcile this payment to the invoice near the totals at the bottom, under \u201cOutstanding Payments\u201d. Reconciling all your outstanding payments and invoices \u00b6 If you want to reconcile all outstanding payments and invoices at once (instead of doing so one by one), you can use the batch reconciliation feature within Odoo. The batch reconciliation feature is available from the dashboard on the Customer Invoices card and the Vendor Bills card for reconciling Accounts Receivable and Payable, respectively. The payments matching tool will open all unreconciled customers or vendors and will give you the opportunity to process them all one by one, doing the matching of all their payments and invoices at once. During the reconciliation, if the sum of the debits and credits do not match, it means there is still a remaining balance that either needs to be reconciled at a later date, or needs to be written off directly. Transferring money from one bank account to another \u00b6 Just like making a customer or vendor payment, you transfer cash internally between your bank accounts from the dashboard or from the menus up top. This will take you to the same screen you have for receiving and making payments. Note When making an internal transfer from one bank account to another, select the bank you want to apply the transfer from in the dashboard, and in the register payments screen, you select the transfer to account. Do not go through this process again in the other bank account or else you will end up with two journal entries for the same transaction.","title":"Different ways to record a payment"},{"location":"01_application/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#paying-an-invoice","text":"If you register a payment on a customer invoice or a vendor bill, the payment is automatically reconciled with the invoice reducing the amount due. The green icon near the payment line will display more information about the payment. From there you can choose to open the journal entry or reconcile the payment. Note If you unreconcile a payment, it is still registered in your books but not linked to the specific invoice any longer. If you unreconcile a payment in a different currency, PerfectWORK will create a journal entry to reverse the Currency Exchange Loss/Gain posted at the time of reconciliation.","title":"Paying an invoice"},{"location":"01_application/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#payments-not-tied-to-an-invoice","text":"","title":"Payments not tied to an invoice"},{"location":"01_application/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#registering-a-payment","text":"In the Accounting application, you can create a new payment from the Sales menu (register a customer payment) or the Purchases menu (pay a vendor). If you use these menus, the payment is not linked to an invoice, but can easily be reconciled on an invoice later on. When registering a new payment, you must select a customer or vendor, the payment method, and the amount of the payment. The currency of the transaction is defined by the payment method. If the payment refers to a document (sale order, purchase order or invoice), set the reference of this document in the memo field. Once confirmed, a journal entry will be posted reflecting the transaction just made in the accounting application.","title":"Registering a payment"},{"location":"01_application/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#reconciling-invoice-payments","text":"The easiest way of reconciling a payment with an invoice is to do so on the invoice directly. When validating a new invoice, Odoo will warn you that an outstanding payment for this customer or vendor is available. In this case, you can reconcile this payment to the invoice near the totals at the bottom, under \u201cOutstanding Payments\u201d.","title":"Reconciling invoice payments"},{"location":"01_application/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#reconciling-all-your-outstanding-payments-and-invoices","text":"If you want to reconcile all outstanding payments and invoices at once (instead of doing so one by one), you can use the batch reconciliation feature within Odoo. The batch reconciliation feature is available from the dashboard on the Customer Invoices card and the Vendor Bills card for reconciling Accounts Receivable and Payable, respectively. The payments matching tool will open all unreconciled customers or vendors and will give you the opportunity to process them all one by one, doing the matching of all their payments and invoices at once. During the reconciliation, if the sum of the debits and credits do not match, it means there is still a remaining balance that either needs to be reconciled at a later date, or needs to be written off directly.","title":"Reconciling all your outstanding payments and invoices"},{"location":"01_application/02_finance/02_accounts_receivable/02_customer_payment/01_different_way_payment/#transferring-money-from-one-bank-account-to-another","text":"Just like making a customer or vendor payment, you transfer cash internally between your bank accounts from the dashboard or from the menus up top. This will take you to the same screen you have for receiving and making payments. Note When making an internal transfer from one bank account to another, select the bank you want to apply the transfer from in the dashboard, and in the register payments screen, you select the transfer to account. Do not go through this process again in the other bank account or else you will end up with two journal entries for the same transaction.","title":"Transferring money from one bank account to another"},{"location":"01_application/02_finance/10_inventory/","text":"There are mainly two types of accounting practices that are widely adopted across the world. Everyone is familiar with continental accounting as this is one of the widely used accounting features especially in European countries. Anglo Saxon accounting, on the other hand, is used by a other community. In Continental Accounting, the expense account is affected at the time of purchase on the other hand, in Anglo Saxon Accounting the expense account is affected at the time of processing a sales order . Let's now look at both Continental and Anglo-Saxon accounting in detail. How to configure Continental or Anglo-Saxon Accounting \u00b6 For implementing the continental accounting, go to the settings menu of the accounting module, untick the checkbox (by default it will be continental) Anglo-Saxon Accounting, and save changes. If you would like to use Angle Saxon accounting, just tick the checkbox Anglo-Saxon Accounting, then save changes.","title":"Inventory Management - Anglo-Saxon or Continental Accounting"},{"location":"01_application/02_finance/10_inventory/#how-to-configure-continental-or-anglo-saxon-accounting","text":"For implementing the continental accounting, go to the settings menu of the accounting module, untick the checkbox (by default it will be continental) Anglo-Saxon Accounting, and save changes. If you would like to use Angle Saxon accounting, just tick the checkbox Anglo-Saxon Accounting, then save changes.","title":"How to configure Continental or Anglo-Saxon Accounting"},{"location":"01_application/02_finance/10_inventory/01_inventory_valuation/","text":"Inventory valuation refers to how you value your stock. It\u2019s a very important aspect of a business as the inventory can be the biggest asset of a company. Inventory valuation implies two main choices: - The cost method you use to value your goods (standard, fifo, avco) - The way you record this value into your accounting books (manually or automatically) Those two concepts are explained in the sections below. Costing Methods: Standard, FIFO, AVCO \u00b6 The costing method is defined in the product category. There are three options available. Each of them is explained in detail below. Standard Price \u00b6 Operation Unit Cost Qty On Hand Delta Value Inventory Value $ 10.00 0 $ - Receive 8 Products at $10 $ 10.00 8 +8 * 10 $ 80.00 Receive 4 Products at $16 $ 10.00 12 +4 * 10 $ 120.00 Deliver 10 Products $ 10.00 2 -10 * 10 $ 20.00 Receive 2 Products at $9 $ 10.00 4 +2 * 10 $ 20.00 In Standard Price , any product will be valued at the cost that you defined manually on the product form. Usually, this cost is an estimation based on the material and labor needed to obtain the product. This cost must be reviewed periodically. Average Cost (AVCO) \u00b6 Operation Unit Cost Qty On Hand Delta Value Inventory Value $ 0.00 0 $ 0.00 Receive 8 Products at $10 $ 10.00 8 +8 * 10 $ 80.00 Receive 4 Products at $16 $ 12.00 12 +4 * 16 $ 144.00 Deliver 10 Products $ 12.00 2 -10 * 12 $ 24.00 Receive 2 Products at $9 $ 9.00 4 +2 * 6 $ 36.00 In AVCO (Average Cost) , each product has the same value and this value is the average purchase cost of the product. With this costing method, the cost of the product is recomputed as each receipt. The average cost does not change when products leave the warehouse. FIFO (First In First Out) \u00b6 Operation Unit Cost Qty On Hand Delta Value Inventory Value $ 0.00 0 $ 0.00 Receive 8 Products at $10 $ 10.00 8 +8 * 10 $ 80.00 Receive 4 Products at $16 $ 12.00 12 +4 * 16 $ 144.00 Deliver 10 Products $ 16.00 2 -10 * 12 -2 * 16 $ 32.00 Receive 2 Products at $9 $ 11.00 4 +2 * 6 $ 44.00 In FIFO (First In First Out), the products are valued at their purchase cost. When a product leaves the stock, that\u2019s the \u201cFirst in, first out\u201d rule that applies. Pay attention, that this is a financial FIFO . The first value \u201cin\u201d is the first value \u201cout\u201d, no matter the storage location, warehouse or serial number. FIFO is advised if you manage all your workflows into PerfectWORK (Sales, Purchases, Inventory). It suits any kind of users. Inventory Valuation: Automated or Manual \u00b6 There are two ways to record your inventory valuation in your accounting books. As the costing method, this is defined in your product category. Those two methods are detailed below.It is important to also note that the accounting entries will depend on your accounting mode: it can be continental or anglo-saxon . In continental accounting, the cost of a good is taken into account as soon as the product is received in stock. In anglo-saxon accounting, the cost of a good is only recorded as an expense when this good is invoiced to a final customer. In the tables below, you can easily compare those two accounting modes.Usually, based on your country, the correct accounting mode will be chosen by default.","title":"Inventory Valuation Configuration"},{"location":"01_application/02_finance/10_inventory/01_inventory_valuation/#costing-methods-standard-fifo-avco","text":"The costing method is defined in the product category. There are three options available. Each of them is explained in detail below.","title":"Costing Methods: Standard, FIFO, AVCO"},{"location":"01_application/02_finance/10_inventory/01_inventory_valuation/#standard-price","text":"Operation Unit Cost Qty On Hand Delta Value Inventory Value $ 10.00 0 $ - Receive 8 Products at $10 $ 10.00 8 +8 * 10 $ 80.00 Receive 4 Products at $16 $ 10.00 12 +4 * 10 $ 120.00 Deliver 10 Products $ 10.00 2 -10 * 10 $ 20.00 Receive 2 Products at $9 $ 10.00 4 +2 * 10 $ 20.00 In Standard Price , any product will be valued at the cost that you defined manually on the product form. Usually, this cost is an estimation based on the material and labor needed to obtain the product. This cost must be reviewed periodically.","title":"Standard Price"},{"location":"01_application/02_finance/10_inventory/01_inventory_valuation/#average-cost-avco","text":"Operation Unit Cost Qty On Hand Delta Value Inventory Value $ 0.00 0 $ 0.00 Receive 8 Products at $10 $ 10.00 8 +8 * 10 $ 80.00 Receive 4 Products at $16 $ 12.00 12 +4 * 16 $ 144.00 Deliver 10 Products $ 12.00 2 -10 * 12 $ 24.00 Receive 2 Products at $9 $ 9.00 4 +2 * 6 $ 36.00 In AVCO (Average Cost) , each product has the same value and this value is the average purchase cost of the product. With this costing method, the cost of the product is recomputed as each receipt. The average cost does not change when products leave the warehouse.","title":"Average Cost (AVCO)"},{"location":"01_application/02_finance/10_inventory/01_inventory_valuation/#fifo-first-in-first-out","text":"Operation Unit Cost Qty On Hand Delta Value Inventory Value $ 0.00 0 $ 0.00 Receive 8 Products at $10 $ 10.00 8 +8 * 10 $ 80.00 Receive 4 Products at $16 $ 12.00 12 +4 * 16 $ 144.00 Deliver 10 Products $ 16.00 2 -10 * 12 -2 * 16 $ 32.00 Receive 2 Products at $9 $ 11.00 4 +2 * 6 $ 44.00 In FIFO (First In First Out), the products are valued at their purchase cost. When a product leaves the stock, that\u2019s the \u201cFirst in, first out\u201d rule that applies. Pay attention, that this is a financial FIFO . The first value \u201cin\u201d is the first value \u201cout\u201d, no matter the storage location, warehouse or serial number. FIFO is advised if you manage all your workflows into PerfectWORK (Sales, Purchases, Inventory). It suits any kind of users.","title":"FIFO (First In First Out)"},{"location":"01_application/02_finance/10_inventory/01_inventory_valuation/#inventory-valuation-automated-or-manual","text":"There are two ways to record your inventory valuation in your accounting books. As the costing method, this is defined in your product category. Those two methods are detailed below.It is important to also note that the accounting entries will depend on your accounting mode: it can be continental or anglo-saxon . In continental accounting, the cost of a good is taken into account as soon as the product is received in stock. In anglo-saxon accounting, the cost of a good is only recorded as an expense when this good is invoiced to a final customer. In the tables below, you can easily compare those two accounting modes.Usually, based on your country, the correct accounting mode will be chosen by default.","title":"Inventory Valuation: Automated or Manual"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/","text":"In that case, when a product enters or leaves your stock, an accounting entry will be automatically created. This means your accounting books are always up-to-date. This mode is dedicated to expert accountants and advanced users only. As opposed to periodic valuation, it requires some extra configuration & testing. First, you need to define the accounts that will be used for those accounting entries. This is done on the product category. Continental Accounting \u00b6 Note Configuration: Accounts Receivable/Payable: defined on the partner (Accounting tab) Deferred Tax Assets/Liabilities: defined on the tax used on the invoice line Revenues/Expenses: defined by default on product\u2019s internal category; can be also set in product form (Accounting tab) as a replacement value. Inventory Variations: to set as Stock Input/Output Account in product\u2019s internal category Inventory: to set as Stock Valuation Account in product\u2019s internal category Vendor Invoice (PO $50, Invoice \u20ac50) \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets $ 4.50 2 Liabilities \u2001 21000 Accounts Payable $ 54.50 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Purchased Goods $ 50.00 \u2001 52000 Purchased Services \u2001 58000 Inventory Variations \u2001 59000 Other Operating Expenses Vendor Goods Reception (PO $50, Invoice $50) \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 50.00 \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Purchased Goods \u2001 52000 Purchased Services \u2001 58000 Inventory Variations $ 50.00 \u2001 59000 Other Operating Expenses Vendor Invoice (PO $48, Invoice $50) \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets $ 4.50 2 Liabilities \u2001 21000 Accounts Payable $ 54.50 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Purchased Goods $ 50.00 \u2001 52000 Purchased Services \u2001 58000 Inventory Variations \u2001 59000 Other Operating Expenses Vendor Goods Reception (PO $48, Invoice $50) \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 48.00 \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Purchased Goods \u2001 52000 Purchased Services \u2001 58000 Inventory Variations $ 48.00 \u2001 59000 Other Operating Expenses Customer Invoice ($100 + 9% tax) \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable $ 109.00 \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 26200 Deferred Tax Liabilities $ 9.00 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods $ 100.00 5 Expenses \u2001 51000 Purchased Goods \u2001 52000 Purchased Services \u2001 58000 Inventory Variations \u2001 59000 Other Operating Expenses Customer Shipping \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 50.00 \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Purchased Goods \u2001 52000 Purchased Services \u2001 58000 Inventory Variations $ 50.00 \u2001 59000 Other Operating Expenses Anglo-Saxon Accounting \u00b6 Note Configuration: Accounts Receivable/Payable: defined on the partner (Accounting tab) Deferred Tax Assets/Liabilities: defined on the tax used on the invoice line Revenues: defined on the product category as a default, or specifically to a specific product. Expenses: this is where you should set the \u201cCost of Goods Sold\u201d account. Defined on the product category as a default value, or specifically on the product form. Goods Received Not Purchased: to set as Stock Input Account in product\u2019s internal category Goods Issued Not Invoiced: to set as Stock Output Account in product\u2019s internal category Inventory: to set as Stock Valuation Account in product\u2019s internal category Price Difference: to set in product\u2019s internal category or in product form as a specific replacement value Vendor Bill (PO $50, Invoice \u20ac50) \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) \u2001 19000 Deferred Tax Assets 4.50 2 Liabilities \u2001 21000 Accounts Payable 54.50 \u2001 23000 Stock Received (Stock Input) 50.00 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference Vendor Goods Reception (PO $50, Invoice $50) \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory 50 \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 23000 Stock Received (Stock Input) 50 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference Vendor Bill (PO $48, Invoice $50) \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) \u2001 19000 Deferred Tax Assets 4.50 2 Liabilities \u2001 21000 Accounts Payable 54.50 \u2001 23000 Stock Received (Stock Input) 48.00 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference 2.00 Vendor Goods Reception (PO $48, Invoice $50) \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 48.00 \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 23000 Stock Received (Stock Input) $ 48.00 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference Customer Invoice ($100 + 9% tax) \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable $ 109.00 \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) $ 50.00 \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 23000 Stock Received (Stock Input) \u2001 26200 Deferred Tax Liabilities $ 9.00 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods $ 100.00 5 Expenses \u2001 51000 Cost of Good Sold $ 50.00 \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference Customer Shipping \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 50.00 \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) $ 50.00 \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 23000 Stock Received (Stock Input) \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference Production Order \u00b6 Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 50.00 \u2001 14100 Raw Materials Inventory $ 52.00 \u2001 14600 Good Issued (Stock Output) \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 23000 Stock Received (Stock Input) \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference $ 2.00","title":"Automated Inventory Valuation"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#continental-accounting","text":"Note Configuration: Accounts Receivable/Payable: defined on the partner (Accounting tab) Deferred Tax Assets/Liabilities: defined on the tax used on the invoice line Revenues/Expenses: defined by default on product\u2019s internal category; can be also set in product form (Accounting tab) as a replacement value. Inventory Variations: to set as Stock Input/Output Account in product\u2019s internal category Inventory: to set as Stock Valuation Account in product\u2019s internal category","title":"Continental Accounting"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-invoice-po-50-invoice-50","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets $ 4.50 2 Liabilities \u2001 21000 Accounts Payable $ 54.50 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Purchased Goods $ 50.00 \u2001 52000 Purchased Services \u2001 58000 Inventory Variations \u2001 59000 Other Operating Expenses","title":"Vendor Invoice (PO $50, Invoice \u20ac50)"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-goods-reception-po-50-invoice-50","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 50.00 \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Purchased Goods \u2001 52000 Purchased Services \u2001 58000 Inventory Variations $ 50.00 \u2001 59000 Other Operating Expenses","title":"Vendor Goods Reception (PO $50, Invoice $50)"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-invoice-po-48-invoice-50","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets $ 4.50 2 Liabilities \u2001 21000 Accounts Payable $ 54.50 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Purchased Goods $ 50.00 \u2001 52000 Purchased Services \u2001 58000 Inventory Variations \u2001 59000 Other Operating Expenses","title":"Vendor Invoice (PO $48, Invoice $50)"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-goods-reception-po-48-invoice-50","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 48.00 \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Purchased Goods \u2001 52000 Purchased Services \u2001 58000 Inventory Variations $ 48.00 \u2001 59000 Other Operating Expenses","title":"Vendor Goods Reception (PO $48, Invoice $50)"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#customer-invoice-100-9-tax","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable $ 109.00 \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 26200 Deferred Tax Liabilities $ 9.00 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods $ 100.00 5 Expenses \u2001 51000 Purchased Goods \u2001 52000 Purchased Services \u2001 58000 Inventory Variations \u2001 59000 Other Operating Expenses","title":"Customer Invoice ($100 + 9% tax)"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#customer-shipping","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 50.00 \u2001 14100 Raw Materials Inventory \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Purchased Goods \u2001 52000 Purchased Services \u2001 58000 Inventory Variations $ 50.00 \u2001 59000 Other Operating Expenses","title":"Customer Shipping"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#anglo-saxon-accounting","text":"Note Configuration: Accounts Receivable/Payable: defined on the partner (Accounting tab) Deferred Tax Assets/Liabilities: defined on the tax used on the invoice line Revenues: defined on the product category as a default, or specifically to a specific product. Expenses: this is where you should set the \u201cCost of Goods Sold\u201d account. Defined on the product category as a default value, or specifically on the product form. Goods Received Not Purchased: to set as Stock Input Account in product\u2019s internal category Goods Issued Not Invoiced: to set as Stock Output Account in product\u2019s internal category Inventory: to set as Stock Valuation Account in product\u2019s internal category Price Difference: to set in product\u2019s internal category or in product form as a specific replacement value","title":"Anglo-Saxon Accounting"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-bill-po-50-invoice-50","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) \u2001 19000 Deferred Tax Assets 4.50 2 Liabilities \u2001 21000 Accounts Payable 54.50 \u2001 23000 Stock Received (Stock Input) 50.00 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference","title":"Vendor Bill (PO $50, Invoice \u20ac50)"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-goods-reception-po-50-invoice-50_1","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory 50 \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 23000 Stock Received (Stock Input) 50 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference","title":"Vendor Goods Reception (PO $50, Invoice $50)"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-bill-po-48-invoice-50","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) \u2001 19000 Deferred Tax Assets 4.50 2 Liabilities \u2001 21000 Accounts Payable 54.50 \u2001 23000 Stock Received (Stock Input) 48.00 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference 2.00","title":"Vendor Bill (PO $48, Invoice $50)"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#vendor-goods-reception-po-48-invoice-50_1","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 48.00 \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 23000 Stock Received (Stock Input) $ 48.00 \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference","title":"Vendor Goods Reception (PO $48, Invoice $50)"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#customer-invoice-100-9-tax_1","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable $ 109.00 \u2001 14000 Inventory \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) $ 50.00 \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 23000 Stock Received (Stock Input) \u2001 26200 Deferred Tax Liabilities $ 9.00 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods $ 100.00 5 Expenses \u2001 51000 Cost of Good Sold $ 50.00 \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference","title":"Customer Invoice ($100 + 9% tax)"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#customer-shipping_1","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 50.00 \u2001 14100 Raw Materials Inventory \u2001 14600 Good Issued (Stock Output) $ 50.00 \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 23000 Stock Received (Stock Input) \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference","title":"Customer Shipping"},{"location":"01_application/02_finance/10_inventory/02_automated_inventory_valuation/#production-order","text":"Debit Credit 1 Assets \u2001 11000 Cash \u2001 13100 Accounts Receivable \u2001 14000 Inventory $ 50.00 \u2001 14100 Raw Materials Inventory $ 52.00 \u2001 14600 Good Issued (Stock Output) \u2001 19000 Deferred Tax Assets 2 Liabilities \u2001 21000 Accounts Payable \u2001 23000 Stock Received (Stock Input) \u2001 26200 Deferred Tax Liabilities 3 Equity \u2001 31000 Common Stock 4 Revenue \u2001 41000 Goods 5 Expenses \u2001 51000 Cost of Good Sold \u2001 52000 Manufacturing Overhead \u2001 53000 Price Difference $ 2.00","title":"Production Order"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/","text":"In this case, goods receipts and deliveries won\u2019t have any direct impact on your accounting books. Periodically, you create a manual journal entry representing the value of what you have in stock. To know that value, go in Inventory \u2023 Reporting \u2023 Inventory Valuation.This is the default configuration in PerfectWORK and it works out-of-the-box. Check following operations and find out how PerfectWORK is managing the accounting postings. Continental Accounting \u00b6 Vendor Bill \u00b6 Selling product for $50 with 7% GST Tax Debit Credit Assets: Inventory 50 Assets: Deferred Tax Assets 3.50 Liabilities: Accounts Payable 53.50 Note Configuration : - Purchased Goods : defined on the product or on the internal category of related product (Expense Account field) - Deferred Tax Assets : defined on the tax used on the purchase order line - Accounts Payable : defined on the vendor related to the bill Goods Receptions \u00b6 Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Create a journal entry to move the stock variation value from your Profit & Loss section to your assets. Debit Credit Assets: Inventory X Expenses: Inventory Variation X If the stock value decreased, the Inventory account is credited and the Inventory Variations debited. Customer Invoice \u00b6 Selling product for $100 with 7% GST Tax Debit Credit Revenue: Sold Goods 100 Liabilities: Deferred Tax Liabilities 9 Assets: Accounts Receivable 109 Note Configuration : - Revenues: defined on the product or on the internal category of related product (Income Account field) - Deferred Tax Liabilities: defined on the tax used on the invoice line - Accounts Receivable: defined on the customer (Receivable Account) The fiscal position used on the invoice may have a rule that replaces the Income Account or the tax defined on the product by another one. Customer Shipping \u00b6 Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Create a journal entry to move the stock variation value from your Profit & Loss section to your assets. Debit Credit Assets: Inventory X Expenses: Inventory Variation X If the stock value decreased, the Inventory account is credited and the Inventory Variations debited. Manufacturing Orders \u00b6 Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Create a journal entry to move the stock variation value from your Profit & Loss section to your assets. Debit Credit Assets: Inventory X Expenses: Inventory Variation X If the stock value decreased, the Inventory account is credited and the Inventory Variations debited. Anglo-Saxon Accounting \u00b6 Vendor Bill \u00b6 Selling product for $50 with 7% GST Tax Debit Credit Assets: Inventory 50 Assets: Deferred Tax Assets 3.50 Liabilities: Accounts Payable 53.50 Note Configuration : - Purchased Goods : defined on the product or on the internal category of related product (Expense Account field) - Deferred Tax Assets : defined on the tax used on the purchase order line - Accounts Payable : defined on the vendor related to the bill Goods Receptions \u00b6 Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Then you need to break down the purchase balance into both the inventory and the cost of goods sold using the following formula: Cost of goods sold (COGS) = Starting inventory value + Purchases \u2013 Closing inventory value To update the stock valuation in your books, record such an entry: Debit Credit Assets: Inventory (closing value) X Expenses: Cost of Good Sold X Expenses: Purchased Goods X Assets: Inventory (starting value) X Customer Invoice \u00b6 Selling product for $50 with 7% GST Tax Debit Credit Revenue: Sold Goods 100 Liabilities: Deferred Tax Liabilities 9 Assets: Accounts Receivable 109 Note Configuration : - Revenues: defined on the product or on the internal category of related product (Income Account field) - Deferred Tax Liabilities: defined on the tax used on the invoice line - Accounts Receivable: defined on the customer (Receivable Account) The fiscal position used on the invoice may have a rule that replaces the Income Account or the tax defined on the product by another one. Customer Shipping \u00b6 Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Then you need to break down the purchase balance into both the inventory and the cost of goods sold using the following formula: Cost of goods sold (COGS) = Starting inventory value + Purchases \u2013 Closing inventory value To update the stock valuation in your books, record such an entry: Debit Credit Assets: Inventory (closing value) X Expenses: Cost of Good Sold X Expenses: Purchased Goods X Assets: Inventory (starting value) X Manufacturing Orders \u00b6 Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Then you need to break down the purchase balance into both the inventory and the cost of goods sold using the following formula: Cost of goods sold (COGS) = Starting inventory value + Purchases \u2013 Closing inventory value To update the stock valuation in your books, record such an entry: Debit Credit Assets: Inventory (closing value) X Expenses: Cost of Good Sold X Expenses: Purchased Goods X Assets: Inventory (starting value) X","title":"Manual Inventory Valuation"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#continental-accounting","text":"","title":"Continental Accounting"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#vendor-bill","text":"Selling product for $50 with 7% GST Tax Debit Credit Assets: Inventory 50 Assets: Deferred Tax Assets 3.50 Liabilities: Accounts Payable 53.50 Note Configuration : - Purchased Goods : defined on the product or on the internal category of related product (Expense Account field) - Deferred Tax Assets : defined on the tax used on the purchase order line - Accounts Payable : defined on the vendor related to the bill","title":"Vendor Bill"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#goods-receptions","text":"Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Create a journal entry to move the stock variation value from your Profit & Loss section to your assets. Debit Credit Assets: Inventory X Expenses: Inventory Variation X If the stock value decreased, the Inventory account is credited and the Inventory Variations debited.","title":"Goods Receptions"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#customer-invoice","text":"Selling product for $100 with 7% GST Tax Debit Credit Revenue: Sold Goods 100 Liabilities: Deferred Tax Liabilities 9 Assets: Accounts Receivable 109 Note Configuration : - Revenues: defined on the product or on the internal category of related product (Income Account field) - Deferred Tax Liabilities: defined on the tax used on the invoice line - Accounts Receivable: defined on the customer (Receivable Account) The fiscal position used on the invoice may have a rule that replaces the Income Account or the tax defined on the product by another one.","title":"Customer Invoice"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#customer-shipping","text":"Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Create a journal entry to move the stock variation value from your Profit & Loss section to your assets. Debit Credit Assets: Inventory X Expenses: Inventory Variation X If the stock value decreased, the Inventory account is credited and the Inventory Variations debited.","title":"Customer Shipping"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#manufacturing-orders","text":"Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Create a journal entry to move the stock variation value from your Profit & Loss section to your assets. Debit Credit Assets: Inventory X Expenses: Inventory Variation X If the stock value decreased, the Inventory account is credited and the Inventory Variations debited.","title":"Manufacturing Orders"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#anglo-saxon-accounting","text":"","title":"Anglo-Saxon Accounting"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#vendor-bill_1","text":"Selling product for $50 with 7% GST Tax Debit Credit Assets: Inventory 50 Assets: Deferred Tax Assets 3.50 Liabilities: Accounts Payable 53.50 Note Configuration : - Purchased Goods : defined on the product or on the internal category of related product (Expense Account field) - Deferred Tax Assets : defined on the tax used on the purchase order line - Accounts Payable : defined on the vendor related to the bill","title":"Vendor Bill"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#goods-receptions_1","text":"Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Then you need to break down the purchase balance into both the inventory and the cost of goods sold using the following formula: Cost of goods sold (COGS) = Starting inventory value + Purchases \u2013 Closing inventory value To update the stock valuation in your books, record such an entry: Debit Credit Assets: Inventory (closing value) X Expenses: Cost of Good Sold X Expenses: Purchased Goods X Assets: Inventory (starting value) X","title":"Goods Receptions"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#customer-invoice_1","text":"Selling product for $50 with 7% GST Tax Debit Credit Revenue: Sold Goods 100 Liabilities: Deferred Tax Liabilities 9 Assets: Accounts Receivable 109 Note Configuration : - Revenues: defined on the product or on the internal category of related product (Income Account field) - Deferred Tax Liabilities: defined on the tax used on the invoice line - Accounts Receivable: defined on the customer (Receivable Account) The fiscal position used on the invoice may have a rule that replaces the Income Account or the tax defined on the product by another one.","title":"Customer Invoice"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#customer-shipping_1","text":"Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Then you need to break down the purchase balance into both the inventory and the cost of goods sold using the following formula: Cost of goods sold (COGS) = Starting inventory value + Purchases \u2013 Closing inventory value To update the stock valuation in your books, record such an entry: Debit Credit Assets: Inventory (closing value) X Expenses: Cost of Good Sold X Expenses: Purchased Goods X Assets: Inventory (starting value) X","title":"Customer Shipping"},{"location":"01_application/02_finance/10_inventory/03_manual_inventory_valuation/#manufacturing-orders_1","text":"Note There is no journal entry generated At the end of the month/year, your company does a physical inventory or just relies on the inventory in PerfectWORK to value the stock into your books. Then you need to break down the purchase balance into both the inventory and the cost of goods sold using the following formula: Cost of goods sold (COGS) = Starting inventory value + Purchases \u2013 Closing inventory value To update the stock valuation in your books, record such an entry: Debit Credit Assets: Inventory (closing value) X Expenses: Cost of Good Sold X Expenses: Purchased Goods X Assets: Inventory (starting value) X","title":"Manufacturing Orders"},{"location":"01_application/03_sales/","text":"Getting Started Sales Operations Sales Contracts Busienss Requirement Managing Products Managing Pricing Commissions Management Setting Up Taxes","title":"Sales & Distribution"},{"location":"01_application/04_marketing/","text":"Customer Relationship Management EMail Marketing SMS Marketing Social Media Events Management Customer Survey","title":"CRM and Marketing"},{"location":"01_application/05_website/","text":"Getting Started Website Builder eCommerce Progressive Web Application Search Engine eLearning Live Chat","title":"Website & eCommerce"},{"location":"01_application/06_manufacturing/","text":"Getting Started Purchase Management Production Management Demand Driven Material Requirements Planning Maintenance RMA (Return Merchandise Authorization) Warehouse Management Shipping Advance Route Barcodes","title":"Manufacturing and Warehousing"},{"location":"01_application/07_supply_chain/","text":"Getting Started Fleet Tracking","title":"Supply Chain and Logistics"},{"location":"01_application/08_human_resources/","text":"Getting Started Recruitment Employee Management Attendance Leave Expenses Payroll Skill Management In-Country Localization","title":"Human Resources"},{"location":"01_application/09_customer_services/","text":"Getting Started Appointments Project Management Timesheet Help Desk Field Services","title":"Customer Services"},{"location":"02_solution_guide/","text":"Industrial Solutions Clinic Management Membership Management Internal Management System (ISO)","title":"Configuration Guide"},{"location":"02_solution_guide/01_clinic_management/","text":"Getting Started Patients Appointments","title":"Clinic Management"},{"location":"02_solution_guide/02_mentoring/","text":"Getting Started Membership Mentor - Mentee Management","title":"Mentoring & Couching"},{"location":"03_system_guide/","text":"For Developer and System Engineers","title":"Configuration Guide"},{"location":"04_developer/","text":"Development Guide External API","title":"Developer Guide"},{"location":"04_developer/09_external_api/","text":"Introduction \u00b6 PerfectWORK is usually extended internally via modules, but many of its features and all of its data are also available from the outside for external analysis or integration with various tools. Part of the Models API is easily available over XML-RPC and accessible from a variety of languages. Connection \u00b6 Configuration \u00b6 If you already have an PerfectWORK server installed, you can just use its parameters Info To make exploration simpler, you can also ask https://demo.perfectwork.app for a test database. Python Ruby PHP Java import xmlrpc.client info = xmlrpc . client . ServerProxy ( 'https://demo.perfectwork.app/start' ) . start () url , db , username , password = info [ 'host' ], info [ 'database' ], info [ 'user' ], info [ 'password' ] require \"xmlrpc/client\" info = XMLRPC :: Client . new2 ( 'https://demo.perfectwork.app/start' ) . call ( 'start' ) url , db , username , password = info [ 'host' ] , info [ 'database' ] , info [ 'user' ] , info [ 'password' ] require_once('ripcord.php'); $info = ripcord::client('https://demo.perfectwork.app/start')->start(); list($url, $db, $username, $password) = array($info['host'], $info['database'], $info['user'], $info['password']); final XmlRpcClient client = new XmlRpcClient (); final XmlRpcClientConfigImpl start_config = new XmlRpcClientConfigImpl (); start_config . setServerURL ( new URL ( \"https://demo.perfectwork.app/start\" )); final Map < String , String > info = ( Map < String , String > ) client . execute ( start_config , \"start\" , emptyList ()); final String url = info . get ( \"host\" ), db = info . get ( \"database\" ), username = info . get ( \"user\" ), password = info . get ( \"password\" ); Note These examples use the Apache XML-RPC library. The examples do not include imports as these imports couldn\u2019t be pasted in the code. Logging in \u00b6 PerfectWORK requires users of the API to be authenticated before they can query most data. The xmlrpc/2/common endpoint provides meta-calls which don\u2019t require authentication, such as the authentication itself or fetching version information. To verify if the connection information is correct before trying to authenticate, the simplest call is to ask for the server\u2019s version. The authentication itself is done through the authenticate function and returns a user identifier ( uid ) used in authenticated calls instead of the login. Python Ruby PHP Java common = xmlrpc . client . ServerProxy ( ' {} /xmlrpc/2/common' . format ( url )) common . version () common = XMLRPC :: Client . new2 ( \" #{ url } /xmlrpc/2/common\" ) common . call ( 'version' ) $common = ripcord::client(\"$url/xmlrpc/2/common\"); $common->version(); final XmlRpcClientConfigImpl common_config = new XmlRpcClientConfigImpl (); common_config . setServerURL ( new URL ( String . format ( \"%s/xmlrpc/2/common\" , url ))); client . execute ( common_config , \"version\" , emptyList ()); Result : { \"server_version\": \"13.0\", \"server_version_info\": [13, 0, 0, \"final\", 0], \"server_serie\": \"13.0\", \"protocol_version\": 1, } ` Python Ruby PHP Java uid = common . authenticate ( db , username , password , {}) uid = common . call ( 'authenticate' , db , username , password , {}) $uid = $common->authenticate($db, $username, $password, array()); int uid = ( int ) client . execute ( common_config , \"authenticate\" , asList ( db , username , password , emptyMap ())); Calling Methods \u00b6 The second endpoint is xmlrpc/2/object . It is used to call methods of PerfectWORK data models via the execute_kw RPC function. Each call to execute_kw takes the following parameters: the database to use, a string the user id (retrieved through authenticate ), an integer the user\u2019s password, a string the model name, a string the method name, a string an array/list of parameters passed by position a mapping/dict of parameters to pass by keyword (optional) Example For instance, to see if we can read the res.partner model, we can call check_access_rights with operation passed by position and raise_exception passed by keyword (in order to get a true/false result rather than true/error): Python Ruby PHP Java models = xmlrpc . client . ServerProxy ( ' {} /xmlrpc/2/object' . format ( url )) models . execute_kw ( db , uid , password , 'res.partner' , 'check_access_rights' , [ 'read' ], { 'raise_exception' : False }) models = XMLRPC :: Client . new2 ( \" #{ url } /xmlrpc/2/object\" ) . proxy models . execute_kw ( db , uid , password , 'res.partner' , 'check_access_rights' , [ 'read' ] , { raise_exception : false }) $models = ripcord::client(\"$url/xmlrpc/2/object\"); $models->execute_kw($db, $uid, $password, 'res.partner', 'check_access_rights', array('read'), array('raise_exception' => false)); final XmlRpcClient models = new XmlRpcClient () { setConfig ( new XmlRpcClientConfigImpl () { setServerURL ( new URL ( String . format ( \"%s/xmlrpc/2/object\" , url ))); }); }; models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"check_access_rights\" , asList ( \"read\" ), new HashMap () { put ( \"raise_exception\" , false ); } )); Result : true List Records \u00b6 Records can be listed and filtered via search() . search() takes a mandatory domain filter (possibly empty), and returns the database identifiers of all records matching the filter. Example To list customer companies, for instance: Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , True ]]]) models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , true ]]] ) $models->execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true)))); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))) ))); Result : [7, 18, 12, 14, 17, 19, 8, 31, 26, 16, 13, 20, 30, 22, 29, 15, 23, 28, 74] Pagination \u00b6 By default a search will return the ids of all records matching the condition, which may be a huge number. offset and limit parameters are available to only retrieve a subset of all matched records. Example To list customer companies, for instance: Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , True ]]], { 'offset' : 10 , 'limit' : 5 }) models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , true ]]] , { offset : 10 , limit : 5 }) $models->execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true))), array('offset'=>10, 'limit'=>5)); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))), new HashMap () { put ( \"offset\" , 10 ); put ( \"limit\" , 5 ); } ))); Result: [ 13 , 20 , 30 , 22 , 29 ] Count records \u00b6 Rather than retrieve a possibly gigantic list of records and count them, search_count() can be used to retrieve only the number of records matching the query. It takes the same domain filter as search() and no other parameter. Example To list customer companies, for instance: Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'search_count' , [[[ 'is_company' , '=' , True ]]]) models . execute_kw ( db , uid , password , 'res.partner' , 'search_count' , [[[ 'is_company' , '=' , true ]]] ) $models->execute_kw($db, $uid, $password, 'res.partner', 'search_count', array(array(array('is_company', '=', true)))); ( Integer ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search_count\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))) )); Result: 19 Note Calling search then search_count (or the other way around) may not yield coherent results if other users are using the server: stored data could have changed between the calls. Read records \u00b6 Record data are accessible via the read() method, which takes a list of ids (as returned by search() ), and optionally a list of fields to fetch. By default, it fetches all the fields the current user can read, which tends to be a huge amount. Example Python Ruby PHP Java ids = models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , True ]]], { 'limit' : 1 }) [ record ] = models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ]) # count the number of fields fetched by default len ( record ) ids = models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , true ]]] , { limit : 1 }) record = models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ] ) . first # count the number of fields fetched by default record . length $ids = $models->execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true))), array('limit'=>1)); $records = $models->execute_kw($db, $uid, $password, 'res.partner', 'read', array($ids)); // count the number of fields fetched by default count($records[0]); final List ids = asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))), new HashMap () { put ( \"limit\" , 1 ); }))); final Map record = ( Map )(( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"read\" , asList ( ids ) ) )) [ 0 ] ; // count the number of fields fetched by default record . size (); Result: 121 Conversely, picking only three fields deemed interesting. Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ], { 'fields' : [ 'name' , 'country_id' , 'comment' ]}) models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ] , { fields : %w(name country_id comment) }) $models->execute_kw($db, $uid, $password, 'res.partner', 'read', array($ids), array('fields'=>array('name', 'country_id', 'comment'))); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"read\" , asList ( ids ), new HashMap () { put ( \"fields\" , asList ( \"name\" , \"country_id\" , \"comment\" )); } ))); Result: [{ \"comment\" : false , \"country_id\" : [ 21 , \"Belgium\" ], \"id\" : 7 , \"name\" : \"Agrolait\" }] Note Even if the id field is not requested, it is always returned. List record fields \u00b6 fields_get() can be used to inspect a model\u2019s fields and check which ones seem to be of interest. Because it returns a large amount of meta-information (it is also used by client programs) it should be filtered before printing, the most interesting items for a human user are string (the field\u2019s label), help (a help text if available) and type (to know which values to expect, or to send when updating a record). Example Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'fields_get' , [], { 'attributes' : [ 'string' , 'help' , 'type' ]}) models . execute_kw ( db , uid , password , 'res.partner' , 'fields_get' , [] , { attributes : %w(string help type) }) $models->execute_kw($db, $uid, $password, 'res.partner', 'fields_get', array(), array('attributes' => array('string', 'help', 'type'))); ( Map < String , Map < String , Object >> ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"fields_get\" , emptyList (), new HashMap () { put ( \"attributes\" , asList ( \"string\" , \"help\" , \"type\" )); } )); Result: { \"ean13\" : { \"type\" : \"char\" , \"help\" : \"BarCode\" , \"string\" : \"EAN13\" }, \"property_account_position_id\" : { \"type\" : \"many2one\" , \"help\" : \"The fiscal position will determine taxes and accounts used for the partner.\" , \"string\" : \"Fiscal Position\" }, \"signup_valid\" : { \"type\" : \"boolean\" , \"help\" : \"\" , \"string\" : \"Signup Token is Valid\" }, \"date_localization\" : { \"type\" : \"date\" , \"help\" : \"\" , \"string\" : \"Geo Localization Date\" }, \"ref_company_ids\" : { \"type\" : \"one2many\" , \"help\" : \"\" , \"string\" : \"Companies that refers to partner\" }, \"sale_order_count\" : { \"type\" : \"integer\" , \"help\" : \"\" , \"string\" : \"# of Sales Order\" }, \"purchase_order_count\" : { \"type\" : \"integer\" , \"help\" : \"\" , \"string\" : \"# of Purchase Order\" }, Search and read \u00b6 Because it is a very common task, PerfectWORK provides a search_read() shortcut which, as its name suggests, is equivalent to a search() followed by a read() , but avoids having to perform two requests and keep ids around. Its arguments are similar to search() \u2019s, but it can also take a list of fields (like read() , if that list is not provided it will fetch all fields of matched records). Example Python Ruby PHP Java ids = models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , True ]]], { 'limit' : 1 }) [ record ] = models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ]) # count the number of fields fetched by default len ( record ) ids = models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , true ]]] , { limit : 1 }) record = models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ] ) . first # count the number of fields fetched by default record . length $ids = $models->execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true))), array('limit'=>1)); $records = $models->execute_kw($db, $uid, $password, 'res.partner', 'read', array($ids)); // count the number of fields fetched by default count($records[0]); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search_read\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))), new HashMap () { put ( \"fields\" , asList ( \"name\" , \"country_id\" , \"comment\" )); put ( \"limit\" , 5 ); } ))); Result: 121 Conversely, picking only three fields deemed interesting. Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'search_read' , [[[ 'is_company' , '=' , True ]]], { 'fields' : [ 'name' , 'country_id' , 'comment' ], 'limit' : 5 }) models . execute_kw ( db , uid , password , 'res.partner' , 'search_read' , [[[ 'is_company' , '=' , true ]]] , { fields : %w(name country_id comment) , limit : 5 }) $models->execute_kw($db, $uid, $password, 'res.partner', 'search_read', array(array(array('is_company', '=', true))), array('fields'=>array('name', 'country_id', 'comment'), 'limit'=>5)); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search_read\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))), new HashMap () { put ( \"fields\" , asList ( \"name\" , \"country_id\" , \"comment\" )); put ( \"limit\" , 5 ); } ))); Result: [ { \"comment\" : false , \"country_id\" : [ 21 , \"Belgium\" ], \"id\" : 7 , \"name\" : \"Agrolait\" }, { \"comment\" : false , \"country_id\" : [ 76 , \"France\" ], \"id\" : 18 , \"name\" : \"Axelor\" }, { \"comment\" : false , \"country_id\" : [ 233 , \"United Kingdom\" ], \"id\" : 12 , \"name\" : \"Bank Wealthy and sons\" }, { \"comment\" : false , \"country_id\" : [ 105 , \"India\" ], \"id\" : 14 , \"name\" : \"Best Designers\" }, { \"comment\" : false , \"country_id\" : [ 76 , \"France\" ], \"id\" : 17 , \"name\" : \"Camptocamp\" } ] Create records \u00b6 Records of a model are created using create() . The method creates a single record and returns its database identifier. create() takes a mapping of fields to values, used to initialize the record. For any field which has a default value and is not set through the mapping argument, the default value will be used. Example Python Ruby PHP Java id = models . execute_kw ( db , uid , password , 'res.partner' , 'create' , [{ 'name' : \"New Partner\" }]) id = models . execute_kw ( db , uid , password , 'res.partner' , 'create' , [ { name : \"New Partner\" } ] ) $id = $models->execute_kw($db, $uid, $password, 'res.partner', 'create', array(array('name'=>\"New Partner\"))); final Integer id = ( Integer ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"create\" , asList ( new HashMap () { put ( \"name\" , \"New Partner\" ); }) )); Result: 121 Conversely, picking only three fields deemed interesting. Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'search_read' , [[[ 'is_company' , '=' , True ]]], { 'fields' : [ 'name' , 'country_id' , 'comment' ], 'limit' : 5 }) models . execute_kw ( db , uid , password , 'res.partner' , 'search_read' , [[[ 'is_company' , '=' , true ]]] , { fields : %w(name country_id comment) , limit : 5 }) $models->execute_kw($db, $uid, $password, 'res.partner', 'search_read', array(array(array('is_company', '=', true))), array('fields'=>array('name', 'country_id', 'comment'), 'limit'=>5)); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search_read\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))), new HashMap () { put ( \"fields\" , asList ( \"name\" , \"country_id\" , \"comment\" )); put ( \"limit\" , 5 ); } ))); Result: 78 Warning While most value types are what would expect (integer for Integer, string for Char or Text) Date , Datetime and Binary fields use string values One2many and Many2many use a special command protocol detailed in the documentation to the write method . Update records \u00b6 Records can be updated using write(). It takes a list of records to update and a mapping of updated fields to values similar to create(). Multiple records can be updated simultaneously, but they will all get the same values for the fields being set. It is not possible to perform \u201ccomputed\u201d updates (where the value being set depends on an existing value of a record). Example Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'write' , [[ id ], { 'name' : \"Newer partner\" }]) # get record name after having changed it models . execute_kw ( db , uid , password , 'res.partner' , 'name_get' , [[ id ]]) models . execute_kw ( db , uid , password , 'res.partner' , 'write' , [[ id ] , { name : \"Newer partner\" } ] ) # get record name after having changed it models . execute_kw ( db , uid , password , 'res.partner' , 'name_get' , [[ id ]] ) $models->execute_kw($db, $uid, $password, 'res.partner', 'write', array(array($id), array('name'=>\"Newer partner\"))); // get record name after having changed it $models->execute_kw($db, $uid, $password,'res.partner', 'name_get', array(array($id))); models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"write\" , asList ( asList ( id ), new HashMap () { put ( \"name\" , \"Newer Partner\" ); } ) )); // get record name after having changed it asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"name_get\" , asList ( asList ( id )) ))); Result: [[ 78 , \"Newer partner\" ]] Delete records \u00b6 Records can be deleted in bulk by providing their ids to unlink() . Example Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'unlink' , [[ id ]]) # check if the deleted record is still in the database models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'id' , '=' , id ]]]) models . execute_kw ( db , uid , password , 'res.partner' , 'unlink' , [[ id ]] ) # check if the deleted record is still in the database models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'id' , '=' , id ]]] ) $models->execute_kw($db, $uid, $password, 'res.partner', 'unlink', array(array($id))); // check if the deleted record is still in the database $models->execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('id', '=', $id)))); models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"unlink\" , asList ( asList ( id )))); // check if the deleted record is still in the database asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search\" , asList ( asList ( asList ( \"id\" , \"=\" , 78 ))) ))); Result: [] Inspection and introspection \u00b6 While we previously used fields_get() to query a model and have been using an arbitrary model from the start, PerfectWORK stores most model metadata inside a few meta-models which allow both querying the system and altering models and fields (with some limitations) on the fly over XML-RPC. ir.model Provides information about PerfectWORK models via its various fields. name a human-readable description of the model model the name of each model in the system state whether the model was generated in Python code (base) or by creating an ir.model record (manual) field_id list of the model\u2019s fields through a One2many to ir.model.fields view_ids One2many to the Views defined for the model access_ids One2many relation to the Access Rights set on the model ir.model can be used to Query the system for installed models (as a precondition to operations on the model or to explore the system\u2019s content). Get information about a specific model (generally by listing the fields associated with it). Create new models dynamically over RPC. Important Custom model names must start with x_. The state must be provided and set to manual, otherwise the model will not be loaded. It is not possible to add new methods to a custom model, only fields. Example Python Ruby PHP Java models . execute_kw ( db , uid , password , 'ir.model' , 'create' , [{ 'name' : \"Custom Model\" , 'model' : \"x_custom_model\" , 'state' : 'manual' , }]) models . execute_kw ( db , uid , password , 'x_custom_model' , 'fields_get' , [], { 'attributes' : [ 'string' , 'help' , 'type' ]}) models . execute_kw ( db , uid , password , 'ir.model' , 'create' , [ { name : \"Custom Model\" , model : 'x_custom_model' , state : 'manual' } ] ) fields = models . execute_kw ( db , uid , password , 'x_custom_model' , 'fields_get' , [] , { attributes : %w(string help type) }) $models->execute_kw($db, $uid, $password, 'ir.model', 'create', array(array( 'name' => \"Custom Model\", 'model' => 'x_custom_model', 'state' => 'manual' ))); $models->execute_kw($db, $uid, $password, 'x_custom_model', 'fields_get', array(), array('attributes' => array('string', 'help', 'type'))); models . execute ( \"execute_kw\" , asList ( db , uid , password , \"ir.model\" , \"create\" , asList ( new HashMap < String , Object > () { put ( \"name\" , \"Custom Model\" ); put ( \"model\" , \"x_custom_model\" ); put ( \"state\" , \"manual\" ); }) )); final Object fields = models . execute ( \"execute_kw\" , asList ( db , uid , password , \"x_custom_model\" , \"fields_get\" , emptyList (), new HashMap < String , Object > () { put ( \"attributes\" , asList ( \"string\" , \"help\" , \"type\" )); } )); Result: { \"create_uid\" : { \"type\" : \"many2one\" , \"string\" : \"Created by\" }, \"create_date\" : { \"type\" : \"datetime\" , \"string\" : \"Created on\" }, \"__last_update\" : { \"type\" : \"datetime\" , \"string\" : \"Last Modified on\" }, \"write_uid\" : { \"type\" : \"many2one\" , \"string\" : \"Last Updated by\" }, \"write_date\" : { \"type\" : \"datetime\" , \"string\" : \"Last Updated on\" }, \"display_name\" : { \"type\" : \"char\" , \"string\" : \"Display Name\" }, \"id\" : { \"type\" : \"integer\" , \"string\" : \"Id\" } } ir.model.fields Provides information about the fields of PerfectWORK data models and allows adding custom fields without using Python code. model_id Many2one to ir.model to which the field belongs name the field\u2019s technical name (used in read or write) field_description the field\u2019s user-readable label (e.g. string in fields_get) ttype the type of field to create state whether the field was created via Python code (base) or via ir.model.fields (manual) required, readonly, translate enables the corresponding flag on the field groups field-level access control, a Many2many to res.groups selection, size, on_delete, relation, relation_field, domain type-specific properties and customizations, see the fields documentation for details Important Like custom models, only new fields created with state=\"manual\" are activated as actual fields on the model. Computed fields can not be added via ir.model.fields , some field meta-information (defaults, onchange) can not be set either. Example Python Ruby PHP Java id = models . execute_kw ( db , uid , password , 'ir.model' , 'create' , [{ 'name' : \"Custom Model\" , 'model' : \"x_custom\" , 'state' : 'manual' , }]) models . execute_kw ( db , uid , password , 'ir.model.fields' , 'create' , [{ 'model_id' : id , 'name' : 'x_name' , 'ttype' : 'char' , 'state' : 'manual' , 'required' : True , }]) record_id = models . execute_kw ( db , uid , password , 'x_custom' , 'create' , [{ 'x_name' : \"test record\" }]) models . execute_kw ( db , uid , password , 'x_custom' , 'read' , [[ record_id ]]) id = models . execute_kw ( db , uid , password , 'ir.model' , 'create' , [ { name : \"Custom Model\" , model : \"x_custom\" , state : 'manual' } ] ) models . execute_kw ( db , uid , password , 'ir.model.fields' , 'create' , [ { model_id : id , name : \"x_name\" , ttype : \"char\" , state : \"manual\" , required : true } ] ) record_id = models . execute_kw ( db , uid , password , 'x_custom' , 'create' , [ { x_name : \"test record\" } ] ) models . execute_kw ( db , uid , password , 'x_custom' , 'read' , [[ record_id ]] ) $id = $models->execute_kw($db, $uid, $password, 'ir.model', 'create', array(array( 'name' => \"Custom Model\", 'model' => 'x_custom', 'state' => 'manual' ))); $models->execute_kw($db, $uid, $password, 'ir.model.fields', 'create', array(array( 'model_id' => $id, 'name' => 'x_name', 'ttype' => 'char', 'state' => 'manual', 'required' => true ))); $record_id = $models->execute_kw($db, $uid, $password, 'x_custom', 'create', array(array('x_name' => \"test record\"))); $models->execute_kw($db, $uid, $password, 'x_custom', 'read', array(array($record_id))); final Integer id = ( Integer ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"ir.model\" , \"create\" , asList ( new HashMap < String , Object > () { put ( \"name\" , \"Custom Model\" ); put ( \"model\" , \"x_custom\" ); put ( \"state\" , \"manual\" ); }) )); models . execute ( \"execute_kw\" , asList ( db , uid , password , \"ir.model.fields\" , \"create\" , asList ( new HashMap < String , Object > () { put ( \"model_id\" , id ); put ( \"name\" , \"x_name\" ); put ( \"ttype\" , \"char\" ); put ( \"state\" , \"manual\" ); put ( \"required\" , true ); }) )); final Integer record_id = ( Integer ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"x_custom\" , \"create\" , asList ( new HashMap < String , Object > () { put ( \"x_name\" , \"test record\" ); }) )); client . execute ( \"execute_kw\" , asList ( db , uid , password , \"x_custom\" , \"read\" , asList ( asList ( record_id )) )); Result: [ { \"create_uid\" : [ 1 , \"Administrator\" ], \"x_name\" : \"test record\" , \"__last_update\" : \"2014-11-12 16:32:13\" , \"write_uid\" : [ 1 , \"Administrator\" ], \"write_date\" : \"2014-11-12 16:32:13\" , \"create_date\" : \"2014-11-12 16:32:13\" , \"id\" : 1 , \"display_name\" : \"test record\" } ]","title":"External API"},{"location":"04_developer/09_external_api/#introduction","text":"PerfectWORK is usually extended internally via modules, but many of its features and all of its data are also available from the outside for external analysis or integration with various tools. Part of the Models API is easily available over XML-RPC and accessible from a variety of languages.","title":"Introduction"},{"location":"04_developer/09_external_api/#connection","text":"","title":"Connection"},{"location":"04_developer/09_external_api/#configuration","text":"If you already have an PerfectWORK server installed, you can just use its parameters Info To make exploration simpler, you can also ask https://demo.perfectwork.app for a test database. Python Ruby PHP Java import xmlrpc.client info = xmlrpc . client . ServerProxy ( 'https://demo.perfectwork.app/start' ) . start () url , db , username , password = info [ 'host' ], info [ 'database' ], info [ 'user' ], info [ 'password' ] require \"xmlrpc/client\" info = XMLRPC :: Client . new2 ( 'https://demo.perfectwork.app/start' ) . call ( 'start' ) url , db , username , password = info [ 'host' ] , info [ 'database' ] , info [ 'user' ] , info [ 'password' ] require_once('ripcord.php'); $info = ripcord::client('https://demo.perfectwork.app/start')->start(); list($url, $db, $username, $password) = array($info['host'], $info['database'], $info['user'], $info['password']); final XmlRpcClient client = new XmlRpcClient (); final XmlRpcClientConfigImpl start_config = new XmlRpcClientConfigImpl (); start_config . setServerURL ( new URL ( \"https://demo.perfectwork.app/start\" )); final Map < String , String > info = ( Map < String , String > ) client . execute ( start_config , \"start\" , emptyList ()); final String url = info . get ( \"host\" ), db = info . get ( \"database\" ), username = info . get ( \"user\" ), password = info . get ( \"password\" ); Note These examples use the Apache XML-RPC library. The examples do not include imports as these imports couldn\u2019t be pasted in the code.","title":"Configuration"},{"location":"04_developer/09_external_api/#logging-in","text":"PerfectWORK requires users of the API to be authenticated before they can query most data. The xmlrpc/2/common endpoint provides meta-calls which don\u2019t require authentication, such as the authentication itself or fetching version information. To verify if the connection information is correct before trying to authenticate, the simplest call is to ask for the server\u2019s version. The authentication itself is done through the authenticate function and returns a user identifier ( uid ) used in authenticated calls instead of the login. Python Ruby PHP Java common = xmlrpc . client . ServerProxy ( ' {} /xmlrpc/2/common' . format ( url )) common . version () common = XMLRPC :: Client . new2 ( \" #{ url } /xmlrpc/2/common\" ) common . call ( 'version' ) $common = ripcord::client(\"$url/xmlrpc/2/common\"); $common->version(); final XmlRpcClientConfigImpl common_config = new XmlRpcClientConfigImpl (); common_config . setServerURL ( new URL ( String . format ( \"%s/xmlrpc/2/common\" , url ))); client . execute ( common_config , \"version\" , emptyList ()); Result : { \"server_version\": \"13.0\", \"server_version_info\": [13, 0, 0, \"final\", 0], \"server_serie\": \"13.0\", \"protocol_version\": 1, } ` Python Ruby PHP Java uid = common . authenticate ( db , username , password , {}) uid = common . call ( 'authenticate' , db , username , password , {}) $uid = $common->authenticate($db, $username, $password, array()); int uid = ( int ) client . execute ( common_config , \"authenticate\" , asList ( db , username , password , emptyMap ()));","title":"Logging in"},{"location":"04_developer/09_external_api/#calling-methods","text":"The second endpoint is xmlrpc/2/object . It is used to call methods of PerfectWORK data models via the execute_kw RPC function. Each call to execute_kw takes the following parameters: the database to use, a string the user id (retrieved through authenticate ), an integer the user\u2019s password, a string the model name, a string the method name, a string an array/list of parameters passed by position a mapping/dict of parameters to pass by keyword (optional) Example For instance, to see if we can read the res.partner model, we can call check_access_rights with operation passed by position and raise_exception passed by keyword (in order to get a true/false result rather than true/error): Python Ruby PHP Java models = xmlrpc . client . ServerProxy ( ' {} /xmlrpc/2/object' . format ( url )) models . execute_kw ( db , uid , password , 'res.partner' , 'check_access_rights' , [ 'read' ], { 'raise_exception' : False }) models = XMLRPC :: Client . new2 ( \" #{ url } /xmlrpc/2/object\" ) . proxy models . execute_kw ( db , uid , password , 'res.partner' , 'check_access_rights' , [ 'read' ] , { raise_exception : false }) $models = ripcord::client(\"$url/xmlrpc/2/object\"); $models->execute_kw($db, $uid, $password, 'res.partner', 'check_access_rights', array('read'), array('raise_exception' => false)); final XmlRpcClient models = new XmlRpcClient () { setConfig ( new XmlRpcClientConfigImpl () { setServerURL ( new URL ( String . format ( \"%s/xmlrpc/2/object\" , url ))); }); }; models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"check_access_rights\" , asList ( \"read\" ), new HashMap () { put ( \"raise_exception\" , false ); } )); Result : true","title":"Calling Methods"},{"location":"04_developer/09_external_api/#list-records","text":"Records can be listed and filtered via search() . search() takes a mandatory domain filter (possibly empty), and returns the database identifiers of all records matching the filter. Example To list customer companies, for instance: Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , True ]]]) models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , true ]]] ) $models->execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true)))); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))) ))); Result : [7, 18, 12, 14, 17, 19, 8, 31, 26, 16, 13, 20, 30, 22, 29, 15, 23, 28, 74]","title":"List Records"},{"location":"04_developer/09_external_api/#pagination","text":"By default a search will return the ids of all records matching the condition, which may be a huge number. offset and limit parameters are available to only retrieve a subset of all matched records. Example To list customer companies, for instance: Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , True ]]], { 'offset' : 10 , 'limit' : 5 }) models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , true ]]] , { offset : 10 , limit : 5 }) $models->execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true))), array('offset'=>10, 'limit'=>5)); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))), new HashMap () { put ( \"offset\" , 10 ); put ( \"limit\" , 5 ); } ))); Result: [ 13 , 20 , 30 , 22 , 29 ]","title":"Pagination"},{"location":"04_developer/09_external_api/#count-records","text":"Rather than retrieve a possibly gigantic list of records and count them, search_count() can be used to retrieve only the number of records matching the query. It takes the same domain filter as search() and no other parameter. Example To list customer companies, for instance: Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'search_count' , [[[ 'is_company' , '=' , True ]]]) models . execute_kw ( db , uid , password , 'res.partner' , 'search_count' , [[[ 'is_company' , '=' , true ]]] ) $models->execute_kw($db, $uid, $password, 'res.partner', 'search_count', array(array(array('is_company', '=', true)))); ( Integer ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search_count\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))) )); Result: 19 Note Calling search then search_count (or the other way around) may not yield coherent results if other users are using the server: stored data could have changed between the calls.","title":"Count records"},{"location":"04_developer/09_external_api/#read-records","text":"Record data are accessible via the read() method, which takes a list of ids (as returned by search() ), and optionally a list of fields to fetch. By default, it fetches all the fields the current user can read, which tends to be a huge amount. Example Python Ruby PHP Java ids = models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , True ]]], { 'limit' : 1 }) [ record ] = models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ]) # count the number of fields fetched by default len ( record ) ids = models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , true ]]] , { limit : 1 }) record = models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ] ) . first # count the number of fields fetched by default record . length $ids = $models->execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true))), array('limit'=>1)); $records = $models->execute_kw($db, $uid, $password, 'res.partner', 'read', array($ids)); // count the number of fields fetched by default count($records[0]); final List ids = asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))), new HashMap () { put ( \"limit\" , 1 ); }))); final Map record = ( Map )(( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"read\" , asList ( ids ) ) )) [ 0 ] ; // count the number of fields fetched by default record . size (); Result: 121 Conversely, picking only three fields deemed interesting. Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ], { 'fields' : [ 'name' , 'country_id' , 'comment' ]}) models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ] , { fields : %w(name country_id comment) }) $models->execute_kw($db, $uid, $password, 'res.partner', 'read', array($ids), array('fields'=>array('name', 'country_id', 'comment'))); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"read\" , asList ( ids ), new HashMap () { put ( \"fields\" , asList ( \"name\" , \"country_id\" , \"comment\" )); } ))); Result: [{ \"comment\" : false , \"country_id\" : [ 21 , \"Belgium\" ], \"id\" : 7 , \"name\" : \"Agrolait\" }] Note Even if the id field is not requested, it is always returned.","title":"Read records"},{"location":"04_developer/09_external_api/#list-record-fields","text":"fields_get() can be used to inspect a model\u2019s fields and check which ones seem to be of interest. Because it returns a large amount of meta-information (it is also used by client programs) it should be filtered before printing, the most interesting items for a human user are string (the field\u2019s label), help (a help text if available) and type (to know which values to expect, or to send when updating a record). Example Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'fields_get' , [], { 'attributes' : [ 'string' , 'help' , 'type' ]}) models . execute_kw ( db , uid , password , 'res.partner' , 'fields_get' , [] , { attributes : %w(string help type) }) $models->execute_kw($db, $uid, $password, 'res.partner', 'fields_get', array(), array('attributes' => array('string', 'help', 'type'))); ( Map < String , Map < String , Object >> ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"fields_get\" , emptyList (), new HashMap () { put ( \"attributes\" , asList ( \"string\" , \"help\" , \"type\" )); } )); Result: { \"ean13\" : { \"type\" : \"char\" , \"help\" : \"BarCode\" , \"string\" : \"EAN13\" }, \"property_account_position_id\" : { \"type\" : \"many2one\" , \"help\" : \"The fiscal position will determine taxes and accounts used for the partner.\" , \"string\" : \"Fiscal Position\" }, \"signup_valid\" : { \"type\" : \"boolean\" , \"help\" : \"\" , \"string\" : \"Signup Token is Valid\" }, \"date_localization\" : { \"type\" : \"date\" , \"help\" : \"\" , \"string\" : \"Geo Localization Date\" }, \"ref_company_ids\" : { \"type\" : \"one2many\" , \"help\" : \"\" , \"string\" : \"Companies that refers to partner\" }, \"sale_order_count\" : { \"type\" : \"integer\" , \"help\" : \"\" , \"string\" : \"# of Sales Order\" }, \"purchase_order_count\" : { \"type\" : \"integer\" , \"help\" : \"\" , \"string\" : \"# of Purchase Order\" },","title":"List record fields"},{"location":"04_developer/09_external_api/#search-and-read","text":"Because it is a very common task, PerfectWORK provides a search_read() shortcut which, as its name suggests, is equivalent to a search() followed by a read() , but avoids having to perform two requests and keep ids around. Its arguments are similar to search() \u2019s, but it can also take a list of fields (like read() , if that list is not provided it will fetch all fields of matched records). Example Python Ruby PHP Java ids = models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , True ]]], { 'limit' : 1 }) [ record ] = models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ]) # count the number of fields fetched by default len ( record ) ids = models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'is_company' , '=' , true ]]] , { limit : 1 }) record = models . execute_kw ( db , uid , password , 'res.partner' , 'read' , [ ids ] ) . first # count the number of fields fetched by default record . length $ids = $models->execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('is_company', '=', true))), array('limit'=>1)); $records = $models->execute_kw($db, $uid, $password, 'res.partner', 'read', array($ids)); // count the number of fields fetched by default count($records[0]); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search_read\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))), new HashMap () { put ( \"fields\" , asList ( \"name\" , \"country_id\" , \"comment\" )); put ( \"limit\" , 5 ); } ))); Result: 121 Conversely, picking only three fields deemed interesting. Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'search_read' , [[[ 'is_company' , '=' , True ]]], { 'fields' : [ 'name' , 'country_id' , 'comment' ], 'limit' : 5 }) models . execute_kw ( db , uid , password , 'res.partner' , 'search_read' , [[[ 'is_company' , '=' , true ]]] , { fields : %w(name country_id comment) , limit : 5 }) $models->execute_kw($db, $uid, $password, 'res.partner', 'search_read', array(array(array('is_company', '=', true))), array('fields'=>array('name', 'country_id', 'comment'), 'limit'=>5)); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search_read\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))), new HashMap () { put ( \"fields\" , asList ( \"name\" , \"country_id\" , \"comment\" )); put ( \"limit\" , 5 ); } ))); Result: [ { \"comment\" : false , \"country_id\" : [ 21 , \"Belgium\" ], \"id\" : 7 , \"name\" : \"Agrolait\" }, { \"comment\" : false , \"country_id\" : [ 76 , \"France\" ], \"id\" : 18 , \"name\" : \"Axelor\" }, { \"comment\" : false , \"country_id\" : [ 233 , \"United Kingdom\" ], \"id\" : 12 , \"name\" : \"Bank Wealthy and sons\" }, { \"comment\" : false , \"country_id\" : [ 105 , \"India\" ], \"id\" : 14 , \"name\" : \"Best Designers\" }, { \"comment\" : false , \"country_id\" : [ 76 , \"France\" ], \"id\" : 17 , \"name\" : \"Camptocamp\" } ]","title":"Search and read"},{"location":"04_developer/09_external_api/#create-records","text":"Records of a model are created using create() . The method creates a single record and returns its database identifier. create() takes a mapping of fields to values, used to initialize the record. For any field which has a default value and is not set through the mapping argument, the default value will be used. Example Python Ruby PHP Java id = models . execute_kw ( db , uid , password , 'res.partner' , 'create' , [{ 'name' : \"New Partner\" }]) id = models . execute_kw ( db , uid , password , 'res.partner' , 'create' , [ { name : \"New Partner\" } ] ) $id = $models->execute_kw($db, $uid, $password, 'res.partner', 'create', array(array('name'=>\"New Partner\"))); final Integer id = ( Integer ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"create\" , asList ( new HashMap () { put ( \"name\" , \"New Partner\" ); }) )); Result: 121 Conversely, picking only three fields deemed interesting. Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'search_read' , [[[ 'is_company' , '=' , True ]]], { 'fields' : [ 'name' , 'country_id' , 'comment' ], 'limit' : 5 }) models . execute_kw ( db , uid , password , 'res.partner' , 'search_read' , [[[ 'is_company' , '=' , true ]]] , { fields : %w(name country_id comment) , limit : 5 }) $models->execute_kw($db, $uid, $password, 'res.partner', 'search_read', array(array(array('is_company', '=', true))), array('fields'=>array('name', 'country_id', 'comment'), 'limit'=>5)); asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search_read\" , asList ( asList ( asList ( \"is_company\" , \"=\" , true ))), new HashMap () { put ( \"fields\" , asList ( \"name\" , \"country_id\" , \"comment\" )); put ( \"limit\" , 5 ); } ))); Result: 78 Warning While most value types are what would expect (integer for Integer, string for Char or Text) Date , Datetime and Binary fields use string values One2many and Many2many use a special command protocol detailed in the documentation to the write method .","title":"Create records"},{"location":"04_developer/09_external_api/#update-records","text":"Records can be updated using write(). It takes a list of records to update and a mapping of updated fields to values similar to create(). Multiple records can be updated simultaneously, but they will all get the same values for the fields being set. It is not possible to perform \u201ccomputed\u201d updates (where the value being set depends on an existing value of a record). Example Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'write' , [[ id ], { 'name' : \"Newer partner\" }]) # get record name after having changed it models . execute_kw ( db , uid , password , 'res.partner' , 'name_get' , [[ id ]]) models . execute_kw ( db , uid , password , 'res.partner' , 'write' , [[ id ] , { name : \"Newer partner\" } ] ) # get record name after having changed it models . execute_kw ( db , uid , password , 'res.partner' , 'name_get' , [[ id ]] ) $models->execute_kw($db, $uid, $password, 'res.partner', 'write', array(array($id), array('name'=>\"Newer partner\"))); // get record name after having changed it $models->execute_kw($db, $uid, $password,'res.partner', 'name_get', array(array($id))); models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"write\" , asList ( asList ( id ), new HashMap () { put ( \"name\" , \"Newer Partner\" ); } ) )); // get record name after having changed it asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"name_get\" , asList ( asList ( id )) ))); Result: [[ 78 , \"Newer partner\" ]]","title":"Update records"},{"location":"04_developer/09_external_api/#delete-records","text":"Records can be deleted in bulk by providing their ids to unlink() . Example Python Ruby PHP Java models . execute_kw ( db , uid , password , 'res.partner' , 'unlink' , [[ id ]]) # check if the deleted record is still in the database models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'id' , '=' , id ]]]) models . execute_kw ( db , uid , password , 'res.partner' , 'unlink' , [[ id ]] ) # check if the deleted record is still in the database models . execute_kw ( db , uid , password , 'res.partner' , 'search' , [[[ 'id' , '=' , id ]]] ) $models->execute_kw($db, $uid, $password, 'res.partner', 'unlink', array(array($id))); // check if the deleted record is still in the database $models->execute_kw($db, $uid, $password, 'res.partner', 'search', array(array(array('id', '=', $id)))); models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"unlink\" , asList ( asList ( id )))); // check if the deleted record is still in the database asList (( Object [] ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"res.partner\" , \"search\" , asList ( asList ( asList ( \"id\" , \"=\" , 78 ))) ))); Result: []","title":"Delete records"},{"location":"04_developer/09_external_api/#inspection-and-introspection","text":"While we previously used fields_get() to query a model and have been using an arbitrary model from the start, PerfectWORK stores most model metadata inside a few meta-models which allow both querying the system and altering models and fields (with some limitations) on the fly over XML-RPC. ir.model Provides information about PerfectWORK models via its various fields. name a human-readable description of the model model the name of each model in the system state whether the model was generated in Python code (base) or by creating an ir.model record (manual) field_id list of the model\u2019s fields through a One2many to ir.model.fields view_ids One2many to the Views defined for the model access_ids One2many relation to the Access Rights set on the model ir.model can be used to Query the system for installed models (as a precondition to operations on the model or to explore the system\u2019s content). Get information about a specific model (generally by listing the fields associated with it). Create new models dynamically over RPC. Important Custom model names must start with x_. The state must be provided and set to manual, otherwise the model will not be loaded. It is not possible to add new methods to a custom model, only fields. Example Python Ruby PHP Java models . execute_kw ( db , uid , password , 'ir.model' , 'create' , [{ 'name' : \"Custom Model\" , 'model' : \"x_custom_model\" , 'state' : 'manual' , }]) models . execute_kw ( db , uid , password , 'x_custom_model' , 'fields_get' , [], { 'attributes' : [ 'string' , 'help' , 'type' ]}) models . execute_kw ( db , uid , password , 'ir.model' , 'create' , [ { name : \"Custom Model\" , model : 'x_custom_model' , state : 'manual' } ] ) fields = models . execute_kw ( db , uid , password , 'x_custom_model' , 'fields_get' , [] , { attributes : %w(string help type) }) $models->execute_kw($db, $uid, $password, 'ir.model', 'create', array(array( 'name' => \"Custom Model\", 'model' => 'x_custom_model', 'state' => 'manual' ))); $models->execute_kw($db, $uid, $password, 'x_custom_model', 'fields_get', array(), array('attributes' => array('string', 'help', 'type'))); models . execute ( \"execute_kw\" , asList ( db , uid , password , \"ir.model\" , \"create\" , asList ( new HashMap < String , Object > () { put ( \"name\" , \"Custom Model\" ); put ( \"model\" , \"x_custom_model\" ); put ( \"state\" , \"manual\" ); }) )); final Object fields = models . execute ( \"execute_kw\" , asList ( db , uid , password , \"x_custom_model\" , \"fields_get\" , emptyList (), new HashMap < String , Object > () { put ( \"attributes\" , asList ( \"string\" , \"help\" , \"type\" )); } )); Result: { \"create_uid\" : { \"type\" : \"many2one\" , \"string\" : \"Created by\" }, \"create_date\" : { \"type\" : \"datetime\" , \"string\" : \"Created on\" }, \"__last_update\" : { \"type\" : \"datetime\" , \"string\" : \"Last Modified on\" }, \"write_uid\" : { \"type\" : \"many2one\" , \"string\" : \"Last Updated by\" }, \"write_date\" : { \"type\" : \"datetime\" , \"string\" : \"Last Updated on\" }, \"display_name\" : { \"type\" : \"char\" , \"string\" : \"Display Name\" }, \"id\" : { \"type\" : \"integer\" , \"string\" : \"Id\" } } ir.model.fields Provides information about the fields of PerfectWORK data models and allows adding custom fields without using Python code. model_id Many2one to ir.model to which the field belongs name the field\u2019s technical name (used in read or write) field_description the field\u2019s user-readable label (e.g. string in fields_get) ttype the type of field to create state whether the field was created via Python code (base) or via ir.model.fields (manual) required, readonly, translate enables the corresponding flag on the field groups field-level access control, a Many2many to res.groups selection, size, on_delete, relation, relation_field, domain type-specific properties and customizations, see the fields documentation for details Important Like custom models, only new fields created with state=\"manual\" are activated as actual fields on the model. Computed fields can not be added via ir.model.fields , some field meta-information (defaults, onchange) can not be set either. Example Python Ruby PHP Java id = models . execute_kw ( db , uid , password , 'ir.model' , 'create' , [{ 'name' : \"Custom Model\" , 'model' : \"x_custom\" , 'state' : 'manual' , }]) models . execute_kw ( db , uid , password , 'ir.model.fields' , 'create' , [{ 'model_id' : id , 'name' : 'x_name' , 'ttype' : 'char' , 'state' : 'manual' , 'required' : True , }]) record_id = models . execute_kw ( db , uid , password , 'x_custom' , 'create' , [{ 'x_name' : \"test record\" }]) models . execute_kw ( db , uid , password , 'x_custom' , 'read' , [[ record_id ]]) id = models . execute_kw ( db , uid , password , 'ir.model' , 'create' , [ { name : \"Custom Model\" , model : \"x_custom\" , state : 'manual' } ] ) models . execute_kw ( db , uid , password , 'ir.model.fields' , 'create' , [ { model_id : id , name : \"x_name\" , ttype : \"char\" , state : \"manual\" , required : true } ] ) record_id = models . execute_kw ( db , uid , password , 'x_custom' , 'create' , [ { x_name : \"test record\" } ] ) models . execute_kw ( db , uid , password , 'x_custom' , 'read' , [[ record_id ]] ) $id = $models->execute_kw($db, $uid, $password, 'ir.model', 'create', array(array( 'name' => \"Custom Model\", 'model' => 'x_custom', 'state' => 'manual' ))); $models->execute_kw($db, $uid, $password, 'ir.model.fields', 'create', array(array( 'model_id' => $id, 'name' => 'x_name', 'ttype' => 'char', 'state' => 'manual', 'required' => true ))); $record_id = $models->execute_kw($db, $uid, $password, 'x_custom', 'create', array(array('x_name' => \"test record\"))); $models->execute_kw($db, $uid, $password, 'x_custom', 'read', array(array($record_id))); final Integer id = ( Integer ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"ir.model\" , \"create\" , asList ( new HashMap < String , Object > () { put ( \"name\" , \"Custom Model\" ); put ( \"model\" , \"x_custom\" ); put ( \"state\" , \"manual\" ); }) )); models . execute ( \"execute_kw\" , asList ( db , uid , password , \"ir.model.fields\" , \"create\" , asList ( new HashMap < String , Object > () { put ( \"model_id\" , id ); put ( \"name\" , \"x_name\" ); put ( \"ttype\" , \"char\" ); put ( \"state\" , \"manual\" ); put ( \"required\" , true ); }) )); final Integer record_id = ( Integer ) models . execute ( \"execute_kw\" , asList ( db , uid , password , \"x_custom\" , \"create\" , asList ( new HashMap < String , Object > () { put ( \"x_name\" , \"test record\" ); }) )); client . execute ( \"execute_kw\" , asList ( db , uid , password , \"x_custom\" , \"read\" , asList ( asList ( record_id )) )); Result: [ { \"create_uid\" : [ 1 , \"Administrator\" ], \"x_name\" : \"test record\" , \"__last_update\" : \"2014-11-12 16:32:13\" , \"write_uid\" : [ 1 , \"Administrator\" ], \"write_date\" : \"2014-11-12 16:32:13\" , \"create_date\" : \"2014-11-12 16:32:13\" , \"id\" : 1 , \"display_name\" : \"test record\" } ]","title":"Inspection and introspection"},{"location":"09_internal/","text":"Internal User Only Guide Backend View Migration","title":"Internal Use Only Guide"},{"location":"09_internal/09_backend_view/","text":"Internal User Only Guide Server Actions","title":"Backend View"},{"location":"09_internal/09_backend_view/10_actions/","text":"Server Action \u00b6 In PerfectWORK we can execute server actions, an intriguing feature using which the customers can meet their requirements. Let's discuss the functionality and how to use various parameters in server actions accordingly. Server Actions are actions that can be executed automatically. These actions are added to the \u2018Action\u2019 contextual menu. To create a server action create a data record in data.xml file as shown below: Server Action in XML <?xml version=\"1.0\" encoding=\"utf-8\"?> <odoo> <data> <record model= \"ir.actions.server\" id= \"action_working_on_something\" > <field name= \"name\" > ETL - Working On Something </field> <field name= \"model_id\" ref= \"model_res_partner\" /> <field name= \"binding_model_id\" ref= \"model_res_partner\" /> <field name= \"binding_view_types\" > list </field> <field name= \"state\" > code </field> <field name= \"code\" > model.python_method() </field> </record> </data> </odoo> binding_model_id - Model linked to the action. name - Name of the server action. state - The field name \u2018state\u2019 specifies the type of server action. In the above example, we are going to call the model method - python_method() Note We can also add server actions easily via the user interface. In order to create a server action activate the developer mode, go to Settings \u2192 Technical \u2192Server Actions.","title":"Actions"},{"location":"09_internal/09_backend_view/10_actions/#server-action","text":"In PerfectWORK we can execute server actions, an intriguing feature using which the customers can meet their requirements. Let's discuss the functionality and how to use various parameters in server actions accordingly. Server Actions are actions that can be executed automatically. These actions are added to the \u2018Action\u2019 contextual menu. To create a server action create a data record in data.xml file as shown below: Server Action in XML <?xml version=\"1.0\" encoding=\"utf-8\"?> <odoo> <data> <record model= \"ir.actions.server\" id= \"action_working_on_something\" > <field name= \"name\" > ETL - Working On Something </field> <field name= \"model_id\" ref= \"model_res_partner\" /> <field name= \"binding_model_id\" ref= \"model_res_partner\" /> <field name= \"binding_view_types\" > list </field> <field name= \"state\" > code </field> <field name= \"code\" > model.python_method() </field> </record> </data> </odoo> binding_model_id - Model linked to the action. name - Name of the server action. state - The field name \u2018state\u2019 specifies the type of server action. In the above example, we are going to call the model method - python_method() Note We can also add server actions easily via the user interface. In order to create a server action activate the developer mode, go to Settings \u2192 Technical \u2192Server Actions.","title":"Server Action"},{"location":"09_internal/99_migration/","text":"This is a complicated process \u00b6","title":"Migration Guide (OpenUpgrade)"},{"location":"09_internal/99_migration/#this-is-a-complicated-process","text":"","title":"This is a complicated process"},{"location":"09_internal/99_migration/10_actions/","text":"OpenUpgrade from OCA \u00b6 Tools to upgrade Odoo instances from a major version to another This OCA project aims to provide an Open Source upgrade path for Odoo from one major Odoo version to the next one. As PerfectWORK is based on Odoo framework, table below shows the matching of Odoo version of PerfectWORK releases. PerfectWORK and Odoo version PerfectWORK Odoo Community 2.0 11.0 2.5 12.0 3.0 13.0 3.3 14.0 3.6 15.0 4.0 16.0 Introduction \u00b6 Odoo is an open source business application suite and development platform. This project, OpenUpgrade, aims to provide an Open Source upgrade path for Odoo. This is a community initiative, as the open source version of Odoo does not support migrations from one major release to another. Instead, migrations are part of a support package sold by Odoo SA. Note that the name of the project refers to the old name of Odoo, OpenERP. The project is hosted as two separate GitHub projects https://github.com/OCA/openupgrade The branches in the first project contain the framework, as well as the database analysis and the migration scripts. https://github.com/OCA/openupgradelib The second project contains a library with helper functions. It can be used in the migration of any Odoo module. Changes in OpenUpgrade for PW 3.3 Before Odoo 14.0, the branches in https://github.com/OCA/openupgrade contain copies (or forks in Git terminology) of the Odoo main project, but with extra commits that include the framework, and the analysis and the migration scripts for each module. Migrating your database \u00b6 Check out the code manually and upgrade your database by calling odoo-bin, (or openerp-server) directly. You will want to do this when you are working on developing migration scripts for uncovered modules. Get the code \u00b6 OpenUpgrade \u00b6 PerfectWORK 3.3 Make the openupgrade_framework and the openupgrade_scripts modules available in the addons path in the Odoo instance of the new version. Or, for older versions: check out the OpenUpgrade source code from Github for the branches you need. Each branch migrates to its version from the previous version, so branch 13.0 migrates from 12.0 to 13.0. If you are migrating across multiple versions, you need to run each version of OpenUpgrade in order. Skipping versions is not supported . The OpenUpgrade repository includes both openupgrade_framework and openupgrade_scripts: https://github.com/OCA/openupgrade openupgradelib \u00b6 When installing the openupgradelib make sure you check out the latest version from github to get the latest updates and fixes: pip install git+https://github.com/OCA/openupgradelib.git@master#egg = openupgradelib Check migration scripts for installed modules \u00b6 Check if there are migration scripts provided for the set of modules that are installed in your Odoo database. If there are modules for which no migration scripts have been developed yet, your migration may fail or the integrity of your database may be lacking. Check the module coverage in this documentation under Module coverage and refer to the Migration script development documentation to add the missing migration scripts. The simplest way to do this by running the following command: ./odoo-bin -c pw.conf -d [ database ] -u all Remove modules not available \u00b6 You may need to remove those modules, which are obselete in the next major version backend theme ( pw_backend_theme ) OCA web_responsive module Flectra converted modules website and related modules Clean up database \u00b6 May need to install the following module for database cleanup https://apps.odoo.com/apps/modules/11.0/database_cleanup/ OCA and SYC modules \u00b6 Please ensure all the addons for the database are located in the addons path ( PW_ADDONS.2.5 ) If the module is not available at the higher version, you need to remove the modules or you need to write your own migration scripts for the module. Make a copy of the database \u00b6 Decide which database you are going to upgrade. You absolutely must make a backup of your live database before you start this process! Adjust the configuration for Odoo and OpenUpgrade \u00b6 Edit the configuration files and command line parameters to point to the database you are going to upgrade. The recommended command line parameters are the --update all --stop-after-init --load=base,web,openupgrade_framework flags. For versions earlier than 14.0 that are running the OpenUpgrade fork rather than Odoo itself, you do not pass the load parameter . Configuration options \u00b6 When migrating across several versions of Odoo, setting the target version as an environment variable allows OpenUpgrade to skip methods that are called in every version but really only need to run in the target version. Make the target version available to OpenUpgrade with: export OPENUPGRADE_TARGET_VERSION=13.0 (when migrating up to 13.0) Obsolete options in the Odoo configuration file\u00b6 \u00b6 Versions of OpenUpgrade earlier than 14.0 allow for the following configuration options. Add these options to a separate stanza in the server configuration file under a header [openupgrade] autoinstall - A dictionary with module name keys and lists of module names as values. If a key module is installed on your database, the modules from the value (and their dependencies) are selected for installation as well. force_deps - A dictionary with module name keys and lists of module names as values. If a key module is installed on your database, the modules from the value will be treated as a module dependency. With this directive, you can manipulate the order in which the modules are migrated. If the modules from the value are not already installed on your database, they will be selected for installation (as will their dependencies). Be careful not to introduce a circular dependency using this directive. Run the upgrade, fix data and repeat\u2026 \u00b6 Run the upgrade and check for errors. You will probably learn a lot about your data and have to do some manual clean up before and after the upgrade. Expect to repeat the process several times as you encounter errors, clean up your data, and try again. If necessary, ask for help or report bugs on Github. Write the missing migration scripts \u00b6 At this stage, if some of your modules don\u2019t have yet migration scripts, you might need to add them yourself. Read more about the development of migrations scripts in Migration script development","title":"Migrate from 2.0 to 2.5"},{"location":"09_internal/99_migration/10_actions/#openupgrade-from-oca","text":"Tools to upgrade Odoo instances from a major version to another This OCA project aims to provide an Open Source upgrade path for Odoo from one major Odoo version to the next one. As PerfectWORK is based on Odoo framework, table below shows the matching of Odoo version of PerfectWORK releases. PerfectWORK and Odoo version PerfectWORK Odoo Community 2.0 11.0 2.5 12.0 3.0 13.0 3.3 14.0 3.6 15.0 4.0 16.0","title":"OpenUpgrade from OCA"},{"location":"09_internal/99_migration/10_actions/#introduction","text":"Odoo is an open source business application suite and development platform. This project, OpenUpgrade, aims to provide an Open Source upgrade path for Odoo. This is a community initiative, as the open source version of Odoo does not support migrations from one major release to another. Instead, migrations are part of a support package sold by Odoo SA. Note that the name of the project refers to the old name of Odoo, OpenERP. The project is hosted as two separate GitHub projects https://github.com/OCA/openupgrade The branches in the first project contain the framework, as well as the database analysis and the migration scripts. https://github.com/OCA/openupgradelib The second project contains a library with helper functions. It can be used in the migration of any Odoo module. Changes in OpenUpgrade for PW 3.3 Before Odoo 14.0, the branches in https://github.com/OCA/openupgrade contain copies (or forks in Git terminology) of the Odoo main project, but with extra commits that include the framework, and the analysis and the migration scripts for each module.","title":"Introduction"},{"location":"09_internal/99_migration/10_actions/#migrating-your-database","text":"Check out the code manually and upgrade your database by calling odoo-bin, (or openerp-server) directly. You will want to do this when you are working on developing migration scripts for uncovered modules.","title":"Migrating your database"},{"location":"09_internal/99_migration/10_actions/#get-the-code","text":"","title":"Get the code"},{"location":"09_internal/99_migration/10_actions/#openupgrade","text":"PerfectWORK 3.3 Make the openupgrade_framework and the openupgrade_scripts modules available in the addons path in the Odoo instance of the new version. Or, for older versions: check out the OpenUpgrade source code from Github for the branches you need. Each branch migrates to its version from the previous version, so branch 13.0 migrates from 12.0 to 13.0. If you are migrating across multiple versions, you need to run each version of OpenUpgrade in order. Skipping versions is not supported . The OpenUpgrade repository includes both openupgrade_framework and openupgrade_scripts: https://github.com/OCA/openupgrade","title":"OpenUpgrade"},{"location":"09_internal/99_migration/10_actions/#openupgradelib","text":"When installing the openupgradelib make sure you check out the latest version from github to get the latest updates and fixes: pip install git+https://github.com/OCA/openupgradelib.git@master#egg = openupgradelib","title":"openupgradelib"},{"location":"09_internal/99_migration/10_actions/#check-migration-scripts-for-installed-modules","text":"Check if there are migration scripts provided for the set of modules that are installed in your Odoo database. If there are modules for which no migration scripts have been developed yet, your migration may fail or the integrity of your database may be lacking. Check the module coverage in this documentation under Module coverage and refer to the Migration script development documentation to add the missing migration scripts. The simplest way to do this by running the following command: ./odoo-bin -c pw.conf -d [ database ] -u all","title":"Check migration scripts for installed modules"},{"location":"09_internal/99_migration/10_actions/#remove-modules-not-available","text":"You may need to remove those modules, which are obselete in the next major version backend theme ( pw_backend_theme ) OCA web_responsive module Flectra converted modules website and related modules","title":"Remove modules not available"},{"location":"09_internal/99_migration/10_actions/#clean-up-database","text":"May need to install the following module for database cleanup https://apps.odoo.com/apps/modules/11.0/database_cleanup/","title":"Clean up database"},{"location":"09_internal/99_migration/10_actions/#oca-and-syc-modules","text":"Please ensure all the addons for the database are located in the addons path ( PW_ADDONS.2.5 ) If the module is not available at the higher version, you need to remove the modules or you need to write your own migration scripts for the module.","title":"OCA and SYC modules"},{"location":"09_internal/99_migration/10_actions/#make-a-copy-of-the-database","text":"Decide which database you are going to upgrade. You absolutely must make a backup of your live database before you start this process!","title":"Make a copy of the database"},{"location":"09_internal/99_migration/10_actions/#adjust-the-configuration-for-odoo-and-openupgrade","text":"Edit the configuration files and command line parameters to point to the database you are going to upgrade. The recommended command line parameters are the --update all --stop-after-init --load=base,web,openupgrade_framework flags. For versions earlier than 14.0 that are running the OpenUpgrade fork rather than Odoo itself, you do not pass the load parameter .","title":"Adjust the configuration for Odoo and OpenUpgrade"},{"location":"09_internal/99_migration/10_actions/#configuration-options","text":"When migrating across several versions of Odoo, setting the target version as an environment variable allows OpenUpgrade to skip methods that are called in every version but really only need to run in the target version. Make the target version available to OpenUpgrade with: export OPENUPGRADE_TARGET_VERSION=13.0 (when migrating up to 13.0)","title":"Configuration options"},{"location":"09_internal/99_migration/10_actions/#obsolete-options-in-the-odoo-configuration-file","text":"Versions of OpenUpgrade earlier than 14.0 allow for the following configuration options. Add these options to a separate stanza in the server configuration file under a header [openupgrade] autoinstall - A dictionary with module name keys and lists of module names as values. If a key module is installed on your database, the modules from the value (and their dependencies) are selected for installation as well. force_deps - A dictionary with module name keys and lists of module names as values. If a key module is installed on your database, the modules from the value will be treated as a module dependency. With this directive, you can manipulate the order in which the modules are migrated. If the modules from the value are not already installed on your database, they will be selected for installation (as will their dependencies). Be careful not to introduce a circular dependency using this directive.","title":"Obsolete options in the Odoo configuration file\u00b6"},{"location":"09_internal/99_migration/10_actions/#run-the-upgrade-fix-data-and-repeat","text":"Run the upgrade and check for errors. You will probably learn a lot about your data and have to do some manual clean up before and after the upgrade. Expect to repeat the process several times as you encounter errors, clean up your data, and try again. If necessary, ask for help or report bugs on Github.","title":"Run the upgrade, fix data and repeat\u2026"},{"location":"09_internal/99_migration/10_actions/#write-the-missing-migration-scripts","text":"At this stage, if some of your modules don\u2019t have yet migration scripts, you might need to add them yourself. Read more about the development of migrations scripts in Migration script development","title":"Write the missing migration scripts"},{"location":"09_internal/99_migration/15_faq/","text":"Database \u00b6 Table : base_module_uninstall \u00b6 Error Message psycopg2.errors.NotNullViolation: null value in column \"module_id\" of relation \"base_module_uninstall\" violates not-null constraint Solution Use database tool ( pgadmin or DBeave), go to table \"base_module_uninstall\", select Tool then Truncate Click Next Select Restart Identiy and Cascade","title":"Migration Issues to 2.5"},{"location":"09_internal/99_migration/15_faq/#database","text":"","title":"Database"},{"location":"09_internal/99_migration/15_faq/#table-base_module_uninstall","text":"Error Message psycopg2.errors.NotNullViolation: null value in column \"module_id\" of relation \"base_module_uninstall\" violates not-null constraint Solution Use database tool ( pgadmin or DBeave), go to table \"base_module_uninstall\", select Tool then Truncate Click Next Select Restart Identiy and Cascade","title":"Table : base_module_uninstall"}]}